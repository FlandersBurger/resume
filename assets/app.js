angular.module("app",["ui.router","ui.bootstrap","ngAnimate","ngSanitize","ngDragDrop","ngTagsInput","vcRecaptcha","chart.js","tc.chartjs"]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$urlServiceProvider","$locationProvider",function(e,t,a,n){t.otherwise("/home"),a.config.strictMode(!1),e.state("home",{url:"/home",templateUrl:"/home.html"}).state("policy",{url:"/policy",templateUrl:"/policy.html"}).state("print",{url:"/print",templateUrl:"/print.html"}).state("experience",{url:"/experience",controller:"ExperienceCtrl",templateUrl:"/experience.html"}).state("skills",{url:"/skills",controller:"SkillsCtrl",templateUrl:"/skills.html"}).state("hobbies",{url:"/hobbies",controller:"HobbiesCtrl",templateUrl:"/hobbies.html"}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"/contact.html"}).state("workout",{url:"/workout",controller:"WorkoutCtrl",templateUrl:"/workout.html"}).state("posts",{url:"/posts",controller:"PostsCtrl",templateUrl:"/posts.html"}).state("profile",{url:"/profile",controller:"ProfileCtrl",templateUrl:"/profile.html"}).state("lists",{url:"/lists",controller:"ListsCtrl",templateUrl:"lists.html"}).state("prioritize",{url:"/prioritize",controller:"PrioritizeCtrl",templateUrl:"prioritize.html"}).state("bubbles",{url:"/bubbles",controller:"BubblesCtrl",templateUrl:"bubbles.html"}).state("asteroids",{url:"/asteroids",controller:"AsteroidsCtrl",templateUrl:"asteroids.html"}).state("lemmings",{url:"/lemmings",controller:"LemmingsCtrl",templateUrl:"lemmings.html"}).state("bots",{url:"/bots",controller:"BotsCtrl",templateUrl:"bots.html"}),n.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("app").service("WebSocketSvc",["$rootScope","$timeout",function(a,t){var n,i=function(){(n=new WebSocket("https:"===window.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host)).onopen=function(){console.log("Websocket connected")},n.onclose=function(e){console.log("Websocket closed. Reconnecting..."),t(i,1e3)},n.onerror=function(e){console.log("Error: "+e+" - State: "+n.readyState)},n.onmessage=function(e){var t=JSON.parse(e.data);a.$broadcast("ws:"+t.topic,t.data)}};this.send=function(e,t){var a=JSON.stringify({topic:e,data:t});n.send(a)},this.connect=i}]).run(["WebSocketSvc",function(e){e.connect()}]),angular.module("app").controller("AppCtrl",["$scope","$location","LanguageSvc","UserSvc",function(a,e,t,n){function i(e){a.loggedIn||(window.localStorage.user=e._id,a.loggedIn=!0,a.currentUser=e,a.$broadcast("login"))}console.log("%cYou sneaky bugger!","font: 2em sans-serif; color: DodgerBlue; text-shadow: 2px 0 0 #444, -2px 0 0 #444, 0 2px 0 #444, 0 -2px 0 #444, 1px 1px #444, -1px -1px 0 #444, 1px -1px 0 #444, -1px 1px 0 #444;"),console.log("I'm glad you're curious whether something is popping up in here. I'm a bit of a stickler when it comes to messages in the console so I try to make sure only things I want are visible. That being said, if there is a big error here, I would really appreciate you telling me so I can get rid of it!"),console.log("The code for my resume is hosted on Github if you really want to go into all this! => https://github.com/FlandersBurger/resume"),$(window).load(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")}),a.themeCounter=6,a.today=new Date,a.year=a.today.getFullYear(),a.random=Math.floor(1e6*Math.random()),a.flipTheme=function(){$(".loading").show(),$(".content").hide(),setTimeout(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")},800),a.themeCounter=a.themeCounter<6?a.themeCounter+1:a.themeCounter=1},$.getJSON("/skills.json",function(e){a.skills=e.filter(function(e){return e.enabled})}),$.getJSON("/hobbies.json",function(e){a.hobbies=e}),$.getJSON("/experience.json",function(e){a.jobs=e,a.jobs.forEach(function(e){e.startDate=new Date(e.startDate),e.endDate&&(e.endDate=new Date(e.endDate))})}),a.getTimeSpan=function(e){return e.startDate.getFullYear()+(e.endDate?" - "+e.endDate.getFullYear():" - Today")},a.languages=t.languages,a.selectedLanguage=t.getLanguage(),a.selectLanguage=function(e){a.selectedLanguage=t.setLanguage(e)},a.hoverdiv=function(e,t){var a=e.clientX+"px",n=e.clientY+20+"px";document.getElementById(t);return $("#"+t).css("left",a),$("#"+t).css("top",n),$("#"+t).toggle(),!1},a.socialMedia=[{name:"linkedin",url:"https://www.linkedin.com/in/laurent-debacker-1633a916",icon:"fa-linkedin"},{name:"github",url:"https://github.com/FlandersBurger",icon:"fa-github"},{name:"jsfiddle",url:"https://jsfiddle.net/user/BelgoCanadian/fiddles/",icon:"fa-jsfiddle"},{name:"stackoverflow",url:"http://stackoverflow.com/users/1083923/belgocanadian",icon:"fa-stack-overflow"}],window.localStorage.user&&n.login(window.localStorage.user).then(function(e){i(e.data)}),a.$on("login",function(e,t){i(t)}),a.$on("update",function(e,t){a.currentUser=t,a.currentUser.birthDate=new Date(a.currentUser.birthDate),a.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),a.$on("loading",function(e,t){a.loading=!0,$("#loading-icon").show()}),a.$on("loaded",function(e,t){a.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),a.logout=function(){firebase.auth().signOut().then(function(){a.loggedIn=!1,window.localStorage.clear(),a.$broadcast("logout")}).catch(function(e){})},a.formatDate=function(e){return(e=new Date(e)).getDate()+"-"+["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]+"-"+e.getFullYear()}}]),angular.module("app").controller("AsteroidsCtrl",["$scope","GameSvc",function(n,t){n.announce=!1;var l=document.getElementById("asteroids-page"),i=l.getContext("2d");i.font="30px Comic Sans MS",i.fillStyle="red",i.textAlign="center";var o={},r={},s={},c={},a={},e=10,g=Math.floor(Math.random()*e),f=[{name:"speed",announcement:"Max Speed ⇧",cycle:{rows:1,columns:4,size:[14,35],i:0,direction:!0},img:new Image,activate:function(e){e.maxSpeed+=100}},{name:"cooldown",announcement:"Cooldown ⇩",cycle:{rows:1,columns:3,size:[17,17],i:0,direction:!0},img:new Image,activate:function(e){0<e.cooldown&&(e.cooldownTime-=1)}},{name:"range",announcement:"Firing Range ⇧",cycle:{rows:4,columns:1,size:[30,8],i:0,direction:!0},img:new Image,activate:function(e){e.range+=5}},{name:"shield",announcement:"Shield",cycle:{rows:5,columns:1,size:[19,19],i:0,direction:!0},img:new Image,activate:function(e){e.shield=!0}},{name:"nuke",announcement:"Nuke",cycle:{rows:1,columns:8,size:[15,15],i:0,direction:!0},img:new Image,activate:function(e){for(var t in r)r[t].explode();C(5)}}];f.forEach(function(e,t,a){a[t].img.src="asteroids/"+e.name+".png"});var u,d=new Image;function h(){n.playing?(a[32]&&0===u.cooldown&&u.shoot(),a[37]&&(0===u.rotation?u.rotation=360:u.rotation-=3),a[39]&&(360===u.rotation?u.rotation=0:u.rotation+=3),a[38]?u.speed<=u.maxSpeed&&(u.speed+=5):0<u.speed&&u.speed--,a[40]&&0<u.speed&&(u.speed-=2)):a[32]&&(n.playing=!0,n.score=0,g=Math.floor(Math.random()*e),n.$apply(),u=new m,n.score=0,C(5),function e(){if(Object.keys(r).length<200){var t=Math.round(1e8*Math.random());r[t]=new w(t)}n.playing&&setTimeout(function(){e()},n.score<1e3?1e3:n.score<2e3?900:n.score<3e3?800:n.score<4e3?700:n.score<5e3?600:n.score<6e3?500:n.score<7e3?400:n.score<8e3?300:200)}())}function m(){this.width=50,this.height=50,this.shield=!1,this.range=80,this.cannon={x:this.width/2-4.5,y:this.height/2-.078125*this.height},this.cooldown=0,this.cooldownTime=20,this.position=[l.width/2-this.width/2,l.height/2-this.height/2],this.img=new Image,this.img.src="asteroids/spaceship.png",this.speed=0,this.maxSpeed=1e3,this.angle=0,this.rotation=0,this.shoot=function(){this.cooldown=this.cooldownTime;var e=Math.round(1e8*Math.random());o[e]=new p(e,this)},this.move=function(){for(var e in this.shield&&(i.beginPath(),i.arc(this.position[0]+this.width/2,this.position[1]+this.height/2,30,0,2*Math.PI),i.fillStyle="rgb(35, 237, 86, 0.5)",i.strokeStyle="rgb(66, 168, 36, 0.8)",i.lineWidth=5,i.stroke(),i.fill()),r){var t=r[e];if(S(t,this)){if(!this.shield)return L();this.shield=!1,t.explode()}}this.angle=this.rotation,0<this.cooldown&&this.cooldown--,v(this)}}function p(e,t){this.id=e,this.position=[t.position[0]+t.cannon.x+t.cannon.x*Math.cos((t.rotation-90)*Math.PI/180),t.position[1]+t.cannon.y+t.cannon.y*Math.sin((t.rotation-90)*Math.PI/180)],this.width=9,this.height=15,this.angle=t.angle,this.rotation=t.rotation,this.speed=t.speed+500,this.lifespan=t.range,this.img=new Image,this.img.src="asteroids/shot.png",this.move=function(){this.lifespan--,v(this)}}function w(e){this.id=e,this.width=50*Math.random()+20,this.height=this.width,this.position=k(this.width,this.height),this.angle=360*Math.random(),this.rotation=360*Math.random(),this.rotationSpeed=6*Math.random()-3,this.speed=300*Math.random()+2,this.img=new Image,this.img.src="asteroids/asteroid"+(Math.round(6*Math.random())+1)+".png",this.explode=function(){return c[this.id]=new y(this),delete r[this.id]},this.move=function(){for(var e in this.rotation+=this.rotationSpeed,360<this.rotation?this.rotation=this.rotation-360:this.rotation<0&&(this.rotation=360+this.rotation),o){var t=o[e];if(S(t,this)){this.explode();var a=Math.floor((t.speed-500)/10+70-this.width);Math.floor((a+n.score)/100)>Math.floor(n.score/100)&&M(),n.score+=a,n.$apply(),delete o[e]}}v(this)}}function y(e){this.position=[e.position[0],e.position[1]],this.width=e.width,this.height=e.height,this.speed=0,this.angle=360*Math.random(),this.cycle={rows:6,columns:8,size:[256,256],i:0,direction:!0},this.lifespan=47,this.img=d,this.move=function(){this.lifespan--,v(this),this.cycle.direction?this.cycle.i++:this.cycle.i--}}function b(e){this.id=e,this.powerup=f[Math.floor(Math.random()*f.length)],this.cycle=this.powerup.cycle,this.lifespan=1e3,this.cycle.size[1]>this.cycle.size[0]?(this.height=40,this.width=Math.round(this.height/this.cycle.size[1]*this.cycle.size[0])):(this.width=40,this.height=Math.round(this.width/this.cycle.size[0]*this.cycle.size[1])),this.position=k(this.width,this.height),this.img=this.powerup.img,this.angle=360*Math.random(),this.speed=150*Math.random()+50;var t=5;this.move=function(){return this.lifespan<=0?delete s[this.id]:S(u,this)?(n.announce=!0,n.announcement=this.powerup.announcement,n.$apply(),setTimeout(function(){n.announce=!1,n.$apply()},1e3),this.powerup.activate(u),delete s[this.id]):(this.lifespan--,v(this),void(t<=0?(this.cycle.direction?this.cycle.i++:this.cycle.i--,t=5):t--))}}function v(e){if(e.position[0]+=e.speed/100*Math.cos((e.angle-90)*Math.PI/180),e.position[1]+=e.speed/100*Math.sin((e.angle-90)*Math.PI/180),e.position[0]>l.width?e.position[0]=-e.width:e.position[0]<-e.width&&(e.position[0]=l.width),e.position[1]>l.height?e.position[1]=-e.height:e.position[1]<-e.height&&(e.position[1]=l.height),i.save(),i.translate(e.position[0],e.position[1]),i.translate(e.width/2,e.height/2),i.rotate(e.rotation*Math.PI/180),e.cycle){var t=e.cycle.i%e.cycle.columns,a=Math.floor(e.cycle.i/e.cycle.columns);i.drawImage(e.img,e.cycle.size[0]*t,e.cycle.size[1]*a,e.cycle.size[0],e.cycle.size[1],-e.width/2,-e.height/2,e.width,e.height),e.cycle.i<=0?(e.cycle.i=0,e.cycle.direction=!0):e.cycle.i>=e.cycle.columns*e.cycle.rows&&(e.cycle.i=e.cycle.columns*e.cycle.rows-1,e.cycle.direction=!1)}else i.drawImage(e.img,-e.width/2,-e.height/2,e.width,e.height);i.restore()}function k(e,t){var a,n=2*Math.random(),i=2*Math.random(),o=0;return 1<=n?(a=Math.random()*l.width,o=1<=o?0-t:l.height):(o=Math.random()*l.height,a=1<=i?0-e:l.width),[a,o]}function S(e,t){return e.position[0]<t.position[0]+t.width&&t.position[0]<e.position[0]+e.width&&e.position[1]<t.position[1]+t.height&&t.position[1]<e.position[1]+e.height}function C(e){var t=0;do{var a=Math.round(1e8*Math.random());r[a]=new w(a)}while(t++<=e)}function M(){if(Object.keys(s).length<3){var e=Math.round(1e8*Math.random());s[e]=new b(e)}}function L(){for(var e in n.playing=!1,r)r[e].explode();o={},n.loggedIn?n.currentUser.highscore.asteroids<n.score&&(n.currentUser.highscore.asteroids=n.score,t.setHighscore("asteroids",n.currentUser._id,n.score)):n.highscore<n.score&&(n.highscore=n.score)}function $(){console.log(window.innerWidth),l.width=window.innerWidth,l.height=window.innerHeight-(l.width<=768?50:105)}d.src="asteroids/explosion.png",window.addEventListener("keydown",function(e){a[e.keyCode||e.which]=!0},!0),window.addEventListener("keyup",function(e){a[e.keyCode||e.which]=!1},!0),n.highscore=0,window.addEventListener("resize",$,!1),$(),requestAnimationFrame(function e(){i.clearRect(0,0,l.width,l.height);for(var t in o)o[t].lifespan<=0?delete o[t]:o[t].move();for(t in r)r[t].move();for(t in s)s[t].move();for(t in c)c[t].lifespan<=0?delete c[t]:c[t].move();h();if(n.playing)u.move();else{var a=i.createLinearGradient(0,0,l.width,0);a.addColorStop("0","rgb("+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+")"),a.addColorStop("0.25","rgb("+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+")"),a.addColorStop("0.5","rgb("+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+")"),a.addColorStop("0.75","rgb("+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+")"),a.addColorStop("1.0","rgb("+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+")"),i.fillStyle=a,i.font="60px Monoton",i.fillText("Asteroids",l.width/2-i.measureText("Asteroids").width/2,l.height/2),i.font="20px Aldrich",i.fillText("Press space to start",l.width/2-i.measureText("Press space to start").width/2,l.height/2+20),i.fillText("Designed and developed by Laurent Debacker",l.width/2-i.measureText("Designed and developed by Laurent Debacker").width/2,l.height-30)}I+=x?1:-1;100<I?x=!(I=100):I<0&&(x=!(I=0));requestAnimationFrame(e)});var I=0,x=!0;n.space=function(){return{backgroundImage:'url("asteroids/space'+g+'.jpg")'}}}]),angular.module("app").controller("BotsCtrl",["$scope","BotsSvc",function(a,t){function n(e){var t=$(e).css("background-color");$(e).animate({backgroundColor:"#FA8072"},100,function(){$(e).animate({backgroundColor:t},100)})}a.categories=["Music","Television","Movies","Entertainment","Geography","History","Science","Gaming","Sports","Religion","Art and Literature","Misc","Funny","Food and Drink","Society","Nature","Technology","Language","Business","Internet"],a.keyDown=function(e){switch((e=e||window.event).keyCode){case 9:$("#new-blurb").is(":focus")&&setTimeout(function(){a.addValue()},100);break;case 13:$("#new-blurb").is(":focus")?a.addValue():$("#new-value").is(":focus")&&$("#new-blurb").focus()}},a.categoryFilters=a.categories.map(function(e){return e}),a.categoryFilters.push("All"),a.categoryFilters.push("Blank"),a.categoryFilter="All",a.setCategoryFilter=function(e){a.categoryFilter=e},a.setUserFilter=function(e){a.userFilter=e},a.filteredLists=function(){return a.lists?a.lists.filter(function(e){return"All"===a.categoryFilter&&"All"===a.userFilter||("All"!==a.categoryFilter&&"All"===a.userFilter?e.category?e.category===a.categoryFilter:"Blank"===a.categoryFilter:"All"===a.categoryFilter&&"All"!==a.userFilter?e.creator===a.userFilter:e.category?e.category===a.categoryFilter&&e.creator===a.userFilter:"Blank"===a.categoryFilter&&e.creator===a.userFilter)}):[]},a.$on("login",function(e){a.getLists()}),a.sort=function(e){a.sortValue===e?a.sortDirection=!a.sortDirection:(a.sortValue=e,a.sortDirection=!0),a.sorter=(a.sortDirection?"+":"-")+a.sortValue},a.sortValue="date",a.sortDirection=!0,a.sortList="value",a.sort("date"),a.getCategoryCount=function(t){return"All"===t?a.filteredLists().length:a.lists?a.lists.filter(function(e){return e.category===t&&("All"===a.userFilter||e.creator.username===a.userFilter)}).length:0},a.getLists=function(){a.loading=!0,t.getLists(a.currentUser).then(function(e){a.lists=e.data,console.log(a.lists[0]),a.userFilters={},a.userFilters.All=a.lists.length,a.userFilters=a.lists.sort(function(e,t){return e.creator>t.creator}).reduce(function(e,t){return e[t.creator]||(e[t.creator]=0),e[t.creator]++,e},a.userFilters),a.userCount=Object.keys(a.userFilters).length,a.userFilter="All",a.loading=!1})},a.selectList=function(e){t.getList(e).then(function(e){a.selectedList=e.data,console.log(a.selectedList)})},a.selectCategory=function(e){a.selectedList.category=e,a.selectingCategory=!1},a.addList=function(){var e=_.find(a.lists,function(e){return!e._id});e?a.selectedList=e:(a.lists.unshift({name:"",creator:a.currentUser._id,date:new Date,values:[],answers:0}),a.selectedList=a.lists[0])},a.addValue=function(){a.newItem.value&&(a.newItem.creator=a.currentUser._id,a.selectedList.values.unshift(JSON.parse(JSON.stringify(a.newItem))),a.selectedList.answers++,a.newItem.value="",a.newItem.blurb="",10<=a.selectedList.values.length&&a.selectedList.name&&a.selectedList.category&&a.saveList(a.selectedList)),$("#new-value").focus()},a.reportList=function(e){t.reportList(a.currentUser,e)},a.saveList=function(e){e.values=e.values.filter(function(e){return e.value}),10<=e.values.length&&e.name&&e.category?(a.saving=!0,t.saveList(a.currentUser,e).then(function(e){a.getLists(),a.selectList(e.data),a.saving=!1},function(e){console.error(e),a.saving=!1})):e.values.length<10?alert("Lists must contain 10 or more values!"):e.name?n("#list-category"):n("#list-name")},a.deleteList=function(e){e._id?confirm("Are you sure you want to delete this list?")&&t.deleteList(e).then(function(e){a.getLists(),a.selectedList=null}):(a.lists=a.lists.filter(function(e){return e._id}),a.selectedList=null)},a.listButtonClass=function(e){var t=e.values,a=e.blurbs;return t===a&&e.description?"btn-default":0!==a||e.description?0===a&&e.description?"btn-info":"btn-primary":"btn-warning"}}]),angular.module("app").controller("BubblesCtrl",["$scope",function(e){var t=document.getElementById("bubbles-page"),a=t.getContext("2d"),n=[],i=["#ffc300","#ff5733","#c70039","#900c3e","#571845"];function o(){this.lifespan=0,this.radius=1,this.expanding=!0,this.speed=Math.round(3*Math.random()),this.circumference=Math.round(50*Math.random())+5,this.maxRadius=Math.round(200*Math.random())+20,this.x=Math.round(Math.random()*t.width),this.y=Math.round(Math.random()*t.height),this.vx=.5<=Math.random()?1:-1,this.vy=.5<=Math.random()?1:-1}requestAnimationFrame(function e(){n.push(new o),n=n.filter(function(e){return e.radius===e.maxRadius&&(e.expanding=!1),e.x+=e.vx*e.speed,e.y+=e.vy*e.speed,e.radius+=e.expanding?1:-1,0<e.radius}),a.clearRect(0,0,t.width,t.height),n.forEach(function(e){i[Math.round(i.length*e.radius/e.maxRadius)],a.beginPath(),a.arc(e.x,e.y,e.radius,0,2*Math.PI),a.fillStyle=i[Math.round(i.length*e.radius/e.maxRadius)],a.fill(),a.strokeStyle=i[i.length-Math.round(i.length*e.radius/e.maxRadius)],a.lineWidth=e.circumference*e.radius/e.maxRadius,a.stroke()}),requestAnimationFrame(e)}),function(){function e(){t.width=window.innerWidth,t.height=window.innerHeight-(t.width<=768?55:111)}window.addEventListener("resize",e,!1),e()}()}]),angular.module("app").controller("ContactCtrl",["$scope","EmailSvc",function(t,e){t.options=[{name:"Spam",text:"I am a spam bot and automatically check the first option I find!"},{name:"Opportunitiy",text:"You seem to have the skills I seek, I'd like to talk about some opportunities."},{name:"Resume",text:"I dig the resume, how did you make it?"},{name:"Other",text:"Sumtin else!"}],t.contact={email:"",name:"",phone:"",about:"",message:""},t.send=function(){t.sending=!0,console.log("here"),e.send({email:t.contact.email,name:t.contact.name,phone:t.contact.phone,about:t.contact.about,message:t.contact.message}).then(function(e){t.sent=!0,console.log("SUCCESS. status=%d, text=%s",e.status,e.text),console.log(e)},function(e){t.sending=!1,console.log("FAILED. error=",e)})}}]),angular.module("app").controller("ExperienceCtrl",["$scope",function(e){e.getSkill=function(t){if(e.skills)return e.skills.find(function(e){return e.code===t})}}]),angular.module("app").controller("HobbiesCtrl",["$scope","$window",function(t,e){t.hobbySelectorVisible=!1,$.getJSON("https://www.reddit.com/user/belgocanadian/about/.json",function(e){}),t.selectedHobby=t.hobbies[0],t.selectHobby=function(e){t.selectedHobby=e,t.hobbySelectorVisible=!1},t.showHobby=function(e,t,a){return!!e.images&&0<e.images.length}}]),angular.module("app").controller("LemmingsCtrl",["$scope","GameSvc",function(e,t){var a=0,n=1,i=document.getElementById("lemmings-page"),o=i.getContext("2d"),l=new Image;l.src="lemmings/lemmings.png";var r={},s={walk:{start:[0,0],end:[320,20],columns:8,rows:1,reverse:!1},huh:{start:[320,0],end:[640,20],columns:8,rows:1,reverse:!0},fall:{start:[0,80],end:[160,100],columns:4,rows:1,reverse:!1},fly:{start:[160,80],end:[480,110],columns:8,rows:1,reverse:!1},stop:{start:[0,120],end:[640,140],columns:16,rows:1,reverse:!1},climb:{start:[0,160],end:[640,185],columns:16,rows:1,reverse:!1},build:{start:[0,200],end:[640,225],columns:16,rows:1,reverse:!1},punch:{start:[0,240],end:[640,300],columns:16,rows:2,reverse:!1},dig:{start:[0,320],end:[320,345],columns:8,rows:1,reverse:!1}};function c(e){this.position=[Math.floor(Math.random()*(i.width-200))+100,Math.floor(Math.random()*(i.height-200))+100],this.direction=1<2*Math.random()?a:n,this.act=function(e){this.action=s[e],this.cycle=0,this.width=(this.action.end[0]-this.action.start[0])/this.action.columns,this.height=(this.action.end[1]-this.action.start[1]-20*(this.action.rows-1))/this.action.rows,this.animation=!0},this.act(e),this.move=function(){o.save(),o.translate(this.position[0],this.position[1]),o.translate(this.width/2,this.height/2),this.direction===a&&o.scale(-1,1);var e=this.cycle%this.action.columns,t=Math.floor(this.cycle/this.action.columns);o.drawImage(l,this.width*e+this.action.start[0],(this.height+20)*t+this.action.start[1],this.width,this.height,0,0,2*this.width,2*this.height),o.restore(),this.action.reverse?this.animation?(this.cycle++,this.cycle>=this.action.columns*this.action.rows&&(this.animation=!this.animation,this.cycle--)):(this.cycle--,this.cycle<0&&(this.animation=!this.animation,this.cycle=0)):(this.cycle++,this.cycle>=this.action.columns*this.action.rows&&(this.cycle=0))}}function g(){i.width=window.innerWidth,i.height=window.innerHeight-(i.width<=768?50:105)}window.addEventListener("resize",g,!1),g(),Object.keys(s).forEach(function(e){r[Math.round(1e8*Math.random())]=new c(e)}),function e(){o.clearRect(0,0,i.width,i.height);for(var t in r)r[t].move();setTimeout(function(){e()},150)}()}]),angular.module("app").controller("ListsCtrl",["$scope","$location","CategoriesSvc",function(n,e,i){n.showCategory=!0,n.init=function(){i.getCategories().then(function(e){for(var t in n.categories=e.data,n.tasks=[],n.categories)for(var a in n.categories[t].tasks)n.tasks.push({category:n.categories[t].name,task:n.categories[t].tasks[a].name})})},n.selectCategory=function(e){for(var t in n.selectedCategory=e,n.selectedTasks=[],n.selectableTasks=[],n.selectedCategory.tasks)n.selectableTasks.push(n.selectedCategory.tasks[t]);n.showCategory=!1,n.enteredCategory=""},n.newCategory=function(e){for(var t=!1,a=0;a<n.categories.length;a++)n.categories[a].name===e&&(n.selectCategory(n.categories[a]),t=!0);t||i.addCategory({category:e}).then(function(e){n.init(),n.selectCategory(e)}),n.enteredCategory=""},n.newTask=function(e){var t=!1;for(var a in n.selectedCategory.tasks)n.selectedCategory.tasks[a].name===e&&(t=!0,n.selectTask(n.selectedCategory.tasks[a]));t||i.addTask(n.selectedCategory.name,{task:e}).then(function(){n.selectedCategory.tasks.push({name:e}),n.addTask(n.selectedTasks,n.selectedCategory.tasks[n.selectedCategory.tasks.length-1])}),n.enteredTask=""},n.selectTask=function(e){n.addTask(n.selectedTasks,e),n.removeTask(n.selectableTasks,e),n.enteredTask=""},n.unselectTask=function(e){n.addTask(n.selectableTasks,e),n.removeTask(n.selectedTasks,e)},n.addTask=function(e,t){e.push(t)},n.removeTask=function(e,t){e.splice(e.indexOf(t),1)},n.startPrioritizing=function(){i.setPriorityList(n.selectedTasks),e.path("/prioritize")},n.getQuestions=function(){if(!n.selectedTasks)return"";for(var e=0,t=n.selectedTasks.length-1;0<t;t--)e+=t;return e}}]),angular.module("app").controller("LoginCtrl",["$scope","$location","UserSvc",function(n,e,i){var t=new firebaseui.auth.AuthUI(firebase.auth());function a(){t.start("#firebaseui-auth-container",{callbacks:{signInSuccess:function(t,e,a){return firebase.auth().currentUser.getIdToken(!0).then(function(e){i.authenticate({displayName:t.displayName,email:t.email,photoURL:t.photoURL,emailVerified:t.emailVerified,idToken:e}).then(function(e){n.$emit("login",e.data),$("#modal-login").modal("hide")},function(){n.$emit("popup",{message:"Login Failed",type:"alert-danger"})})}).catch(function(e){}),!1},signInFailure:function(e){if("firebaseui/anonymous-upgrade-merge-conflict"!=e.code)return Promise.resolve();var t=e.credential;return firebase.auth().signInWithCredential(t)},uiShown:function(){document.getElementById("loader").style.display="none"}},signInSuccessUrl:"/home",signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],signInFlow:"popup"})}n.$on("logout",function(e){t.reset(),a()}),a()}]),angular.module("app").controller("PostsCtrl",["$scope","$filter","PostsSvc",function(a,e,n){a.addPost=function(){a.postBody&&n.create({body:a.postBody}).then(function(e){a.postBody=null})},n.fetch().then(function(e){a.posts=e.data}),a.$on("ws:new_post",function(e,t){a.$apply(function(){n.getPost(t).then(function(e){a.posts.unshift(e.data)})})})}]),angular.module("app").controller("PrioritizeCtrl",["$scope","$location","CategoriesSvc",function(n,e,a){n.priorityList=a.getPriorityList(),n.priorityList?(n.selectedQuestion=1,n.currentQuestion=1,n.done=!1):e.path("/lists"),n.makeChoice=function(e){for(var t in n.priorityList)n.priorityList[t].id===n.selectedQuestion&&(n.priorityList[t].choice=1===e?n.priorityList[t].firstChoice:n.priorityList[t].secondChoice);n.selectedQuestion===n.currentQuestion&&(n.currentQuestion=n.currentQuestion===n.priorityList.length?1:n.currentQuestion+1),n.selectedQuestion=n.currentQuestion;var a=!1;for(t in n.priorityList)if(""===n.priorityList[t].choice){a=!0;break}a||($("#prioritizeChoices").hide(300),n.done=!0)},n.getButtonValue=function(e){if(!n.priorityList)return"";for(var t=0;t<n.priorityList.length;t++)if(n.priorityList[t].id===n.selectedQuestion)return 1===e?n.priorityList[t].firstChoice:n.priorityList[t].secondChoice},n.selectQuestion=function(e){n.selectedQuestion=e},n.getFilteredPriorityList=function(){return n.priorityList?n.priorityList.sort(function(e,t){return e.id-t.id}).filter(function(e){return""!==e.choice||e.id===n.currentQuestion}):[]},n.getChoicesMade=function(){if(!n.priorityList)return"";var e=0;for(var t in n.priorityList)""!==n.priorityList[t].choice&&e++;return e},n.getButtonClass=function(e){if(!n.priorityList)return"";for(var t in n.priorityList)if(n.priorityList[t].id===n.selectedQuestion)return""===n.priorityList[t].choice?"btn-primary":1===e?n.priorityList[t].firstChoice===n.priorityList[t].choice?"btn-success":"btn-danger":n.priorityList[t].secondChoice===n.priorityList[t].choice?"btn-success":"btn-danger"},n.showChoices=function(){$("#prioritizeChoices").show(1e3),$("#reviewChoices").hide()},n.chartClick=function(e){n.chart&&console.log(n.chart.getSegmentsAtEvent(e))},n.showResults=function(){for(var e in n.data=[],n.options={responsive:!0,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:0,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<h3 class="tc-chart-js-legend" style="padding:5px"><% for (var i=0; i<segments.length; i++){%><div class="label" style="float:left;margin:5px;background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></div><%}%></h3>'},a.choices)for(var t in a.choices[e].votes=0,n.priorityList)a.choices[e].name===n.priorityList[t].choice&&a.choices[e].votes++;for(e in a.choices.sort(function(e,t){return e.votes<t.votes}),a.choices)n.data.push({value:a.choices[e].votes,label:a.choices[e].name});$("#prioritizeResult").hide(),$("#prioritizeChoices").hide(),$("#priorityResults").show(1e3)}}]),angular.module("app").controller("ProfileCtrl",["$scope","$location","UserSvc",function(o,e,l){o.currentUser?($("#sex-indicator").offset({left:o.currentUser.gender.sex/200*$("#sex").width()+$("#sex").offset().left}),$("#identity-indicator").offset({left:o.currentUser.gender.identity/200*$("#identity").width()+$("#identity").offset().left})):e.path("/"),o.sexes=["Male","FtM Male","Intersex","MtF Female","Female"],o.identities=["Man","Bigender","Pangender","Agender","Polygender","Genderfluid","Genderqueer","Queer","Woman"],o.dateOptions={maxDate:new Date,minDate:new Date(1900,1,1),initDate:new Date(2e3,1,1),datepickerMode:"year"},o.gender=function(e,t){return e[Math.round(t/200*(e.length-1))]},o.startSlider=function(){},o.dragSlider=function(e,t,a){o.currentUser.gender[a]=Math.round(($("#"+a+"-indicator").offset().left-$("#"+a).offset().left)/($("#"+a).width()-$("#"+a+"-indicator").width())*200),o.$apply()},o.stopSlider=function(){},o.usernameToggle=!0,o.passwordToggle=!0,o.toggleUsername=function(){o.usernameToggle=!o.usernameToggle,o.newUsername=o.currentUser.username},o.togglePassword=function(){o.newPassword=null,o.confirmPassword=null,o.passwordToggle=!o.passwordToggle},o.checkPassword=function(e){if(e){var t=o.currentUser._id;l.checkPassword(t,e).then(function(e){o.togglePassword()},function(){var e=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:e},200)})}},o.changePassword=function(e,t,a){if(t)if(t==a){var n=o.currentUser._id;l.changePassword(n,e,t).then(function(e){o.$emit("popup",{message:"Password Changed",type:"alert-success"}),o.oldPassword=null,o.togglePassword()},function(){o.$emit("popup",{message:"Password Change Failed",type:"alert-danger"})})}else{var i=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:i},200)}},o.changeUsername=function(t){o.$emit("loading"),l.changeUsername(o.currentUser._id,t).then(function(e){o.$emit("update",e.data)},function(e){o.$emit("popup",{message:t+" already in use",type:"alert-danger"})})},o.updateUser=function(){o.currentUser&&(o.$emit("loading"),l.updateUser(o.currentUser).then(function(e){o.$emit("update",e.data)}))},o.$watch("currentUser.flags.length",function(e){o.updateUser()}),o.loadCountries=function(t){return[{name:"Andorra",flag:"flag-ad",tidbit:""},{name:"United Arab Emirates",flag:"flag-ae"},{name:"Afghanistan",flag:"flag-af"},{name:"Antigua and Barbuda",flag:"flag-ag"},{name:"Anguilla",flag:"flag-ai"},{name:"Albania",flag:"flag-al"},{name:"Armenia",flag:"flag-am"},{name:"Angola",flag:"flag-ao"},{name:"Antarctica",flag:"flag-aq"},{name:"Argentina",flag:"flag-ar"},{name:"American Somoa",flag:"flag-as"},{name:"Austria",flag:"flag-at"},{name:"Australia",flag:"flag-au"},{name:"Aruba",flag:"flag-aw"},{name:"Åland Islands",flag:"flag-ax"},{name:"Azerbaijan",flag:"flag-az"},{name:"Bosnia and Herzegovina",flag:"flag-ba"},{name:"Barbados",flag:"flag-bb"},{name:"Bangladesh",flag:"flag-bd"},{name:"Belgium",flag:"flag-be"},{name:"Burkina Faso",flag:"flag-bf"},{name:"Bulgaria",flag:"flag-bg"},{name:"Bahrain",flag:"flag-bh"},{name:"Burundi",flag:"flag-bi"},{name:"Benin",flag:"flag-bj"},{name:"Saint Barthélemy",flag:"flag-bl"},{name:"Bermuda",flag:"flag-bm"},{name:"Brunei ",flag:"flag-bn"},{name:"Bolivia, Plurinational State of",flag:"flag-bo"},{name:"Bonaire, Sint Eustatius and Saba",flag:"flag-bq"},{name:"Brazil",flag:"flag-br"},{name:"Bahamas",flag:"flag-bs"},{name:"Bhutan",flag:"flag-bt"},{name:"Bouvet Island",flag:"flag-bv"},{name:"Botswana",flag:"flag-bw"},{name:"Belarus",flag:"flag-by"},{name:"Belize",flag:"flag-bz"},{name:"Canada",flag:"flag-ca"},{name:"Cocos (Keeling) Islands",flag:"flag-cc"},{name:"Congo, the Democratic Republic of the",flag:"flag-cd"},{name:"Central African Republic",flag:"flag-cf"},{name:"Congo",flag:"flag-cg"},{name:"Switzerland",flag:"flag-ch"},{name:"Côte d'Ivoire",flag:"flag-ci"},{name:"Cook Islands",flag:"flag-ck"},{name:"Chile",flag:"flag-cl"},{name:"Cameroon",flag:"flag-cm"},{name:"China",flag:"flag-cn"},{name:"Colombia",flag:"flag-co"},{name:"Costa Rica",flag:"flag-cr"},{name:"Cuba",flag:"flag-cu"},{name:"Cabo Verde",flag:"flag-cv"},{name:"Curaçao",flag:"flag-cw"},{name:"Christmas Island",flag:"flag-cx"},{name:"Cyprus",flag:"flag-cy"},{name:"Czech Republic",flag:"flag-cz"},{name:"Germany",flag:"flag-de"},{name:"Djibouti",flag:"flag-dj"},{name:"Denmark",flag:"flag-dk"},{name:"Dominica",flag:"flag-dm"},{name:"Dominican Republic",flag:"flag-do"},{name:"Algeria",flag:"flag-dz"},{name:"Ecuador",flag:"flag-ec"},{name:"Estonia",flag:"flag-ee"},{name:"Egypt",flag:"flag-eg"},{name:"Western Sahara",flag:"flag-eh"},{name:"Eritrea",flag:"flag-er"},{name:"Spain",flag:"flag-es"},{name:"Ethiopia",flag:"flag-et"},{name:"Finland",flag:"flag-fi"},{name:"Fiji",flag:"flag-fj"},{name:"Falkland Islands (Malvinas)",flag:"flag-fk"},{name:"Micronesia, Federated States of",flag:"flag-fm"},{name:"Faroe Islands",flag:"flag-fo"},{name:"France",flag:"flag-fr"},{name:"Gabon",flag:"flag-ga"},{name:"United Kingdom of Great Britain and Northern Ireland",flag:"flag-gb"},{name:"Grenada",flag:"flag-gd"},{name:"Georgia",flag:"flag-ge"},{name:"French Guiana",flag:"flag-gf"},{name:"Guernsey",flag:"flag-gg"},{name:"Ghana",flag:"flag-gh"},{name:"Gibraltar",flag:"flag-gi"},{name:"Greenland",flag:"flag-gl"},{name:"Gambia",flag:"flag-gm"},{name:"Guinea",flag:"flag-gn"},{name:"Guadeloupe",flag:"flag-gp"},{name:"Equatorial Guinea",flag:"flag-gq"},{name:"Greece",flag:"flag-gr"},{name:"South Georgia and the South Sandwich Islands",flag:"flag-gs"},{name:"Guatemala",flag:"flag-gt"},{name:"Guam",flag:"flag-gu"},{name:"Guinea-Bissau",flag:"flag-gw"},{name:"Guyana",flag:"flag-gy"},{name:"Hong Kong",flag:"flag-hk"},{name:"Heard Island and McDonald Islands",flag:"flag-hm"},{name:"Honduras",flag:"flag-hn"},{name:"Croatia",flag:"flag-hr"},{name:"Haiti",flag:"flag-ht"},{name:"Hungary",flag:"flag-hu"},{name:"Indonesia",flag:"flag-id"},{name:"Ireland",flag:"flag-ie"},{name:"Israel",flag:"flag-il"},{name:"Isle of Man",flag:"flag-im"},{name:"India",flag:"flag-in"},{name:"British Indian Ocean Territory",flag:"flag-io"},{name:"Iraq",flag:"flag-iq"},{name:"Iran, Islamic Republic of",flag:"flag-ir"},{name:"Iceland",flag:"flag-is"},{name:"Italy",flag:"flag-it"},{name:"Jersey",flag:"flag-je"},{name:"Jamaica",flag:"flag-jm"},{name:"Jordan",flag:"flag-jo"},{name:"Japan",flag:"flag-jp"},{name:"Kenya",flag:"flag-ke"},{name:"Kyrgyzstan",flag:"flag-kg"},{name:"Cambodia",flag:"flag-kh"},{name:"Kiribati",flag:"flag-ki"},{name:"Comoros",flag:"flag-km"},{name:"Saint Kitts and Nevis",flag:"flag-kn"},{name:"Korea, Democratic People's Republic of",flag:"flag-kp"},{name:"Korea, Republic of",flag:"flag-kr"},{name:"Kuwait",flag:"flag-kw"},{name:"Cayman Islands",flag:"flag-ky"},{name:"Kazakhstan",flag:"flag-kz"},{name:"Lao People's Democratic Republic",flag:"flag-la"},{name:"Lebanon",flag:"flag-lb"},{name:"Saint Lucia",flag:"flag-lc"},{name:"Liechtenstein",flag:"flag-li"},{name:"Sri Lanka",flag:"flag-lk"},{name:"Liberia",flag:"flag-lr"},{name:"Lesotho",flag:"flag-ls"},{name:"Lithuania",flag:"flag-lt"},{name:"Luxembourg",flag:"flag-lu"},{name:"Latvia",flag:"flag-lv"},{name:"Libya",flag:"flag-ly"},{name:"Morocco",flag:"flag-ma"},{name:"Monaco",flag:"flag-mc"},{name:"Moldova, Republic of",flag:"flag-md"},{name:"Montenegro",flag:"flag-me"},{name:"Saint Martin (French part)",flag:"flag-mf"},{name:"Madagascar",flag:"flag-mg"},{name:"Marshall Islands",flag:"flag-mh"},{name:"Macedonia, the former Yugoslav Republic of",flag:"flag-mk"},{name:"Mali",flag:"flag-ml"},{name:"Myanmar",flag:"flag-mm"},{name:"Mongolia",flag:"flag-mn"},{name:"Macao",flag:"flag-mo"},{name:"Northern Mariana Islands",flag:"flag-mp"},{name:"Martinique",flag:"flag-mq"},{name:"Mauritania",flag:"flag-mr"},{name:"Montserrat",flag:"flag-ms"},{name:"Malta",flag:"flag-mt"},{name:"Mauritius",flag:"flag-mu"},{name:"Maldives",flag:"flag-mv"},{name:"Malawi",flag:"flag-mw"},{name:"Mexico",flag:"flag-mx"},{name:"Malaysia",flag:"flag-my"},{name:"Mozambique",flag:"flag-mz"},{name:"Namibia",flag:"flag-na"},{name:"New Caledonia",flag:"flag-nc"},{name:"Niger",flag:"flag-ne"},{name:"Norfolk Island",flag:"flag-nf"},{name:"Nigeria",flag:"flag-ng"},{name:"Nicaragua",flag:"flag-ni"},{name:"Netherlands",flag:"flag-nl"},{name:"Norway",flag:"flag-no"},{name:"Nepal",flag:"flag-np"},{name:"Nauru",flag:"flag-nr"},{name:"Niue",flag:"flag-nu"},{name:"New Zealand",flag:"flag-nz"},{name:"Oman",flag:"flag-om"},{name:"Panama",flag:"flag-pa"},{name:"Peru",flag:"flag-pe"},{name:"French Polynesia",flag:"flag-pf"},{name:"Papua New Guinea",flag:"flag-pg"},{name:"Philippines",flag:"flag-ph"},{name:"Pakistan",flag:"flag-pk"},{name:"Poland",flag:"flag-pl"},{name:"Saint Pierre and Miquelon",flag:"flag-pm"},{name:"Pitcairn",flag:"flag-pn"},{name:"Puerto Rico",flag:"flag-pr"},{name:"Palestine, State of",flag:"flag-ps"},{name:"Portugal",flag:"flag-pt"},{name:"Palau",flag:"flag-pw"},{name:"Paraguay",flag:"flag-py"},{name:"Qatar",flag:"flag-qa"},{name:"Réunion",flag:"flag-re"},{name:"Romania",flag:"flag-ro"},{name:"Serbia",flag:"flag-rs"},{name:"Russian Federation",flag:"flag-ru"},{name:"Rwanda",flag:"flag-rw"},{name:"Saudi Arabia",flag:"flag-sa"},{name:"Solomon Islands",flag:"flag-sb"},{name:"Seychelles",flag:"flag-sc"},{name:"Sudan",flag:"flag-sd"},{name:"Sweden",flag:"flag-se"},{name:"Singapore",flag:"flag-sg"},{name:"Saint Helena, Ascension and Tristan da Cunha",flag:"flag-sh"},{name:"Slovenia",flag:"flag-si"},{name:"Svalbard and Jan Mayen",flag:"flag-sj"},{name:"Slovakia",flag:"flag-sk"},{name:"Sierra Leone",flag:"flag-sl"},{name:"San Marino",flag:"flag-sm"},{name:"Senegal",flag:"flag-sn"},{name:"Somalia",flag:"flag-so"},{name:"Suriname",flag:"flag-sr"},{name:"South Sudan",flag:"flag-ss"},{name:"Sao Tome and Principe",flag:"flag-st"},{name:"El Salvador",flag:"flag-sv"},{name:"Sint Maarten (Dutch part)",flag:"flag-sx"},{name:"Syrian Arab Republic",flag:"flag-sy"},{name:"Swaziland",flag:"flag-sz"},{name:"Turks and Caicos Islands",flag:"flag-tc"},{name:"Chad",flag:"flag-td"},{name:"French Southern Territories",flag:"flag-tf"},{name:"Togo",flag:"flag-tg"},{name:"Thailand",flag:"flag-th"},{name:"Tajikistan",flag:"flag-tj"},{name:"Tokelau",flag:"flag-tk"},{name:"Timor-Leste",flag:"flag-tl"},{name:"Turkmenistan",flag:"flag-tm"},{name:"Tunisia",flag:"flag-tn"},{name:"Tonga",flag:"flag-to"},{name:"Turkey",flag:"flag-tr"},{name:"Trinidad and Tobago",flag:"flag-tt"},{name:"Tuvalu",flag:"flag-tv"},{name:"Taiwan, Province of China",flag:"flag-tw"},{name:"Tanzania, United Republic of",flag:"flag-tz"},{name:"Ukraine",flag:"flag-ua"},{name:"Uganda",flag:"flag-ug"},{name:"United States Minor Outlying Islands",flag:"flag-um"},{name:"United States of America",flag:"flag-us"},{name:"Uruguay",flag:"flag-uy"},{name:"Uzbekistan",flag:"flag-uz"},{name:"Holy See",flag:"flag-va"},{name:"Saint Vincent and the Grenadines",flag:"flag-vc"},{name:"Venezuela, Bolivarian Republic of",flag:"flag-ve"},{name:"Virgin Islands, British",flag:"flag-vg"},{name:"Virgin Islands, U.S.",flag:"flag-vi"},{name:"Viet Nam",flag:"flag-vn"},{name:"Vanuatu",flag:"flag-vu"},{name:"Wallis and Futuna",flag:"flag-wf"},{name:"Samoa",flag:"flag-ws"},{name:"Yemen",flag:"flag-ye"},{name:"Mayotte",flag:"flag-yt"},{name:"South Africa",flag:"flag-za"},{name:"Zambia",flag:"flag-zm"},{name:"Zimbabwe",flag:"flag-zw"}].filter(function(e){return-1!=e.name.toLowerCase().indexOf(t.toLowerCase())})}}]),angular.module("app").controller("SkillsCtrl",["$scope","$window",function(t,e){t.selectedSkill=0,t.skillsVisible=!1,t.labels=["Download Sales","In-Store Sales","Mail-Order Sales"],t.data=[300,500,100],$.getJSON("/skills.json",function(e){t.skills=e.filter(function(e){return e.enabled}),t.setSelectedSkill=function(e){t.selectedSkill=e,t.selectedSkill.chartOptions={cutoutPercentage:80,circumference:2*Math.PI,maintainAspectRatio:!0,tooltips:{enabled:!1}},t.selectedSkill.chartStyle={"background-image":"url(/skills/"+t.selectedSkill.image+")","background-repeat":"no-repeat","background-size":"60%","background-position":"50% 50%"}},t.setSelectedSkill(t.skills[0]),t.$apply()})}]),angular.module("app").controller("WorkoutCtrl",["$scope",function(n){n.timeRemaining=0,n.timeExercising=30,n.timeResting=10,n.rest=!1;var i,o={on:new Audio("on.wav"),off:new Audio("off.wav"),switch:new Audio("switch.wav")},l=[{name:"Jumping Jacks",split:!1},{name:"Wall Sit",split:!1},{name:"Push-Up",split:!1},{name:"Crunch",split:!1},{name:"Step-Up",split:!0},{name:"Squat",split:!1},{name:"Triceps Dip",split:!1},{name:"Plank",split:!1},{name:"High Knees",split:!1},{name:"Lunge",split:!1},{name:"Push-Up with Rotation",split:!1},{name:"Side Plank",split:!0}];n.progress=function(){return l.length-Math.floor(n.timeRemaining/(n.timeExercising+n.timeResting))+"/"+l.length},n.workout=function(){var a=n.timeExercising+n.timeResting;n.timeRemaining?(clearInterval(i),n.timer="",n.timeRemaining=0,n.rest=!1,n.exercise={name:"",split:!1}):(n.timeRemaining=l.length*a,i=setInterval(function(){if(n.timeRemaining--,0===n.timeRemaining)return n.exercise={name:"Finished! Congrats!",split:!1},n.timer="",n.timeRemaining=0,n.rest=!1,n.$apply(),clearInterval(i);var e=Math.floor(n.timeRemaining/a),t=n.timeRemaining-e*a;n.timer=t>n.timeExercising?t-n.timeExercising:t,t>n.timeExercising?n.rest=!0:n.rest=!1,n.exercise=l[l.length-e-1],t===n.timeExercising?o.on.play():0===t?o.off.play():n.exercise.split&&t===Math.floor(n.timeExercising/2)&&o.switch.play(),n.$apply()},1e3))}}]),angular.module("app").directive("head",["$rootScope","$state","$compile","$interpolate",function(a,l,n,i){var r=function(e){var t={href:e,rel:"stylesheet"};return t.href.match(/\.less$/)&&(t.rel="stylesheet/less"),t};return{restrict:"E",link:function(o,e){o.templateStyles=[];var t='<link ng-attr-rel="{{style.rel}}" ng-repeat="style in templateStyles" ng-href="{{style.href}}">';t=(t=t.replace(/\{\{/g,i.startSymbol())).replace(/\}\}/g,i.endSymbol()),e.append(n(t)(o)),a.$on("$stateChangeStart",function(e,t,a,n,i){o.templateStyles=function(e){for(var a={};""!==e.name;){var n=l.get("^",e);a[n.name]||(a[n.name]={}),e.templateStyleUrl&&(a[n.name][""]||(a[n.name][""]=r(e.templateStyleUrl))),e.views&&_.forEach(e.views,function(e,t){if(e.templateStyleUrl)return(t=t.split("@"))[1]?(a[t[1]]||(a[t[1]]={}),void(a[t[1]][t[0]]||(a[t[1]][t[0]]=r(e.templateStyleUrl)))):void(a[n.name][t[0]]=r(e.templateStyleUrl))}),e=n}var t=[];return _.forEach(a,function(e){_.forEach(e,function(e){_.includes(t,e)||t.push(e)})}),t.reverse(),t}(t)})}}}]),angular.module("app").service("BotsSvc",["$http",function(a){var e=this;e.getLists=function(e){return a.get("/api/bots/lists")},e.getList=function(e){return a.get("/api/bots/lists/"+e._id)},e.saveList=function(e,t){return a.put("/api/bots/lists",{user:e,list:t})},e.reportList=function(e,t){a.get("/api/bots/lists/"+t._id+"/report/"+e._id)},e.deleteList=function(e){return a.delete("/api/bots/lists/"+e._id)}}]),angular.module("app").service("CategoriesSvc",["$http",function(a){var i=this;i.getCategories=function(){return a.get("/api/categories")},i.getTasks=function(e){return a.get("/api/categories/"+e)},i.addCategory=function(e){return a.post("/api/categories/",e)},i.addTask=function(e,t){return a.post("/api/categories/"+e+"/tasks",t)},i.setPriorityList=function(e){i.choices=e,i.priorityList=[];for(var t=0;t<e.length;t++)for(var a=t+1;a<e.length;a++){var n=Math.round(Math.random());i.priorityList.push({id:0,firstChoice:e[0===n?t:a].name,secondChoice:e[0===n?a:t].name,choice:""})}for(t in function(e){var t,a,n=e.length;for(;n;)a=Math.floor(Math.random()*n--),t=e[n],e[n]=e[a],e[a]=t}(i.priorityList),i.priorityList)i.priorityList[t].id=t+1},i.getPriorityList=function(e){return i.priorityList}}]),angular.module("app").service("EmailSvc",["$http",function(t){this.send=function(e){return console.log(e),t.post("/api/email",e)}}]),angular.module("app").service("GameSvc",["$http",function(n){this.getHighscore=function(e,t){return n.get("/api/games/"+e+"/"+t+"/highscore")},this.setHighscore=function(e,t,a){return n.post("/api/games/"+e+"/"+t+"/highscore",{score:a})}}]),angular.module("app").service("LanguageSvc",function(){var t=this;t.languages=[{code:"EN",name:"English",flag:"flag-icon-gb"},{code:"NL",name:"Nederlands",flag:"flag-icon-nl"},{code:"FR",name:"Français",flag:"flag-icon-fr"}],t.text=[{code:"EN"},{code:"NL"},{code:"FR"}],t.selectedLanguage=t.languages[0],t.setLanguage=function(e){return t.selectedLanguage=e},t.getLanguage=function(){return t.selectedLanguage}}),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)},this.getPost=function(e){return t.get("/api/posts/"+e._id)}}]),angular.module("app").service("UserSvc",["$http",function(n){var a=this;a.getUser=function(){return n.get("/api/users")},a.setToken=function(e){return n.defaults.headers.common["X-Auth"]=e,a.getUser()},a.authenticate=function(e){return n.post("/api/users/authenticate",{user:e}).then(function(e){return window.localStorage.token=e.data,a.setToken(e.data)})},a.login=function(e){return n.get("/api/users/"+e+"/login").then(function(e){return window.localStorage.token=e.data,a.setToken(e.data)})},a.updateUser=function(e){return n.post("/api/users/"+e._id,{user:e}).then(function(){return a.getUser()})},a.checkPassword=function(e,t){return n.post("/api/users/"+e+"/verification",{password:t})},a.changePassword=function(e,t,a){return n.post("/api/users/"+e+"/password",{oldPassword:t,newPassword:a})},a.changeUsername=function(e,t){return n.post("/api/users/"+e+"/username",{newUsername:t}).then(function(){return a.getUser()})},a.logout=function(){window.localStorage.clear(),n.defaults.headers.common["X-Auth"]=""},a.createUser=function(e,t){return n.post("/api/users",{username:e,password:t}).then(function(){return a.login(e,t)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
