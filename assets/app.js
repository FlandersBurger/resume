angular.module("app",["ui.router","ui.bootstrap","ngAnimate","ngSanitize","ngDragDrop","ngTagsInput","vcRecaptcha","chart.js","tc.chartjs"]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(a,e,t){e.otherwise("/asteroids"),a.state("home",{url:"/home",templateUrl:"/home.html"}).state("policy",{url:"/policy",templateUrl:"/policy.html"}).state("print",{url:"/print",templateUrl:"/print.html"}).state("experience",{url:"/experience",controller:"ExperienceCtrl",templateUrl:"/experience.html"}).state("skills",{url:"/skills",controller:"SkillsCtrl",templateUrl:"/skills.html"}).state("hobbies",{url:"/hobbies",controller:"HobbiesCtrl",templateUrl:"/hobbies.html"}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"/contact.html"}).state("workout",{url:"/workout",controller:"WorkoutCtrl",templateUrl:"/workout.html"}).state("posts",{url:"/posts",controller:"PostsCtrl",templateUrl:"/posts.html"}).state("profile",{url:"/profile",controller:"ProfileCtrl",templateUrl:"/profile.html"}).state("lists",{url:"/lists",controller:"ListsCtrl",templateUrl:"lists.html"}).state("prioritize",{url:"/prioritize",controller:"PrioritizeCtrl",templateUrl:"prioritize.html"}).state("bubbles",{url:"/bubbles",controller:"BubblesCtrl",templateUrl:"bubbles.html"}).state("asteroids",{url:"/asteroids",controller:"AsteroidsCtrl",templateUrl:"asteroids.html"}),t.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("app").service("WebSocketSvc",["$rootScope","$timeout",function(t,e){var n,i=function(){(n=new WebSocket("https:"===window.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host)).onopen=function(){console.log("Websocket connected")},n.onclose=function(a){console.log("Websocket closed. Reconnecting..."),e(i,1e3)},n.onerror=function(a){console.log("Error: "+a+" - State: "+n.readyState)},n.onmessage=function(a){var e=JSON.parse(a.data);t.$broadcast("ws:"+e.topic,e.data)}};this.send=function(a,e){var t=JSON.stringify({topic:a,data:e});n.send(t)},this.connect=i}]).run(["WebSocketSvc",function(a){a.connect()}]),angular.module("app").controller("AppCtrl",["$scope","$location","LanguageSvc","UserSvc",function(t,a,e,n){console.log("%cYou sneaky bugger!","font: 2em sans-serif; color: DodgerBlue; text-shadow: 2px 0 0 #444, -2px 0 0 #444, 0 2px 0 #444, 0 -2px 0 #444, 1px 1px #444, -1px -1px 0 #444, 1px -1px 0 #444, -1px 1px 0 #444;"),console.log("I'm glad you're curious whether something is popping up in here. I'm a bit of a stickler when it comes to messages in the console so I try to make sure only things I want are visible. That being said, if there is a big error here, I would really appreciate you telling me so I can get rid of it!"),console.log("The code for my resume is hosted on Github if you really want to go into all this! => https://github.com/FlandersBurger/resume"),$(window).load(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")}),t.themeCounter=6,t.today=new Date,t.year=t.today.getFullYear(),t.random=Math.floor(1e6*Math.random()),t.flipTheme=function(){$(".loading").show(),$(".content").hide(),setTimeout(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")},800),t.themeCounter=t.themeCounter<6?t.themeCounter+1:t.themeCounter=1},$.getJSON("/skills.json",function(a){t.skills=a.filter(function(a){return a.enabled})}),$.getJSON("/hobbies.json",function(a){t.hobbies=a}),$.getJSON("/experience.json",function(a){t.jobs=a,t.jobs.forEach(function(a){a.startDate=new Date(a.startDate),a.endDate&&(a.endDate=new Date(a.endDate))})}),t.getTimeSpan=function(a){return a.startDate.getFullYear()+(a.endDate?" - "+a.endDate.getFullYear():" - Today")},t.languages=e.languages,t.selectedLanguage=e.getLanguage(),t.selectLanguage=function(a){t.selectedLanguage=e.setLanguage(a)},t.hoverdiv=function(a,e){var t=a.clientX+"px",n=a.clientY+20+"px";document.getElementById(e);return $("#"+e).css("left",t),$("#"+e).css("top",n),$("#"+e).toggle(),!1},t.socialMedia=[{name:"linkedin",url:"https://www.linkedin.com/in/laurent-debacker-1633a916",icon:"fa-linkedin"},{name:"github",url:"https://github.com/FlandersBurger",icon:"fa-github"},{name:"jsfiddle",url:"https://jsfiddle.net/user/BelgoCanadian/fiddles/",icon:"fa-jsfiddle"},{name:"stackoverflow",url:"http://stackoverflow.com/users/1083923/belgocanadian",icon:"fa-stack-overflow"}],window.localStorage.user&&n.login(window.localStorage.user).then(function(a){t.loggedIn=!0,t.currentUser=a.data}),t.$on("login",function(a,e){window.localStorage.user=e._id,t.loggedIn=!0,t.currentUser=e}),t.$on("update",function(a,e){t.currentUser=e,t.currentUser.birthDate=new Date(t.currentUser.birthDate),t.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),t.$on("loading",function(a,e){t.loading=!0,$("#loading-icon").show()}),t.$on("loaded",function(a,e){t.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),t.logout=function(){firebase.auth().signOut().then(function(){t.loggedIn=!1,window.localStorage.clear(),t.$broadcast("logout")}).catch(function(a){})}}]),angular.module("app").controller("AsteroidsCtrl",["$scope",function(a){var e,t=document.getElementById("asteroids-page"),n=t.getContext("2d"),i=[],l=[],o={};function r(){this.width=50,this.height=50,this.cannon={x:this.width/2-4.5,y:this.height/2-.078125*this.height},this.cooldown=0,this.x=t.width/2-this.width/2,this.y=t.height/2-this.height/2,this.img=new Image,this.img.src="asteroids/spaceship.png",this.speed=0,this.angle=0,this.rotation=0,this.shoot=function(){this.cooldown=50,i.push(new s(this))},this.move=function(){this.angle=this.rotation,0<this.cooldown&&this.cooldown--,f(this)}}function s(a){this.x=a.x+a.cannon.x+a.cannon.x*Math.cos((a.rotation-90)*Math.PI/180),this.y=a.y+a.cannon.y+a.cannon.y*Math.sin((a.rotation-90)*Math.PI/180),this.width=9,this.height=15,this.angle=a.angle,this.rotation=a.rotation,this.speed=a.speed+500,this.age=0,this.img=new Image,this.img.src="asteroids/shot.png",this.move=function(){this.age++,f(this)}}function g(){this.x=Math.random()*t.width,this.y=Math.random()*t.height,this.width=50*Math.random()+30,this.height=this.width,this.angle=360*Math.random(),this.rotation=360*Math.random(),this.rotationSpeed=6*Math.random()-3,this.speed=300*Math.random(),this.img=new Image,this.img.src="asteroids/asteroid"+(Math.round(6*Math.random())+1)+".png",this.move=function(){this.rotation+=this.rotationSpeed,360<this.rotation?this.rotation=this.rotation-360:this.rotation<0&&(this.rotation=360+this.rotation),f(this)}}function f(a){a.x+=a.speed/100*Math.cos((a.angle-90)*Math.PI/180),a.y+=a.speed/100*Math.sin((a.angle-90)*Math.PI/180),a.x>t.width?a.x=-a.width:a.x<-a.width&&(a.x=t.width),a.y>t.height?a.y=-a.height:a.y<-a.height&&(a.y=t.height),n.save(),n.translate(a.x,a.y),n.translate(a.width/2,a.height/2),n.rotate(a.rotation*Math.PI/180),n.drawImage(a.img,-a.width/2,-a.height/2,a.width,a.height),n.restore()}function c(){t.width=window.innerWidth,t.height=window.innerHeight-(t.width<=768?55:111),requestAnimationFrame(u)}function u(){n.clearRect(0,0,t.width,t.height),(i=i.filter(function(a){return a.age<100})).forEach(function(a){a.move()}),l.forEach(function(a){a.move()}),e.move(),o[32]&&0===e.cooldown&&e.shoot(),o[37]&&(0===e.rotation?e.rotation=360:e.rotation-=3),o[39]&&(360===e.rotation?e.rotation=0:e.rotation+=3),o[38]?e.speed<=1e3&&(e.speed+=5):0<e.speed&&e.speed--,requestAnimationFrame(u)}window.addEventListener("keydown",function(a){o[a.keyCode||a.which]=!0},!0),window.addEventListener("keyup",function(a){o[a.keyCode||a.which]=!1},!0),a.start=function(){e=new r,function a(){l.push(new g);setTimeout(function(){a()},1e3)}()},window.addEventListener("resize",c,!1),c(),a.start()}]),angular.module("app").controller("BubblesCtrl",["$scope",function(a){var e=document.getElementById("bubbles-page"),t=e.getContext("2d"),n=[],i=["#ffc300","#ff5733","#c70039","#900c3e","#571845"];function l(){this.lifespan=0,this.radius=1,this.expanding=!0,this.speed=Math.round(3*Math.random()),this.circumference=Math.round(50*Math.random())+5,this.maxRadius=Math.round(200*Math.random())+20,this.x=Math.round(Math.random()*e.width),this.y=Math.round(Math.random()*e.height),this.vx=.5<=Math.random()?1:-1,this.vy=.5<=Math.random()?1:-1}requestAnimationFrame(function a(){n.push(new l),n=n.filter(function(a){return a.radius===a.maxRadius&&(a.expanding=!1),a.x+=a.vx*a.speed,a.y+=a.vy*a.speed,a.radius+=a.expanding?1:-1,0<a.radius}),t.clearRect(0,0,e.width,e.height),n.forEach(function(a){i[Math.round(i.length*a.radius/a.maxRadius)],t.beginPath(),t.arc(a.x,a.y,a.radius,0,2*Math.PI),t.fillStyle=i[Math.round(i.length*a.radius/a.maxRadius)],t.fill(),t.strokeStyle=i[i.length-Math.round(i.length*a.radius/a.maxRadius)],t.lineWidth=a.circumference*a.radius/a.maxRadius,t.stroke()}),requestAnimationFrame(a)}),function(){function a(){e.width=window.innerWidth,e.height=window.innerHeight-(e.width<=768?55:111)}window.addEventListener("resize",a,!1),a()}()}]),angular.module("app").controller("ContactCtrl",["$scope","EmailSvc",function(e,a){e.options=[{name:"Spam",text:"I am a spam bot and automatically check the first option I find!"},{name:"Opportunitiy",text:"You seem to have the skills I seek, I'd like to talk about some opportunities."},{name:"Resume",text:"I dig the resume, how did you make it?"},{name:"Other",text:"Sumtin else!"}],e.contact={email:"",name:"",phone:"",about:"",message:""},e.send=function(){e.sending=!0,console.log("here"),a.send({email:e.contact.email,name:e.contact.name,phone:e.contact.phone,about:e.contact.about,message:e.contact.message}).then(function(a){e.sent=!0,console.log("SUCCESS. status=%d, text=%s",a.status,a.text),console.log(a)},function(a){e.sending=!1,console.log("FAILED. error=",a)})}}]),angular.module("app").controller("ExperienceCtrl",["$scope",function(a){a.getSkill=function(e){if(a.skills)return a.skills.find(function(a){return a.code===e})}}]),angular.module("app").controller("HobbiesCtrl",["$scope","$window",function(e,a){e.hobbySelectorVisible=!1,$.getJSON("https://www.reddit.com/user/belgocanadian/about/.json",function(a){}),e.selectedHobby=e.hobbies[0],e.selectHobby=function(a){e.selectedHobby=a,e.hobbySelectorVisible=!1},e.showHobby=function(a,e,t){return!!a.images&&0<a.images.length}}]),angular.module("app").controller("ListsCtrl",["$scope","$location","CategoriesSvc",function(n,a,i){n.showCategory=!0,n.init=function(){i.getCategories().then(function(a){for(var e in n.categories=a.data,n.tasks=[],n.categories)for(var t in n.categories[e].tasks)n.tasks.push({category:n.categories[e].name,task:n.categories[e].tasks[t].name})})},n.selectCategory=function(a){for(var e in n.selectedCategory=a,n.selectedTasks=[],n.selectableTasks=[],n.selectedCategory.tasks)n.selectableTasks.push(n.selectedCategory.tasks[e]);n.showCategory=!1,n.enteredCategory=""},n.newCategory=function(a){for(var e=!1,t=0;t<n.categories.length;t++)n.categories[t].name===a&&(n.selectCategory(n.categories[t]),e=!0);e||i.addCategory({category:a}).then(function(a){n.init(),n.selectCategory(a)}),n.enteredCategory=""},n.newTask=function(a){var e=!1;for(var t in n.selectedCategory.tasks)n.selectedCategory.tasks[t].name===a&&(e=!0,n.selectTask(n.selectedCategory.tasks[t]));e||i.addTask(n.selectedCategory.name,{task:a}).then(function(){n.selectedCategory.tasks.push({name:a}),n.addTask(n.selectedTasks,n.selectedCategory.tasks[n.selectedCategory.tasks.length-1])}),n.enteredTask=""},n.selectTask=function(a){n.addTask(n.selectedTasks,a),n.removeTask(n.selectableTasks,a),n.enteredTask=""},n.unselectTask=function(a){n.addTask(n.selectableTasks,a),n.removeTask(n.selectedTasks,a)},n.addTask=function(a,e){a.push(e)},n.removeTask=function(a,e){a.splice(a.indexOf(e),1)},n.startPrioritizing=function(){i.setPriorityList(n.selectedTasks),a.path("/prioritize")},n.getQuestions=function(){if(!n.selectedTasks)return"";for(var a=0,e=n.selectedTasks.length-1;0<e;e--)a+=e;return a}}]),angular.module("app").controller("LoginCtrl",["$scope","$location","UserSvc",function(n,i,l){var e=new firebaseui.auth.AuthUI(firebase.auth());function t(){e.start("#firebaseui-auth-container",{callbacks:{signInSuccess:function(e,a,t){return firebase.auth().currentUser.getIdToken(!0).then(function(a){l.authenticate({displayName:e.displayName,email:e.email,photoURL:e.photoURL,emailVerified:e.emailVerified,idToken:a}).then(function(a){n.$emit("login",a.data),$("#modal-login").modal("hide"),i.path("/")},function(){n.$emit("popup",{message:"Login Failed",type:"alert-danger"})})}).catch(function(a){}),!1},signInFailure:function(a){if("firebaseui/anonymous-upgrade-merge-conflict"!=a.code)return Promise.resolve();var e=a.credential;return firebase.auth().signInWithCredential(e)},uiShown:function(){document.getElementById("loader").style.display="none"}},signInSuccessUrl:"/home",signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],signInFlow:"popup"})}n.$on("logout",function(a){e.reset(),t()}),t()}]),angular.module("app").controller("PostsCtrl",["$scope","$filter","PostsSvc",function(t,a,n){t.addPost=function(){t.postBody&&n.create({body:t.postBody}).then(function(a){t.postBody=null})},n.fetch().then(function(a){t.posts=a.data}),t.$on("ws:new_post",function(a,e){t.$apply(function(){n.getPost(e).then(function(a){t.posts.unshift(a.data)})})})}]),angular.module("app").controller("PrioritizeCtrl",["$scope","$location","CategoriesSvc",function(n,a,t){n.priorityList=t.getPriorityList(),n.priorityList?(n.selectedQuestion=1,n.currentQuestion=1,n.done=!1):a.path("/lists"),n.makeChoice=function(a){for(var e in n.priorityList)n.priorityList[e].id===n.selectedQuestion&&(n.priorityList[e].choice=1===a?n.priorityList[e].firstChoice:n.priorityList[e].secondChoice);n.selectedQuestion===n.currentQuestion&&(n.currentQuestion=n.currentQuestion===n.priorityList.length?1:n.currentQuestion+1),n.selectedQuestion=n.currentQuestion;var t=!1;for(e in n.priorityList)if(""===n.priorityList[e].choice){t=!0;break}t||($("#prioritizeChoices").hide(300),n.done=!0)},n.getButtonValue=function(a){if(!n.priorityList)return"";for(var e=0;e<n.priorityList.length;e++)if(n.priorityList[e].id===n.selectedQuestion)return 1===a?n.priorityList[e].firstChoice:n.priorityList[e].secondChoice},n.selectQuestion=function(a){n.selectedQuestion=a},n.getFilteredPriorityList=function(){return n.priorityList?n.priorityList.sort(function(a,e){return a.id-e.id}).filter(function(a){return""!==a.choice||a.id===n.currentQuestion}):[]},n.getChoicesMade=function(){if(!n.priorityList)return"";var a=0;for(var e in n.priorityList)""!==n.priorityList[e].choice&&a++;return a},n.getButtonClass=function(a){if(!n.priorityList)return"";for(var e in n.priorityList)if(n.priorityList[e].id===n.selectedQuestion)return""===n.priorityList[e].choice?"btn-primary":1===a?n.priorityList[e].firstChoice===n.priorityList[e].choice?"btn-success":"btn-danger":n.priorityList[e].secondChoice===n.priorityList[e].choice?"btn-success":"btn-danger"},n.showChoices=function(){$("#prioritizeChoices").show(1e3),$("#reviewChoices").hide()},n.chartClick=function(a){n.chart&&console.log(n.chart.getSegmentsAtEvent(a))},n.showResults=function(){for(var a in n.data=[],n.options={responsive:!0,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:0,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<h3 class="tc-chart-js-legend" style="padding:5px"><% for (var i=0; i<segments.length; i++){%><div class="label" style="float:left;margin:5px;background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></div><%}%></h3>'},t.choices)for(var e in t.choices[a].votes=0,n.priorityList)t.choices[a].name===n.priorityList[e].choice&&t.choices[a].votes++;for(a in t.choices.sort(function(a,e){return a.votes<e.votes}),t.choices)n.data.push({value:t.choices[a].votes,label:t.choices[a].name});$("#prioritizeResult").hide(),$("#prioritizeChoices").hide(),$("#priorityResults").show(1e3)}}]),angular.module("app").controller("ProfileCtrl",["$scope","$location","UserSvc",function(l,a,o){l.currentUser?($("#sex-indicator").offset({left:l.currentUser.gender.sex/200*$("#sex").width()+$("#sex").offset().left}),$("#identity-indicator").offset({left:l.currentUser.gender.identity/200*$("#identity").width()+$("#identity").offset().left})):a.path("/"),l.sexes=["Male","FtM Male","Intersex","MtF Female","Female"],l.identities=["Man","Bigender","Pangender","Agender","Polygender","Genderfluid","Genderqueer","Queer","Woman"],l.dateOptions={maxDate:new Date,minDate:new Date(1900,1,1),initDate:new Date(2e3,1,1),datepickerMode:"year"},l.gender=function(a,e){return a[Math.round(e/200*(a.length-1))]},l.startSlider=function(){},l.dragSlider=function(a,e,t){l.currentUser.gender[t]=Math.round(($("#"+t+"-indicator").offset().left-$("#"+t).offset().left)/($("#"+t).width()-$("#"+t+"-indicator").width())*200),l.$apply()},l.stopSlider=function(){},l.usernameToggle=!0,l.passwordToggle=!0,l.toggleUsername=function(){l.usernameToggle=!l.usernameToggle,l.newUsername=l.currentUser.username},l.togglePassword=function(){l.newPassword=null,l.confirmPassword=null,l.passwordToggle=!l.passwordToggle},l.checkPassword=function(a){if(a){var e=l.currentUser._id;o.checkPassword(e,a).then(function(a){l.togglePassword()},function(){var a=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:a},200)})}},l.changePassword=function(a,e,t){if(e)if(e==t){var n=l.currentUser._id;o.changePassword(n,a,e).then(function(a){l.$emit("popup",{message:"Password Changed",type:"alert-success"}),l.oldPassword=null,l.togglePassword()},function(){l.$emit("popup",{message:"Password Change Failed",type:"alert-danger"})})}else{var i=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:i},200)}},l.changeUsername=function(e){l.$emit("loading"),o.changeUsername(l.currentUser._id,e).then(function(a){l.$emit("update",a.data)},function(a){l.$emit("popup",{message:e+" already in use",type:"alert-danger"})})},l.updateUser=function(){l.currentUser&&(l.$emit("loading"),o.updateUser(l.currentUser).then(function(a){l.$emit("update",a.data)}))},l.$watch("currentUser.flags.length",function(a){l.updateUser()}),l.loadCountries=function(e){return[{name:"Andorra",flag:"flag-ad",tidbit:""},{name:"United Arab Emirates",flag:"flag-ae"},{name:"Afghanistan",flag:"flag-af"},{name:"Antigua and Barbuda",flag:"flag-ag"},{name:"Anguilla",flag:"flag-ai"},{name:"Albania",flag:"flag-al"},{name:"Armenia",flag:"flag-am"},{name:"Angola",flag:"flag-ao"},{name:"Antarctica",flag:"flag-aq"},{name:"Argentina",flag:"flag-ar"},{name:"American Somoa",flag:"flag-as"},{name:"Austria",flag:"flag-at"},{name:"Australia",flag:"flag-au"},{name:"Aruba",flag:"flag-aw"},{name:"Åland Islands",flag:"flag-ax"},{name:"Azerbaijan",flag:"flag-az"},{name:"Bosnia and Herzegovina",flag:"flag-ba"},{name:"Barbados",flag:"flag-bb"},{name:"Bangladesh",flag:"flag-bd"},{name:"Belgium",flag:"flag-be"},{name:"Burkina Faso",flag:"flag-bf"},{name:"Bulgaria",flag:"flag-bg"},{name:"Bahrain",flag:"flag-bh"},{name:"Burundi",flag:"flag-bi"},{name:"Benin",flag:"flag-bj"},{name:"Saint Barthélemy",flag:"flag-bl"},{name:"Bermuda",flag:"flag-bm"},{name:"Brunei ",flag:"flag-bn"},{name:"Bolivia, Plurinational State of",flag:"flag-bo"},{name:"Bonaire, Sint Eustatius and Saba",flag:"flag-bq"},{name:"Brazil",flag:"flag-br"},{name:"Bahamas",flag:"flag-bs"},{name:"Bhutan",flag:"flag-bt"},{name:"Bouvet Island",flag:"flag-bv"},{name:"Botswana",flag:"flag-bw"},{name:"Belarus",flag:"flag-by"},{name:"Belize",flag:"flag-bz"},{name:"Canada",flag:"flag-ca"},{name:"Cocos (Keeling) Islands",flag:"flag-cc"},{name:"Congo, the Democratic Republic of the",flag:"flag-cd"},{name:"Central African Republic",flag:"flag-cf"},{name:"Congo",flag:"flag-cg"},{name:"Switzerland",flag:"flag-ch"},{name:"Côte d'Ivoire",flag:"flag-ci"},{name:"Cook Islands",flag:"flag-ck"},{name:"Chile",flag:"flag-cl"},{name:"Cameroon",flag:"flag-cm"},{name:"China",flag:"flag-cn"},{name:"Colombia",flag:"flag-co"},{name:"Costa Rica",flag:"flag-cr"},{name:"Cuba",flag:"flag-cu"},{name:"Cabo Verde",flag:"flag-cv"},{name:"Curaçao",flag:"flag-cw"},{name:"Christmas Island",flag:"flag-cx"},{name:"Cyprus",flag:"flag-cy"},{name:"Czech Republic",flag:"flag-cz"},{name:"Germany",flag:"flag-de"},{name:"Djibouti",flag:"flag-dj"},{name:"Denmark",flag:"flag-dk"},{name:"Dominica",flag:"flag-dm"},{name:"Dominican Republic",flag:"flag-do"},{name:"Algeria",flag:"flag-dz"},{name:"Ecuador",flag:"flag-ec"},{name:"Estonia",flag:"flag-ee"},{name:"Egypt",flag:"flag-eg"},{name:"Western Sahara",flag:"flag-eh"},{name:"Eritrea",flag:"flag-er"},{name:"Spain",flag:"flag-es"},{name:"Ethiopia",flag:"flag-et"},{name:"Finland",flag:"flag-fi"},{name:"Fiji",flag:"flag-fj"},{name:"Falkland Islands (Malvinas)",flag:"flag-fk"},{name:"Micronesia, Federated States of",flag:"flag-fm"},{name:"Faroe Islands",flag:"flag-fo"},{name:"France",flag:"flag-fr"},{name:"Gabon",flag:"flag-ga"},{name:"United Kingdom of Great Britain and Northern Ireland",flag:"flag-gb"},{name:"Grenada",flag:"flag-gd"},{name:"Georgia",flag:"flag-ge"},{name:"French Guiana",flag:"flag-gf"},{name:"Guernsey",flag:"flag-gg"},{name:"Ghana",flag:"flag-gh"},{name:"Gibraltar",flag:"flag-gi"},{name:"Greenland",flag:"flag-gl"},{name:"Gambia",flag:"flag-gm"},{name:"Guinea",flag:"flag-gn"},{name:"Guadeloupe",flag:"flag-gp"},{name:"Equatorial Guinea",flag:"flag-gq"},{name:"Greece",flag:"flag-gr"},{name:"South Georgia and the South Sandwich Islands",flag:"flag-gs"},{name:"Guatemala",flag:"flag-gt"},{name:"Guam",flag:"flag-gu"},{name:"Guinea-Bissau",flag:"flag-gw"},{name:"Guyana",flag:"flag-gy"},{name:"Hong Kong",flag:"flag-hk"},{name:"Heard Island and McDonald Islands",flag:"flag-hm"},{name:"Honduras",flag:"flag-hn"},{name:"Croatia",flag:"flag-hr"},{name:"Haiti",flag:"flag-ht"},{name:"Hungary",flag:"flag-hu"},{name:"Indonesia",flag:"flag-id"},{name:"Ireland",flag:"flag-ie"},{name:"Israel",flag:"flag-il"},{name:"Isle of Man",flag:"flag-im"},{name:"India",flag:"flag-in"},{name:"British Indian Ocean Territory",flag:"flag-io"},{name:"Iraq",flag:"flag-iq"},{name:"Iran, Islamic Republic of",flag:"flag-ir"},{name:"Iceland",flag:"flag-is"},{name:"Italy",flag:"flag-it"},{name:"Jersey",flag:"flag-je"},{name:"Jamaica",flag:"flag-jm"},{name:"Jordan",flag:"flag-jo"},{name:"Japan",flag:"flag-jp"},{name:"Kenya",flag:"flag-ke"},{name:"Kyrgyzstan",flag:"flag-kg"},{name:"Cambodia",flag:"flag-kh"},{name:"Kiribati",flag:"flag-ki"},{name:"Comoros",flag:"flag-km"},{name:"Saint Kitts and Nevis",flag:"flag-kn"},{name:"Korea, Democratic People's Republic of",flag:"flag-kp"},{name:"Korea, Republic of",flag:"flag-kr"},{name:"Kuwait",flag:"flag-kw"},{name:"Cayman Islands",flag:"flag-ky"},{name:"Kazakhstan",flag:"flag-kz"},{name:"Lao People's Democratic Republic",flag:"flag-la"},{name:"Lebanon",flag:"flag-lb"},{name:"Saint Lucia",flag:"flag-lc"},{name:"Liechtenstein",flag:"flag-li"},{name:"Sri Lanka",flag:"flag-lk"},{name:"Liberia",flag:"flag-lr"},{name:"Lesotho",flag:"flag-ls"},{name:"Lithuania",flag:"flag-lt"},{name:"Luxembourg",flag:"flag-lu"},{name:"Latvia",flag:"flag-lv"},{name:"Libya",flag:"flag-ly"},{name:"Morocco",flag:"flag-ma"},{name:"Monaco",flag:"flag-mc"},{name:"Moldova, Republic of",flag:"flag-md"},{name:"Montenegro",flag:"flag-me"},{name:"Saint Martin (French part)",flag:"flag-mf"},{name:"Madagascar",flag:"flag-mg"},{name:"Marshall Islands",flag:"flag-mh"},{name:"Macedonia, the former Yugoslav Republic of",flag:"flag-mk"},{name:"Mali",flag:"flag-ml"},{name:"Myanmar",flag:"flag-mm"},{name:"Mongolia",flag:"flag-mn"},{name:"Macao",flag:"flag-mo"},{name:"Northern Mariana Islands",flag:"flag-mp"},{name:"Martinique",flag:"flag-mq"},{name:"Mauritania",flag:"flag-mr"},{name:"Montserrat",flag:"flag-ms"},{name:"Malta",flag:"flag-mt"},{name:"Mauritius",flag:"flag-mu"},{name:"Maldives",flag:"flag-mv"},{name:"Malawi",flag:"flag-mw"},{name:"Mexico",flag:"flag-mx"},{name:"Malaysia",flag:"flag-my"},{name:"Mozambique",flag:"flag-mz"},{name:"Namibia",flag:"flag-na"},{name:"New Caledonia",flag:"flag-nc"},{name:"Niger",flag:"flag-ne"},{name:"Norfolk Island",flag:"flag-nf"},{name:"Nigeria",flag:"flag-ng"},{name:"Nicaragua",flag:"flag-ni"},{name:"Netherlands",flag:"flag-nl"},{name:"Norway",flag:"flag-no"},{name:"Nepal",flag:"flag-np"},{name:"Nauru",flag:"flag-nr"},{name:"Niue",flag:"flag-nu"},{name:"New Zealand",flag:"flag-nz"},{name:"Oman",flag:"flag-om"},{name:"Panama",flag:"flag-pa"},{name:"Peru",flag:"flag-pe"},{name:"French Polynesia",flag:"flag-pf"},{name:"Papua New Guinea",flag:"flag-pg"},{name:"Philippines",flag:"flag-ph"},{name:"Pakistan",flag:"flag-pk"},{name:"Poland",flag:"flag-pl"},{name:"Saint Pierre and Miquelon",flag:"flag-pm"},{name:"Pitcairn",flag:"flag-pn"},{name:"Puerto Rico",flag:"flag-pr"},{name:"Palestine, State of",flag:"flag-ps"},{name:"Portugal",flag:"flag-pt"},{name:"Palau",flag:"flag-pw"},{name:"Paraguay",flag:"flag-py"},{name:"Qatar",flag:"flag-qa"},{name:"Réunion",flag:"flag-re"},{name:"Romania",flag:"flag-ro"},{name:"Serbia",flag:"flag-rs"},{name:"Russian Federation",flag:"flag-ru"},{name:"Rwanda",flag:"flag-rw"},{name:"Saudi Arabia",flag:"flag-sa"},{name:"Solomon Islands",flag:"flag-sb"},{name:"Seychelles",flag:"flag-sc"},{name:"Sudan",flag:"flag-sd"},{name:"Sweden",flag:"flag-se"},{name:"Singapore",flag:"flag-sg"},{name:"Saint Helena, Ascension and Tristan da Cunha",flag:"flag-sh"},{name:"Slovenia",flag:"flag-si"},{name:"Svalbard and Jan Mayen",flag:"flag-sj"},{name:"Slovakia",flag:"flag-sk"},{name:"Sierra Leone",flag:"flag-sl"},{name:"San Marino",flag:"flag-sm"},{name:"Senegal",flag:"flag-sn"},{name:"Somalia",flag:"flag-so"},{name:"Suriname",flag:"flag-sr"},{name:"South Sudan",flag:"flag-ss"},{name:"Sao Tome and Principe",flag:"flag-st"},{name:"El Salvador",flag:"flag-sv"},{name:"Sint Maarten (Dutch part)",flag:"flag-sx"},{name:"Syrian Arab Republic",flag:"flag-sy"},{name:"Swaziland",flag:"flag-sz"},{name:"Turks and Caicos Islands",flag:"flag-tc"},{name:"Chad",flag:"flag-td"},{name:"French Southern Territories",flag:"flag-tf"},{name:"Togo",flag:"flag-tg"},{name:"Thailand",flag:"flag-th"},{name:"Tajikistan",flag:"flag-tj"},{name:"Tokelau",flag:"flag-tk"},{name:"Timor-Leste",flag:"flag-tl"},{name:"Turkmenistan",flag:"flag-tm"},{name:"Tunisia",flag:"flag-tn"},{name:"Tonga",flag:"flag-to"},{name:"Turkey",flag:"flag-tr"},{name:"Trinidad and Tobago",flag:"flag-tt"},{name:"Tuvalu",flag:"flag-tv"},{name:"Taiwan, Province of China",flag:"flag-tw"},{name:"Tanzania, United Republic of",flag:"flag-tz"},{name:"Ukraine",flag:"flag-ua"},{name:"Uganda",flag:"flag-ug"},{name:"United States Minor Outlying Islands",flag:"flag-um"},{name:"United States of America",flag:"flag-us"},{name:"Uruguay",flag:"flag-uy"},{name:"Uzbekistan",flag:"flag-uz"},{name:"Holy See",flag:"flag-va"},{name:"Saint Vincent and the Grenadines",flag:"flag-vc"},{name:"Venezuela, Bolivarian Republic of",flag:"flag-ve"},{name:"Virgin Islands, British",flag:"flag-vg"},{name:"Virgin Islands, U.S.",flag:"flag-vi"},{name:"Viet Nam",flag:"flag-vn"},{name:"Vanuatu",flag:"flag-vu"},{name:"Wallis and Futuna",flag:"flag-wf"},{name:"Samoa",flag:"flag-ws"},{name:"Yemen",flag:"flag-ye"},{name:"Mayotte",flag:"flag-yt"},{name:"South Africa",flag:"flag-za"},{name:"Zambia",flag:"flag-zm"},{name:"Zimbabwe",flag:"flag-zw"}].filter(function(a){return-1!=a.name.toLowerCase().indexOf(e.toLowerCase())})}}]),angular.module("app").controller("SkillsCtrl",["$scope","$window",function(e,a){e.selectedSkill=0,e.skillsVisible=!1,e.labels=["Download Sales","In-Store Sales","Mail-Order Sales"],e.data=[300,500,100],$.getJSON("/skills.json",function(a){e.skills=a.filter(function(a){return a.enabled}),e.setSelectedSkill=function(a){e.selectedSkill=a,e.selectedSkill.chartOptions={cutoutPercentage:80,circumference:2*Math.PI,maintainAspectRatio:!0,tooltips:{enabled:!1}},e.selectedSkill.chartStyle={"background-image":"url(/skills/"+e.selectedSkill.image+")","background-repeat":"no-repeat","background-size":"60%","background-position":"50% 50%"}},e.setSelectedSkill(e.skills[0]),e.$apply()})}]),angular.module("app").controller("WorkoutCtrl",["$scope",function(t){t.timeRemaining=0;var n,i=[{name:"Jumping Jacks",split:t.rest=!1},{name:"Wall Sit",split:!1},{name:"Push-Up",split:!1},{name:"Crunch",split:!1},{name:"Step-Up",split:!0},{name:"Squat",split:!1},{name:"Triceps Dip",split:!1},{name:"Plank",split:!1},{name:"High Knees",split:!1},{name:"Lunge",split:!1},{name:"Push-Up with Rotation",split:!1},{name:"Side Plank",split:!0}];t.workout=function(){t.timeRemaining?(clearInterval(n),t.timer="",t.timeRemaining=0,t.rest=!1,t.exercise={name:"",split:!1}):(t.timeRemaining=45*i.length,n=setInterval(function(){if(t.timeRemaining--,0===t.timeRemaining)return t.exercise={name:"Finished! Congrats!",split:!1},t.timer="",t.timeRemaining=0,t.rest=!1,t.$apply(),clearInterval(n);var a=Math.floor(t.timeRemaining/45),e=t.timeRemaining-45*a;t.timer=30<e?e-30:e,t.rest=30<e,t.exercise=i[i.length-a-1],t.$apply()},1e3))}}]),angular.module("app").directive("head",["$rootScope","$state","$compile","$interpolate",function(t,o,n,i){var r=function(a){var e={href:a,rel:"stylesheet"};return e.href.match(/\.less$/)&&(e.rel="stylesheet/less"),e};return{restrict:"E",link:function(l,a){l.templateStyles=[];var e='<link ng-attr-rel="{{style.rel}}" ng-repeat="style in templateStyles" ng-href="{{style.href}}">';e=(e=e.replace(/\{\{/g,i.startSymbol())).replace(/\}\}/g,i.endSymbol()),a.append(n(e)(l)),t.$on("$stateChangeStart",function(a,e,t,n,i){l.templateStyles=function(a){for(var t={};""!==a.name;){var n=o.get("^",a);t[n.name]||(t[n.name]={}),a.templateStyleUrl&&(t[n.name][""]||(t[n.name][""]=r(a.templateStyleUrl))),a.views&&_.forEach(a.views,function(a,e){if(a.templateStyleUrl)return(e=e.split("@"))[1]?(t[e[1]]||(t[e[1]]={}),void(t[e[1]][e[0]]||(t[e[1]][e[0]]=r(a.templateStyleUrl)))):void(t[n.name][e[0]]=r(a.templateStyleUrl))}),a=n}var e=[];return _.forEach(t,function(a){_.forEach(a,function(a){_.includes(e,a)||e.push(a)})}),e.reverse(),e}(e)})}}}]),angular.module("app").service("CategoriesSvc",["$http",function(t){var i=this;i.getCategories=function(){return t.get("/api/categories")},i.getTasks=function(a){return t.get("/api/categories/"+a)},i.addCategory=function(a){return t.post("/api/categories/",a)},i.addTask=function(a,e){return t.post("/api/categories/"+a+"/tasks",e)},i.setPriorityList=function(a){i.choices=a,i.priorityList=[];for(var e=0;e<a.length;e++)for(var t=e+1;t<a.length;t++){var n=Math.round(Math.random());i.priorityList.push({id:0,firstChoice:a[0===n?e:t].name,secondChoice:a[0===n?t:e].name,choice:""})}!function(a){var e,t,n=a.length;for(;n;)t=Math.floor(Math.random()*n--),a[n].firstChoice,e=a[n],a[n]=a[t],a[t]=e}(i.priorityList);for(e=0;e<i.priorityList.length;e++)i.priorityList[e].id=e+1},i.getPriorityList=function(a){return i.priorityList}}]),angular.module("app").service("EmailSvc",["$http",function(e){this.send=function(a){return console.log(a),e.post("/api/email",a)}}]),angular.module("app").service("LanguageSvc",function(){var e=this;e.languages=[{code:"EN",name:"English",flag:"flag-icon-gb"},{code:"NL",name:"Nederlands",flag:"flag-icon-nl"},{code:"FR",name:"Français",flag:"flag-icon-fr"}],e.text=[{code:"EN"},{code:"NL"},{code:"FR"}],e.selectedLanguage=e.languages[0],e.setLanguage=function(a){return e.selectedLanguage=a},e.getLanguage=function(){return e.selectedLanguage}}),angular.module("app").service("PostsSvc",["$http",function(e){this.fetch=function(){return e.get("/api/posts")},this.create=function(a){return e.post("/api/posts",a)},this.getPost=function(a){return e.get("/api/posts/"+a._id)}}]),angular.module("app").service("UserSvc",["$http",function(n){var t=this;t.getUser=function(){return n.get("/api/users")},t.setToken=function(a){return n.defaults.headers.common["X-Auth"]=a,t.getUser()},t.authenticate=function(a){return n.post("/api/users/authenticate",{user:a}).then(function(a){return window.localStorage.token=a.data,t.setToken(a.data)})},t.login=function(a){return n.get("/api/users/"+a+"/login").then(function(a){return window.localStorage.token=a.data,t.setToken(a.data)})},t.updateUser=function(a){return n.post("/api/users/"+a._id,{user:a}).then(function(){return t.getUser()})},t.checkPassword=function(a,e){return n.post("/api/users/"+a+"/verification",{password:e})},t.changePassword=function(a,e,t){return n.post("/api/users/"+a+"/password",{oldPassword:e,newPassword:t})},t.changeUsername=function(a,e){return n.post("/api/users/"+a+"/username",{newUsername:e}).then(function(){return t.getUser()})},t.logout=function(){window.localStorage.clear(),n.defaults.headers.common["X-Auth"]=""},t.createUser=function(a,e){return n.post("/api/users",{username:a,password:e}).then(function(){return t.login(a,e)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
