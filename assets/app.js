angular.module("app",["ui.router","ui.bootstrap","ngAnimate","ngSanitize","ngDragDrop","ngTagsInput","vcRecaptcha","chart.js","tc.chartjs"]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$urlServiceProvider","$locationProvider",function(e,a,t,n){a.otherwise("/home"),t.config.strictMode(!1),e.state("home",{url:"/home",templateUrl:"/home.html"}).state("policy",{url:"/policy",templateUrl:"/policy.html"}).state("print",{url:"/print",templateUrl:"/print.html"}).state("experience",{url:"/experience",controller:"ExperienceCtrl",templateUrl:"/experience.html"}).state("skills",{url:"/skills",controller:"SkillsCtrl",templateUrl:"/skills.html"}).state("hobbies",{url:"/hobbies",controller:"HobbiesCtrl",templateUrl:"/hobbies.html"}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"/contact.html"}).state("workout",{url:"/workout",controller:"WorkoutCtrl",templateUrl:"/workout.html"}).state("posts",{url:"/posts",controller:"PostsCtrl",templateUrl:"/posts.html"}).state("profile",{url:"/profile",controller:"ProfileCtrl",templateUrl:"/profile.html"}).state("lists",{url:"/lists",controller:"ListsCtrl",templateUrl:"lists.html"}).state("prioritize",{url:"/prioritize",controller:"PrioritizeCtrl",templateUrl:"prioritize.html"}).state("bubbles",{url:"/bubbles",controller:"BubblesCtrl",templateUrl:"bubbles.html"}).state("asteroids",{url:"/asteroids",controller:"AsteroidsCtrl",templateUrl:"asteroids.html"}).state("lemmings",{url:"/lemmings",controller:"LemmingsCtrl",templateUrl:"lemmings.html"}).state("bots",{url:"/bots",controller:"BotsCtrl",templateUrl:"bots.html"}),n.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("app").service("WebSocketSvc",["$rootScope","$timeout",function(t,a){var n,i=function(){(n=new WebSocket("https:"===window.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host)).onopen=function(){console.log("Websocket connected")},n.onclose=function(e){console.log("Websocket closed. Reconnecting..."),a(i,1e3)},n.onerror=function(e){console.log("Error: "+e+" - State: "+n.readyState)},n.onmessage=function(e){var a=JSON.parse(e.data);t.$broadcast("ws:"+a.topic,a.data)}};this.send=function(e,a){var t=JSON.stringify({topic:e,data:a});n.send(t)},this.connect=i}]).run(["WebSocketSvc",function(e){e.connect()}]),angular.module("app").controller("AppCtrl",["$scope","$location","LanguageSvc","UserSvc",function(t,e,a,n){function i(e){t.loggedIn||(window.localStorage.user=e._id,t.loggedIn=!0,t.currentUser=e,t.$broadcast("login"))}console.log("%cYou sneaky bugger!","font: 2em sans-serif; color: DodgerBlue; text-shadow: 2px 0 0 #444, -2px 0 0 #444, 0 2px 0 #444, 0 -2px 0 #444, 1px 1px #444, -1px -1px 0 #444, 1px -1px 0 #444, -1px 1px 0 #444;"),console.log("I'm glad you're curious whether something is popping up in here. I'm a bit of a stickler when it comes to messages in the console so I try to make sure only things I want are visible. That being said, if there is a big error here, I would really appreciate you telling me so I can get rid of it!"),console.log("The code for my resume is hosted on Github if you really want to go into all this! => https://github.com/FlandersBurger/resume"),$(window).load(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")}),t.themeCounter=6,t.today=new Date,t.year=t.today.getFullYear(),t.random=Math.floor(1e6*Math.random()),t.flipTheme=function(){$(".loading").show(),$(".content").hide(),setTimeout(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")},800),t.themeCounter=t.themeCounter<6?t.themeCounter+1:t.themeCounter=1},$.getJSON("/skills.json",function(e){t.skills=e.filter(function(e){return e.enabled})}),$.getJSON("/hobbies.json",function(e){t.hobbies=e}),$.getJSON("/experience.json",function(e){t.jobs=e,t.jobs.forEach(function(e){e.startDate=new Date(e.startDate),e.endDate&&(e.endDate=new Date(e.endDate))})}),t.getTimeSpan=function(e){return e.startDate.getFullYear()+(e.endDate?" - "+e.endDate.getFullYear():" - Today")},t.languages=a.languages,t.selectedLanguage=a.getLanguage(),t.selectLanguage=function(e){t.selectedLanguage=a.setLanguage(e)},t.hoverdiv=function(e,a){var t=e.clientX+"px",n=e.clientY+20+"px";document.getElementById(a);return $("#"+a).css("left",t),$("#"+a).css("top",n),$("#"+a).toggle(),!1},t.socialMedia=[{name:"linkedin",url:"https://www.linkedin.com/in/laurent-debacker-1633a916",icon:"fa-linkedin"},{name:"github",url:"https://github.com/FlandersBurger",icon:"fa-github"},{name:"jsfiddle",url:"https://jsfiddle.net/user/BelgoCanadian/fiddles/",icon:"fa-jsfiddle"},{name:"stackoverflow",url:"http://stackoverflow.com/users/1083923/belgocanadian",icon:"fa-stack-overflow"}],window.localStorage.user&&n.login(window.localStorage.user).then(function(e){i(e.data)}),t.$on("login",function(e,a){i(a)}),t.$on("update",function(e,a){t.currentUser=a,t.currentUser.birthDate=new Date(t.currentUser.birthDate),t.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),t.$on("loading",function(e,a){t.loading=!0,$("#loading-icon").show()}),t.$on("loaded",function(e,a){t.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),t.logout=function(){firebase.auth().signOut().then(function(){t.loggedIn=!1,window.localStorage.clear(),t.$broadcast("logout")}).catch(function(e){})}}]),angular.module("app").controller("AsteroidsCtrl",["$scope","GameSvc",function(n,a){n.announce=!1;var l=document.getElementById("asteroids-page"),i=l.getContext("2d");i.font="30px Comic Sans MS",i.fillStyle="red",i.textAlign="center";var o={},s={},r={},g={},t={},e=10,c=Math.floor(Math.random()*e),f=[{name:"speed",announcement:"Max Speed ⇧",cycle:{rows:1,columns:4,size:[14,35],i:0,direction:!0},img:new Image,activate:function(e){e.maxSpeed+=100}},{name:"cooldown",announcement:"Cooldown ⇩",cycle:{rows:1,columns:3,size:[17,17],i:0,direction:!0},img:new Image,activate:function(e){0<e.cooldown&&(e.cooldownTime-=1)}},{name:"range",announcement:"Firing Range ⇧",cycle:{rows:4,columns:1,size:[30,8],i:0,direction:!0},img:new Image,activate:function(e){e.range+=5}},{name:"shield",announcement:"Shield",cycle:{rows:5,columns:1,size:[19,19],i:0,direction:!0},img:new Image,activate:function(e){e.shield=!0}},{name:"nuke",announcement:"Nuke",cycle:{rows:1,columns:8,size:[15,15],i:0,direction:!0},img:new Image,activate:function(e){for(var a in s)s[a].explode();M(5)}}];f.forEach(function(e,a,t){t[a].img.src="asteroids/"+e.name+".png"});var u,h=new Image;function d(){n.playing?(t[32]&&0===u.cooldown&&u.shoot(),t[37]&&(0===u.rotation?u.rotation=360:u.rotation-=3),t[39]&&(360===u.rotation?u.rotation=0:u.rotation+=3),t[38]?u.speed<=u.maxSpeed&&(u.speed+=5):0<u.speed&&u.speed--,t[40]&&0<u.speed&&(u.speed-=2)):t[32]&&(n.playing=!0,n.score=0,c=Math.floor(Math.random()*e),n.$apply(),u=new m,n.score=0,M(5),function e(){if(Object.keys(s).length<200){var a=Math.round(1e8*Math.random());s[a]=new w(a)}n.playing&&setTimeout(function(){e()},n.score<1e3?1e3:n.score<2e3?900:n.score<3e3?800:n.score<4e3?700:n.score<5e3?600:n.score<6e3?500:n.score<7e3?400:n.score<8e3?300:200)}())}function m(){this.width=50,this.height=50,this.shield=!1,this.range=80,this.cannon={x:this.width/2-4.5,y:this.height/2-.078125*this.height},this.cooldown=0,this.cooldownTime=20,this.position=[l.width/2-this.width/2,l.height/2-this.height/2],this.img=new Image,this.img.src="asteroids/spaceship.png",this.speed=0,this.maxSpeed=1e3,this.angle=0,this.rotation=0,this.shoot=function(){this.cooldown=this.cooldownTime;var e=Math.round(1e8*Math.random());o[e]=new p(e,this)},this.move=function(){for(var e in this.shield&&(i.beginPath(),i.arc(this.position[0]+this.width/2,this.position[1]+this.height/2,30,0,2*Math.PI),i.fillStyle="rgb(35, 237, 86, 0.5)",i.strokeStyle="rgb(66, 168, 36, 0.8)",i.lineWidth=5,i.stroke(),i.fill()),s){var a=s[e];if(S(a,this)){if(!this.shield)return $();this.shield=!1,a.explode()}}this.angle=this.rotation,0<this.cooldown&&this.cooldown--,b(this)}}function p(e,a){this.id=e,this.position=[a.position[0]+a.cannon.x+a.cannon.x*Math.cos((a.rotation-90)*Math.PI/180),a.position[1]+a.cannon.y+a.cannon.y*Math.sin((a.rotation-90)*Math.PI/180)],this.width=9,this.height=15,this.angle=a.angle,this.rotation=a.rotation,this.speed=a.speed+500,this.lifespan=a.range,this.img=new Image,this.img.src="asteroids/shot.png",this.move=function(){this.lifespan--,b(this)}}function w(e){this.id=e,this.width=50*Math.random()+20,this.height=this.width,this.position=k(this.width,this.height),this.angle=360*Math.random(),this.rotation=360*Math.random(),this.rotationSpeed=6*Math.random()-3,this.speed=300*Math.random()+2,this.img=new Image,this.img.src="asteroids/asteroid"+(Math.round(6*Math.random())+1)+".png",this.explode=function(){return g[this.id]=new y(this),delete s[this.id]},this.move=function(){for(var e in this.rotation+=this.rotationSpeed,360<this.rotation?this.rotation=this.rotation-360:this.rotation<0&&(this.rotation=360+this.rotation),o){var a=o[e];if(S(a,this)){this.explode();var t=Math.floor((a.speed-500)/10+70-this.width);Math.floor((t+n.score)/100)>Math.floor(n.score/100)&&C(),n.score+=t,n.$apply(),delete o[e]}}b(this)}}function y(e){this.position=[e.position[0],e.position[1]],this.width=e.width,this.height=e.height,this.speed=0,this.angle=360*Math.random(),this.cycle={rows:6,columns:8,size:[256,256],i:0,direction:!0},this.lifespan=47,this.img=h,this.move=function(){this.lifespan--,b(this),this.cycle.direction?this.cycle.i++:this.cycle.i--}}function v(e){this.id=e,this.powerup=f[Math.floor(Math.random()*f.length)],this.cycle=this.powerup.cycle,this.lifespan=1e3,this.cycle.size[1]>this.cycle.size[0]?(this.height=40,this.width=Math.round(this.height/this.cycle.size[1]*this.cycle.size[0])):(this.width=40,this.height=Math.round(this.width/this.cycle.size[0]*this.cycle.size[1])),this.position=k(this.width,this.height),this.img=this.powerup.img,this.angle=360*Math.random(),this.speed=150*Math.random()+50;var a=5;this.move=function(){return this.lifespan<=0?delete r[this.id]:S(u,this)?(n.announce=!0,n.announcement=this.powerup.announcement,n.$apply(),setTimeout(function(){n.announce=!1,n.$apply()},1e3),this.powerup.activate(u),delete r[this.id]):(this.lifespan--,b(this),void(a<=0?(this.cycle.direction?this.cycle.i++:this.cycle.i--,a=5):a--))}}function b(e){if(e.position[0]+=e.speed/100*Math.cos((e.angle-90)*Math.PI/180),e.position[1]+=e.speed/100*Math.sin((e.angle-90)*Math.PI/180),e.position[0]>l.width?e.position[0]=-e.width:e.position[0]<-e.width&&(e.position[0]=l.width),e.position[1]>l.height?e.position[1]=-e.height:e.position[1]<-e.height&&(e.position[1]=l.height),i.save(),i.translate(e.position[0],e.position[1]),i.translate(e.width/2,e.height/2),i.rotate(e.rotation*Math.PI/180),e.cycle){var a=e.cycle.i%e.cycle.columns,t=Math.floor(e.cycle.i/e.cycle.columns);i.drawImage(e.img,e.cycle.size[0]*a,e.cycle.size[1]*t,e.cycle.size[0],e.cycle.size[1],-e.width/2,-e.height/2,e.width,e.height),e.cycle.i<=0?(e.cycle.i=0,e.cycle.direction=!0):e.cycle.i>=e.cycle.columns*e.cycle.rows&&(e.cycle.i=e.cycle.columns*e.cycle.rows-1,e.cycle.direction=!1)}else i.drawImage(e.img,-e.width/2,-e.height/2,e.width,e.height);i.restore()}function k(e,a){var t,n=2*Math.random(),i=2*Math.random(),o=0;return 1<=n?(t=Math.random()*l.width,o=1<=o?0-a:l.height):(o=Math.random()*l.height,t=1<=i?0-e:l.width),[t,o]}function S(e,a){return e.position[0]<a.position[0]+a.width&&a.position[0]<e.position[0]+e.width&&e.position[1]<a.position[1]+a.height&&a.position[1]<e.position[1]+e.height}function M(e){var a=0;do{var t=Math.round(1e8*Math.random());s[t]=new w(t)}while(a++<=e)}function C(){if(Object.keys(r).length<3){var e=Math.round(1e8*Math.random());r[e]=new v(e)}}function $(){for(var e in n.playing=!1,s)s[e].explode();o={},n.loggedIn?n.currentUser.highscore.asteroids<n.score&&(n.currentUser.highscore.asteroids=n.score,a.setHighscore("asteroids",n.currentUser._id,n.score)):n.highscore<n.score&&(n.highscore=n.score)}function L(){console.log(window.innerWidth),l.width=window.innerWidth,l.height=window.innerHeight-(l.width<=768?50:105)}h.src="asteroids/explosion.png",window.addEventListener("keydown",function(e){t[e.keyCode||e.which]=!0},!0),window.addEventListener("keyup",function(e){t[e.keyCode||e.which]=!1},!0),n.highscore=0,window.addEventListener("resize",L,!1),L(),requestAnimationFrame(function e(){i.clearRect(0,0,l.width,l.height);for(var a in o)o[a].lifespan<=0?delete o[a]:o[a].move();for(a in s)s[a].move();for(a in r)r[a].move();for(a in g)g[a].lifespan<=0?delete g[a]:g[a].move();d();if(n.playing)u.move();else{var t=i.createLinearGradient(0,0,l.width,0);t.addColorStop("0","rgb("+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+")"),t.addColorStop("0.25","rgb("+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+")"),t.addColorStop("0.5","rgb("+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+")"),t.addColorStop("0.75","rgb("+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+")"),t.addColorStop("1.0","rgb("+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+")"),i.fillStyle=t,i.font="60px Monoton",i.fillText("Asteroids",l.width/2-i.measureText("Asteroids").width/2,l.height/2),i.font="20px Aldrich",i.fillText("Press space to start",l.width/2-i.measureText("Press space to start").width/2,l.height/2+20),i.fillText("Designed and developed by Laurent Debacker",l.width/2-i.measureText("Designed and developed by Laurent Debacker").width/2,l.height-30)}I+=x?1:-1;100<I?x=!(I=100):I<0&&(x=!(I=0));requestAnimationFrame(e)});var I=0,x=!0;n.space=function(){return{backgroundImage:'url("asteroids/space'+c+'.jpg")'}}}]),angular.module("app").controller("BotsCtrl",["$scope","BotsSvc",function(t,n){function i(){n.getLists(t.currentUser).then(function(e){t.lists=e.data})}t.categories=["Music","Television","Movies","Geography","History","Science","Gaming","Sport","Religion","Literature","Misc","Funny"],t.$on("login",function(e){i()}),t.selectList=function(e){t.selectedList=e},t.addList=function(){t.lists.unshift({name:"",creator:t.currentUser._id,date:new Date,values:[{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""}]}),t.selectedList=t.lists[0]},t.saveList=function(e){e.values=e.values.filter(function(e){return e.value}),10<=e.values.length?n.saveList(e).then(function(e){i(),t.selectList(e.data)}):alert("Lists must contain 10 or more values!")},t.deleteList=function(a){n.deleteList(a).then(function(e){i(),t.selectList(a)})}}]),angular.module("app").controller("BubblesCtrl",["$scope",function(e){var a=document.getElementById("bubbles-page"),t=a.getContext("2d"),n=[],i=["#ffc300","#ff5733","#c70039","#900c3e","#571845"];function o(){this.lifespan=0,this.radius=1,this.expanding=!0,this.speed=Math.round(3*Math.random()),this.circumference=Math.round(50*Math.random())+5,this.maxRadius=Math.round(200*Math.random())+20,this.x=Math.round(Math.random()*a.width),this.y=Math.round(Math.random()*a.height),this.vx=.5<=Math.random()?1:-1,this.vy=.5<=Math.random()?1:-1}requestAnimationFrame(function e(){n.push(new o),n=n.filter(function(e){return e.radius===e.maxRadius&&(e.expanding=!1),e.x+=e.vx*e.speed,e.y+=e.vy*e.speed,e.radius+=e.expanding?1:-1,0<e.radius}),t.clearRect(0,0,a.width,a.height),n.forEach(function(e){i[Math.round(i.length*e.radius/e.maxRadius)],t.beginPath(),t.arc(e.x,e.y,e.radius,0,2*Math.PI),t.fillStyle=i[Math.round(i.length*e.radius/e.maxRadius)],t.fill(),t.strokeStyle=i[i.length-Math.round(i.length*e.radius/e.maxRadius)],t.lineWidth=e.circumference*e.radius/e.maxRadius,t.stroke()}),requestAnimationFrame(e)}),function(){function e(){a.width=window.innerWidth,a.height=window.innerHeight-(a.width<=768?55:111)}window.addEventListener("resize",e,!1),e()}()}]),angular.module("app").controller("ContactCtrl",["$scope","EmailSvc",function(a,e){a.options=[{name:"Spam",text:"I am a spam bot and automatically check the first option I find!"},{name:"Opportunitiy",text:"You seem to have the skills I seek, I'd like to talk about some opportunities."},{name:"Resume",text:"I dig the resume, how did you make it?"},{name:"Other",text:"Sumtin else!"}],a.contact={email:"",name:"",phone:"",about:"",message:""},a.send=function(){a.sending=!0,console.log("here"),e.send({email:a.contact.email,name:a.contact.name,phone:a.contact.phone,about:a.contact.about,message:a.contact.message}).then(function(e){a.sent=!0,console.log("SUCCESS. status=%d, text=%s",e.status,e.text),console.log(e)},function(e){a.sending=!1,console.log("FAILED. error=",e)})}}]),angular.module("app").controller("ExperienceCtrl",["$scope",function(e){e.getSkill=function(a){if(e.skills)return e.skills.find(function(e){return e.code===a})}}]),angular.module("app").controller("HobbiesCtrl",["$scope","$window",function(a,e){a.hobbySelectorVisible=!1,$.getJSON("https://www.reddit.com/user/belgocanadian/about/.json",function(e){}),a.selectedHobby=a.hobbies[0],a.selectHobby=function(e){a.selectedHobby=e,a.hobbySelectorVisible=!1},a.showHobby=function(e,a,t){return!!e.images&&0<e.images.length}}]),angular.module("app").controller("LemmingsCtrl",["$scope","GameSvc",function(e,a){var t=0,n=1,i=document.getElementById("lemmings-page"),o=i.getContext("2d"),l=new Image;l.src="lemmings/lemmings.png";var s={},r={walk:{start:[0,0],end:[320,20],columns:8,rows:1,reverse:!1},huh:{start:[320,0],end:[640,20],columns:8,rows:1,reverse:!0},fall:{start:[0,80],end:[160,100],columns:4,rows:1,reverse:!1},fly:{start:[160,80],end:[480,110],columns:8,rows:1,reverse:!1},stop:{start:[0,120],end:[640,140],columns:16,rows:1,reverse:!1},climb:{start:[0,160],end:[640,185],columns:16,rows:1,reverse:!1},build:{start:[0,200],end:[640,225],columns:16,rows:1,reverse:!1},punch:{start:[0,240],end:[640,300],columns:16,rows:2,reverse:!1},dig:{start:[0,320],end:[320,345],columns:8,rows:1,reverse:!1}};function g(e){this.position=[Math.floor(Math.random()*(i.width-200))+100,Math.floor(Math.random()*(i.height-200))+100],this.direction=1<2*Math.random()?t:n,this.act=function(e){this.action=r[e],this.cycle=0,this.width=(this.action.end[0]-this.action.start[0])/this.action.columns,this.height=(this.action.end[1]-this.action.start[1]-20*(this.action.rows-1))/this.action.rows,this.animation=!0},this.act(e),this.move=function(){o.save(),o.translate(this.position[0],this.position[1]),o.translate(this.width/2,this.height/2),this.direction===t&&o.scale(-1,1);var e=this.cycle%this.action.columns,a=Math.floor(this.cycle/this.action.columns);o.drawImage(l,this.width*e+this.action.start[0],(this.height+20)*a+this.action.start[1],this.width,this.height,0,0,2*this.width,2*this.height),o.restore(),this.action.reverse?this.animation?(this.cycle++,this.cycle>=this.action.columns*this.action.rows&&(this.animation=!this.animation,this.cycle--)):(this.cycle--,this.cycle<0&&(this.animation=!this.animation,this.cycle=0)):(this.cycle++,this.cycle>=this.action.columns*this.action.rows&&(this.cycle=0))}}function c(){i.width=window.innerWidth,i.height=window.innerHeight-(i.width<=768?50:105)}window.addEventListener("resize",c,!1),c(),Object.keys(r).forEach(function(e){s[Math.round(1e8*Math.random())]=new g(e)}),function e(){o.clearRect(0,0,i.width,i.height);for(var a in s)s[a].move();setTimeout(function(){e()},150)}()}]),angular.module("app").controller("ListsCtrl",["$scope","$location","CategoriesSvc",function(n,e,i){n.showCategory=!0,n.init=function(){i.getCategories().then(function(e){for(var a in n.categories=e.data,n.tasks=[],n.categories)for(var t in n.categories[a].tasks)n.tasks.push({category:n.categories[a].name,task:n.categories[a].tasks[t].name})})},n.selectCategory=function(e){for(var a in n.selectedCategory=e,n.selectedTasks=[],n.selectableTasks=[],n.selectedCategory.tasks)n.selectableTasks.push(n.selectedCategory.tasks[a]);n.showCategory=!1,n.enteredCategory=""},n.newCategory=function(e){for(var a=!1,t=0;t<n.categories.length;t++)n.categories[t].name===e&&(n.selectCategory(n.categories[t]),a=!0);a||i.addCategory({category:e}).then(function(e){n.init(),n.selectCategory(e)}),n.enteredCategory=""},n.newTask=function(e){var a=!1;for(var t in n.selectedCategory.tasks)n.selectedCategory.tasks[t].name===e&&(a=!0,n.selectTask(n.selectedCategory.tasks[t]));a||i.addTask(n.selectedCategory.name,{task:e}).then(function(){n.selectedCategory.tasks.push({name:e}),n.addTask(n.selectedTasks,n.selectedCategory.tasks[n.selectedCategory.tasks.length-1])}),n.enteredTask=""},n.selectTask=function(e){n.addTask(n.selectedTasks,e),n.removeTask(n.selectableTasks,e),n.enteredTask=""},n.unselectTask=function(e){n.addTask(n.selectableTasks,e),n.removeTask(n.selectedTasks,e)},n.addTask=function(e,a){e.push(a)},n.removeTask=function(e,a){e.splice(e.indexOf(a),1)},n.startPrioritizing=function(){i.setPriorityList(n.selectedTasks),e.path("/prioritize")},n.getQuestions=function(){if(!n.selectedTasks)return"";for(var e=0,a=n.selectedTasks.length-1;0<a;a--)e+=a;return e}}]),angular.module("app").controller("LoginCtrl",["$scope","$location","UserSvc",function(n,i,o){var a=new firebaseui.auth.AuthUI(firebase.auth());function t(){a.start("#firebaseui-auth-container",{callbacks:{signInSuccess:function(a,e,t){return firebase.auth().currentUser.getIdToken(!0).then(function(e){o.authenticate({displayName:a.displayName,email:a.email,photoURL:a.photoURL,emailVerified:a.emailVerified,idToken:e}).then(function(e){n.$emit("login",e.data),$("#modal-login").modal("hide"),i.path("/")},function(){n.$emit("popup",{message:"Login Failed",type:"alert-danger"})})}).catch(function(e){}),!1},signInFailure:function(e){if("firebaseui/anonymous-upgrade-merge-conflict"!=e.code)return Promise.resolve();var a=e.credential;return firebase.auth().signInWithCredential(a)},uiShown:function(){document.getElementById("loader").style.display="none"}},signInSuccessUrl:"/home",signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],signInFlow:"popup"})}n.$on("logout",function(e){a.reset(),t()}),t()}]),angular.module("app").controller("PostsCtrl",["$scope","$filter","PostsSvc",function(t,e,n){t.addPost=function(){t.postBody&&n.create({body:t.postBody}).then(function(e){t.postBody=null})},n.fetch().then(function(e){t.posts=e.data}),t.$on("ws:new_post",function(e,a){t.$apply(function(){n.getPost(a).then(function(e){t.posts.unshift(e.data)})})})}]),angular.module("app").controller("PrioritizeCtrl",["$scope","$location","CategoriesSvc",function(n,e,t){n.priorityList=t.getPriorityList(),n.priorityList?(n.selectedQuestion=1,n.currentQuestion=1,n.done=!1):e.path("/lists"),n.makeChoice=function(e){for(var a in n.priorityList)n.priorityList[a].id===n.selectedQuestion&&(n.priorityList[a].choice=1===e?n.priorityList[a].firstChoice:n.priorityList[a].secondChoice);n.selectedQuestion===n.currentQuestion&&(n.currentQuestion=n.currentQuestion===n.priorityList.length?1:n.currentQuestion+1),n.selectedQuestion=n.currentQuestion;var t=!1;for(a in n.priorityList)if(""===n.priorityList[a].choice){t=!0;break}t||($("#prioritizeChoices").hide(300),n.done=!0)},n.getButtonValue=function(e){if(!n.priorityList)return"";for(var a=0;a<n.priorityList.length;a++)if(n.priorityList[a].id===n.selectedQuestion)return 1===e?n.priorityList[a].firstChoice:n.priorityList[a].secondChoice},n.selectQuestion=function(e){n.selectedQuestion=e},n.getFilteredPriorityList=function(){return n.priorityList?n.priorityList.sort(function(e,a){return e.id-a.id}).filter(function(e){return""!==e.choice||e.id===n.currentQuestion}):[]},n.getChoicesMade=function(){if(!n.priorityList)return"";var e=0;for(var a in n.priorityList)""!==n.priorityList[a].choice&&e++;return e},n.getButtonClass=function(e){if(!n.priorityList)return"";for(var a in n.priorityList)if(n.priorityList[a].id===n.selectedQuestion)return""===n.priorityList[a].choice?"btn-primary":1===e?n.priorityList[a].firstChoice===n.priorityList[a].choice?"btn-success":"btn-danger":n.priorityList[a].secondChoice===n.priorityList[a].choice?"btn-success":"btn-danger"},n.showChoices=function(){$("#prioritizeChoices").show(1e3),$("#reviewChoices").hide()},n.chartClick=function(e){n.chart&&console.log(n.chart.getSegmentsAtEvent(e))},n.showResults=function(){for(var e in n.data=[],n.options={responsive:!0,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:0,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<h3 class="tc-chart-js-legend" style="padding:5px"><% for (var i=0; i<segments.length; i++){%><div class="label" style="float:left;margin:5px;background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></div><%}%></h3>'},t.choices)for(var a in t.choices[e].votes=0,n.priorityList)t.choices[e].name===n.priorityList[a].choice&&t.choices[e].votes++;for(e in t.choices.sort(function(e,a){return e.votes<a.votes}),t.choices)n.data.push({value:t.choices[e].votes,label:t.choices[e].name});$("#prioritizeResult").hide(),$("#prioritizeChoices").hide(),$("#priorityResults").show(1e3)}}]),angular.module("app").controller("ProfileCtrl",["$scope","$location","UserSvc",function(o,e,l){o.currentUser?($("#sex-indicator").offset({left:o.currentUser.gender.sex/200*$("#sex").width()+$("#sex").offset().left}),$("#identity-indicator").offset({left:o.currentUser.gender.identity/200*$("#identity").width()+$("#identity").offset().left})):e.path("/"),o.sexes=["Male","FtM Male","Intersex","MtF Female","Female"],o.identities=["Man","Bigender","Pangender","Agender","Polygender","Genderfluid","Genderqueer","Queer","Woman"],o.dateOptions={maxDate:new Date,minDate:new Date(1900,1,1),initDate:new Date(2e3,1,1),datepickerMode:"year"},o.gender=function(e,a){return e[Math.round(a/200*(e.length-1))]},o.startSlider=function(){},o.dragSlider=function(e,a,t){o.currentUser.gender[t]=Math.round(($("#"+t+"-indicator").offset().left-$("#"+t).offset().left)/($("#"+t).width()-$("#"+t+"-indicator").width())*200),o.$apply()},o.stopSlider=function(){},o.usernameToggle=!0,o.passwordToggle=!0,o.toggleUsername=function(){o.usernameToggle=!o.usernameToggle,o.newUsername=o.currentUser.username},o.togglePassword=function(){o.newPassword=null,o.confirmPassword=null,o.passwordToggle=!o.passwordToggle},o.checkPassword=function(e){if(e){var a=o.currentUser._id;l.checkPassword(a,e).then(function(e){o.togglePassword()},function(){var e=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:e},200)})}},o.changePassword=function(e,a,t){if(a)if(a==t){var n=o.currentUser._id;l.changePassword(n,e,a).then(function(e){o.$emit("popup",{message:"Password Changed",type:"alert-success"}),o.oldPassword=null,o.togglePassword()},function(){o.$emit("popup",{message:"Password Change Failed",type:"alert-danger"})})}else{var i=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:i},200)}},o.changeUsername=function(a){o.$emit("loading"),l.changeUsername(o.currentUser._id,a).then(function(e){o.$emit("update",e.data)},function(e){o.$emit("popup",{message:a+" already in use",type:"alert-danger"})})},o.updateUser=function(){o.currentUser&&(o.$emit("loading"),l.updateUser(o.currentUser).then(function(e){o.$emit("update",e.data)}))},o.$watch("currentUser.flags.length",function(e){o.updateUser()}),o.loadCountries=function(a){return[{name:"Andorra",flag:"flag-ad",tidbit:""},{name:"United Arab Emirates",flag:"flag-ae"},{name:"Afghanistan",flag:"flag-af"},{name:"Antigua and Barbuda",flag:"flag-ag"},{name:"Anguilla",flag:"flag-ai"},{name:"Albania",flag:"flag-al"},{name:"Armenia",flag:"flag-am"},{name:"Angola",flag:"flag-ao"},{name:"Antarctica",flag:"flag-aq"},{name:"Argentina",flag:"flag-ar"},{name:"American Somoa",flag:"flag-as"},{name:"Austria",flag:"flag-at"},{name:"Australia",flag:"flag-au"},{name:"Aruba",flag:"flag-aw"},{name:"Åland Islands",flag:"flag-ax"},{name:"Azerbaijan",flag:"flag-az"},{name:"Bosnia and Herzegovina",flag:"flag-ba"},{name:"Barbados",flag:"flag-bb"},{name:"Bangladesh",flag:"flag-bd"},{name:"Belgium",flag:"flag-be"},{name:"Burkina Faso",flag:"flag-bf"},{name:"Bulgaria",flag:"flag-bg"},{name:"Bahrain",flag:"flag-bh"},{name:"Burundi",flag:"flag-bi"},{name:"Benin",flag:"flag-bj"},{name:"Saint Barthélemy",flag:"flag-bl"},{name:"Bermuda",flag:"flag-bm"},{name:"Brunei ",flag:"flag-bn"},{name:"Bolivia, Plurinational State of",flag:"flag-bo"},{name:"Bonaire, Sint Eustatius and Saba",flag:"flag-bq"},{name:"Brazil",flag:"flag-br"},{name:"Bahamas",flag:"flag-bs"},{name:"Bhutan",flag:"flag-bt"},{name:"Bouvet Island",flag:"flag-bv"},{name:"Botswana",flag:"flag-bw"},{name:"Belarus",flag:"flag-by"},{name:"Belize",flag:"flag-bz"},{name:"Canada",flag:"flag-ca"},{name:"Cocos (Keeling) Islands",flag:"flag-cc"},{name:"Congo, the Democratic Republic of the",flag:"flag-cd"},{name:"Central African Republic",flag:"flag-cf"},{name:"Congo",flag:"flag-cg"},{name:"Switzerland",flag:"flag-ch"},{name:"Côte d'Ivoire",flag:"flag-ci"},{name:"Cook Islands",flag:"flag-ck"},{name:"Chile",flag:"flag-cl"},{name:"Cameroon",flag:"flag-cm"},{name:"China",flag:"flag-cn"},{name:"Colombia",flag:"flag-co"},{name:"Costa Rica",flag:"flag-cr"},{name:"Cuba",flag:"flag-cu"},{name:"Cabo Verde",flag:"flag-cv"},{name:"Curaçao",flag:"flag-cw"},{name:"Christmas Island",flag:"flag-cx"},{name:"Cyprus",flag:"flag-cy"},{name:"Czech Republic",flag:"flag-cz"},{name:"Germany",flag:"flag-de"},{name:"Djibouti",flag:"flag-dj"},{name:"Denmark",flag:"flag-dk"},{name:"Dominica",flag:"flag-dm"},{name:"Dominican Republic",flag:"flag-do"},{name:"Algeria",flag:"flag-dz"},{name:"Ecuador",flag:"flag-ec"},{name:"Estonia",flag:"flag-ee"},{name:"Egypt",flag:"flag-eg"},{name:"Western Sahara",flag:"flag-eh"},{name:"Eritrea",flag:"flag-er"},{name:"Spain",flag:"flag-es"},{name:"Ethiopia",flag:"flag-et"},{name:"Finland",flag:"flag-fi"},{name:"Fiji",flag:"flag-fj"},{name:"Falkland Islands (Malvinas)",flag:"flag-fk"},{name:"Micronesia, Federated States of",flag:"flag-fm"},{name:"Faroe Islands",flag:"flag-fo"},{name:"France",flag:"flag-fr"},{name:"Gabon",flag:"flag-ga"},{name:"United Kingdom of Great Britain and Northern Ireland",flag:"flag-gb"},{name:"Grenada",flag:"flag-gd"},{name:"Georgia",flag:"flag-ge"},{name:"French Guiana",flag:"flag-gf"},{name:"Guernsey",flag:"flag-gg"},{name:"Ghana",flag:"flag-gh"},{name:"Gibraltar",flag:"flag-gi"},{name:"Greenland",flag:"flag-gl"},{name:"Gambia",flag:"flag-gm"},{name:"Guinea",flag:"flag-gn"},{name:"Guadeloupe",flag:"flag-gp"},{name:"Equatorial Guinea",flag:"flag-gq"},{name:"Greece",flag:"flag-gr"},{name:"South Georgia and the South Sandwich Islands",flag:"flag-gs"},{name:"Guatemala",flag:"flag-gt"},{name:"Guam",flag:"flag-gu"},{name:"Guinea-Bissau",flag:"flag-gw"},{name:"Guyana",flag:"flag-gy"},{name:"Hong Kong",flag:"flag-hk"},{name:"Heard Island and McDonald Islands",flag:"flag-hm"},{name:"Honduras",flag:"flag-hn"},{name:"Croatia",flag:"flag-hr"},{name:"Haiti",flag:"flag-ht"},{name:"Hungary",flag:"flag-hu"},{name:"Indonesia",flag:"flag-id"},{name:"Ireland",flag:"flag-ie"},{name:"Israel",flag:"flag-il"},{name:"Isle of Man",flag:"flag-im"},{name:"India",flag:"flag-in"},{name:"British Indian Ocean Territory",flag:"flag-io"},{name:"Iraq",flag:"flag-iq"},{name:"Iran, Islamic Republic of",flag:"flag-ir"},{name:"Iceland",flag:"flag-is"},{name:"Italy",flag:"flag-it"},{name:"Jersey",flag:"flag-je"},{name:"Jamaica",flag:"flag-jm"},{name:"Jordan",flag:"flag-jo"},{name:"Japan",flag:"flag-jp"},{name:"Kenya",flag:"flag-ke"},{name:"Kyrgyzstan",flag:"flag-kg"},{name:"Cambodia",flag:"flag-kh"},{name:"Kiribati",flag:"flag-ki"},{name:"Comoros",flag:"flag-km"},{name:"Saint Kitts and Nevis",flag:"flag-kn"},{name:"Korea, Democratic People's Republic of",flag:"flag-kp"},{name:"Korea, Republic of",flag:"flag-kr"},{name:"Kuwait",flag:"flag-kw"},{name:"Cayman Islands",flag:"flag-ky"},{name:"Kazakhstan",flag:"flag-kz"},{name:"Lao People's Democratic Republic",flag:"flag-la"},{name:"Lebanon",flag:"flag-lb"},{name:"Saint Lucia",flag:"flag-lc"},{name:"Liechtenstein",flag:"flag-li"},{name:"Sri Lanka",flag:"flag-lk"},{name:"Liberia",flag:"flag-lr"},{name:"Lesotho",flag:"flag-ls"},{name:"Lithuania",flag:"flag-lt"},{name:"Luxembourg",flag:"flag-lu"},{name:"Latvia",flag:"flag-lv"},{name:"Libya",flag:"flag-ly"},{name:"Morocco",flag:"flag-ma"},{name:"Monaco",flag:"flag-mc"},{name:"Moldova, Republic of",flag:"flag-md"},{name:"Montenegro",flag:"flag-me"},{name:"Saint Martin (French part)",flag:"flag-mf"},{name:"Madagascar",flag:"flag-mg"},{name:"Marshall Islands",flag:"flag-mh"},{name:"Macedonia, the former Yugoslav Republic of",flag:"flag-mk"},{name:"Mali",flag:"flag-ml"},{name:"Myanmar",flag:"flag-mm"},{name:"Mongolia",flag:"flag-mn"},{name:"Macao",flag:"flag-mo"},{name:"Northern Mariana Islands",flag:"flag-mp"},{name:"Martinique",flag:"flag-mq"},{name:"Mauritania",flag:"flag-mr"},{name:"Montserrat",flag:"flag-ms"},{name:"Malta",flag:"flag-mt"},{name:"Mauritius",flag:"flag-mu"},{name:"Maldives",flag:"flag-mv"},{name:"Malawi",flag:"flag-mw"},{name:"Mexico",flag:"flag-mx"},{name:"Malaysia",flag:"flag-my"},{name:"Mozambique",flag:"flag-mz"},{name:"Namibia",flag:"flag-na"},{name:"New Caledonia",flag:"flag-nc"},{name:"Niger",flag:"flag-ne"},{name:"Norfolk Island",flag:"flag-nf"},{name:"Nigeria",flag:"flag-ng"},{name:"Nicaragua",flag:"flag-ni"},{name:"Netherlands",flag:"flag-nl"},{name:"Norway",flag:"flag-no"},{name:"Nepal",flag:"flag-np"},{name:"Nauru",flag:"flag-nr"},{name:"Niue",flag:"flag-nu"},{name:"New Zealand",flag:"flag-nz"},{name:"Oman",flag:"flag-om"},{name:"Panama",flag:"flag-pa"},{name:"Peru",flag:"flag-pe"},{name:"French Polynesia",flag:"flag-pf"},{name:"Papua New Guinea",flag:"flag-pg"},{name:"Philippines",flag:"flag-ph"},{name:"Pakistan",flag:"flag-pk"},{name:"Poland",flag:"flag-pl"},{name:"Saint Pierre and Miquelon",flag:"flag-pm"},{name:"Pitcairn",flag:"flag-pn"},{name:"Puerto Rico",flag:"flag-pr"},{name:"Palestine, State of",flag:"flag-ps"},{name:"Portugal",flag:"flag-pt"},{name:"Palau",flag:"flag-pw"},{name:"Paraguay",flag:"flag-py"},{name:"Qatar",flag:"flag-qa"},{name:"Réunion",flag:"flag-re"},{name:"Romania",flag:"flag-ro"},{name:"Serbia",flag:"flag-rs"},{name:"Russian Federation",flag:"flag-ru"},{name:"Rwanda",flag:"flag-rw"},{name:"Saudi Arabia",flag:"flag-sa"},{name:"Solomon Islands",flag:"flag-sb"},{name:"Seychelles",flag:"flag-sc"},{name:"Sudan",flag:"flag-sd"},{name:"Sweden",flag:"flag-se"},{name:"Singapore",flag:"flag-sg"},{name:"Saint Helena, Ascension and Tristan da Cunha",flag:"flag-sh"},{name:"Slovenia",flag:"flag-si"},{name:"Svalbard and Jan Mayen",flag:"flag-sj"},{name:"Slovakia",flag:"flag-sk"},{name:"Sierra Leone",flag:"flag-sl"},{name:"San Marino",flag:"flag-sm"},{name:"Senegal",flag:"flag-sn"},{name:"Somalia",flag:"flag-so"},{name:"Suriname",flag:"flag-sr"},{name:"South Sudan",flag:"flag-ss"},{name:"Sao Tome and Principe",flag:"flag-st"},{name:"El Salvador",flag:"flag-sv"},{name:"Sint Maarten (Dutch part)",flag:"flag-sx"},{name:"Syrian Arab Republic",flag:"flag-sy"},{name:"Swaziland",flag:"flag-sz"},{name:"Turks and Caicos Islands",flag:"flag-tc"},{name:"Chad",flag:"flag-td"},{name:"French Southern Territories",flag:"flag-tf"},{name:"Togo",flag:"flag-tg"},{name:"Thailand",flag:"flag-th"},{name:"Tajikistan",flag:"flag-tj"},{name:"Tokelau",flag:"flag-tk"},{name:"Timor-Leste",flag:"flag-tl"},{name:"Turkmenistan",flag:"flag-tm"},{name:"Tunisia",flag:"flag-tn"},{name:"Tonga",flag:"flag-to"},{name:"Turkey",flag:"flag-tr"},{name:"Trinidad and Tobago",flag:"flag-tt"},{name:"Tuvalu",flag:"flag-tv"},{name:"Taiwan, Province of China",flag:"flag-tw"},{name:"Tanzania, United Republic of",flag:"flag-tz"},{name:"Ukraine",flag:"flag-ua"},{name:"Uganda",flag:"flag-ug"},{name:"United States Minor Outlying Islands",flag:"flag-um"},{name:"United States of America",flag:"flag-us"},{name:"Uruguay",flag:"flag-uy"},{name:"Uzbekistan",flag:"flag-uz"},{name:"Holy See",flag:"flag-va"},{name:"Saint Vincent and the Grenadines",flag:"flag-vc"},{name:"Venezuela, Bolivarian Republic of",flag:"flag-ve"},{name:"Virgin Islands, British",flag:"flag-vg"},{name:"Virgin Islands, U.S.",flag:"flag-vi"},{name:"Viet Nam",flag:"flag-vn"},{name:"Vanuatu",flag:"flag-vu"},{name:"Wallis and Futuna",flag:"flag-wf"},{name:"Samoa",flag:"flag-ws"},{name:"Yemen",flag:"flag-ye"},{name:"Mayotte",flag:"flag-yt"},{name:"South Africa",flag:"flag-za"},{name:"Zambia",flag:"flag-zm"},{name:"Zimbabwe",flag:"flag-zw"}].filter(function(e){return-1!=e.name.toLowerCase().indexOf(a.toLowerCase())})}}]),angular.module("app").controller("SkillsCtrl",["$scope","$window",function(a,e){a.selectedSkill=0,a.skillsVisible=!1,a.labels=["Download Sales","In-Store Sales","Mail-Order Sales"],a.data=[300,500,100],$.getJSON("/skills.json",function(e){a.skills=e.filter(function(e){return e.enabled}),a.setSelectedSkill=function(e){a.selectedSkill=e,a.selectedSkill.chartOptions={cutoutPercentage:80,circumference:2*Math.PI,maintainAspectRatio:!0,tooltips:{enabled:!1}},a.selectedSkill.chartStyle={"background-image":"url(/skills/"+a.selectedSkill.image+")","background-repeat":"no-repeat","background-size":"60%","background-position":"50% 50%"}},a.setSelectedSkill(a.skills[0]),a.$apply()})}]),angular.module("app").controller("WorkoutCtrl",["$scope",function(t){t.timeRemaining=0;var n,i=[{name:"Jumping Jacks",split:t.rest=!1},{name:"Wall Sit",split:!1},{name:"Push-Up",split:!1},{name:"Crunch",split:!1},{name:"Step-Up",split:!0},{name:"Squat",split:!1},{name:"Triceps Dip",split:!1},{name:"Plank",split:!1},{name:"High Knees",split:!1},{name:"Lunge",split:!1},{name:"Push-Up with Rotation",split:!1},{name:"Side Plank",split:!0}];t.workout=function(){t.timeRemaining?(clearInterval(n),t.timer="",t.timeRemaining=0,t.rest=!1,t.exercise={name:"",split:!1}):(t.timeRemaining=45*i.length,n=setInterval(function(){if(t.timeRemaining--,0===t.timeRemaining)return t.exercise={name:"Finished! Congrats!",split:!1},t.timer="",t.timeRemaining=0,t.rest=!1,t.$apply(),clearInterval(n);var e=Math.floor(t.timeRemaining/45),a=t.timeRemaining-45*e;t.timer=30<a?a-30:a,t.rest=30<a,t.exercise=i[i.length-e-1],t.$apply()},1e3))}}]),angular.module("app").directive("head",["$rootScope","$state","$compile","$interpolate",function(t,l,n,i){var s=function(e){var a={href:e,rel:"stylesheet"};return a.href.match(/\.less$/)&&(a.rel="stylesheet/less"),a};return{restrict:"E",link:function(o,e){o.templateStyles=[];var a='<link ng-attr-rel="{{style.rel}}" ng-repeat="style in templateStyles" ng-href="{{style.href}}">';a=(a=a.replace(/\{\{/g,i.startSymbol())).replace(/\}\}/g,i.endSymbol()),e.append(n(a)(o)),t.$on("$stateChangeStart",function(e,a,t,n,i){o.templateStyles=function(e){for(var t={};""!==e.name;){var n=l.get("^",e);t[n.name]||(t[n.name]={}),e.templateStyleUrl&&(t[n.name][""]||(t[n.name][""]=s(e.templateStyleUrl))),e.views&&_.forEach(e.views,function(e,a){if(e.templateStyleUrl)return(a=a.split("@"))[1]?(t[a[1]]||(t[a[1]]={}),void(t[a[1]][a[0]]||(t[a[1]][a[0]]=s(e.templateStyleUrl)))):void(t[n.name][a[0]]=s(e.templateStyleUrl))}),e=n}var a=[];return _.forEach(t,function(e){_.forEach(e,function(e){_.includes(a,e)||a.push(e)})}),a.reverse(),a}(a)})}}}]),angular.module("app").service("BotsSvc",["$http",function(a){this.getLists=function(e){return a.get("/api/bots/lists/"+e._id)},this.saveList=function(e){return a.put("/api/bots/lists",e)},this.deleteList=function(e){return a.delete("/api/bots/lists/"+e._id)}}]),angular.module("app").service("CategoriesSvc",["$http",function(t){var i=this;i.getCategories=function(){return t.get("/api/categories")},i.getTasks=function(e){return t.get("/api/categories/"+e)},i.addCategory=function(e){return t.post("/api/categories/",e)},i.addTask=function(e,a){return t.post("/api/categories/"+e+"/tasks",a)},i.setPriorityList=function(e){i.choices=e,i.priorityList=[];for(var a=0;a<e.length;a++)for(var t=a+1;t<e.length;t++){var n=Math.round(Math.random());i.priorityList.push({id:0,firstChoice:e[0===n?a:t].name,secondChoice:e[0===n?t:a].name,choice:""})}for(a in function(e){var a,t,n=e.length;for(;n;)t=Math.floor(Math.random()*n--),a=e[n],e[n]=e[t],e[t]=a}(i.priorityList),i.priorityList)i.priorityList[a].id=a+1},i.getPriorityList=function(e){return i.priorityList}}]),angular.module("app").service("EmailSvc",["$http",function(a){this.send=function(e){return console.log(e),a.post("/api/email",e)}}]),angular.module("app").service("GameSvc",["$http",function(n){this.getHighscore=function(e,a){return n.get("/api/games/"+e+"/"+a+"/highscore")},this.setHighscore=function(e,a,t){return n.post("/api/games/"+e+"/"+a+"/highscore",{score:t})}}]),angular.module("app").service("LanguageSvc",function(){var a=this;a.languages=[{code:"EN",name:"English",flag:"flag-icon-gb"},{code:"NL",name:"Nederlands",flag:"flag-icon-nl"},{code:"FR",name:"Français",flag:"flag-icon-fr"}],a.text=[{code:"EN"},{code:"NL"},{code:"FR"}],a.selectedLanguage=a.languages[0],a.setLanguage=function(e){return a.selectedLanguage=e},a.getLanguage=function(){return a.selectedLanguage}}),angular.module("app").service("PostsSvc",["$http",function(a){this.fetch=function(){return a.get("/api/posts")},this.create=function(e){return a.post("/api/posts",e)},this.getPost=function(e){return a.get("/api/posts/"+e._id)}}]),angular.module("app").service("UserSvc",["$http",function(n){var t=this;t.getUser=function(){return n.get("/api/users")},t.setToken=function(e){return n.defaults.headers.common["X-Auth"]=e,t.getUser()},t.authenticate=function(e){return n.post("/api/users/authenticate",{user:e}).then(function(e){return window.localStorage.token=e.data,t.setToken(e.data)})},t.login=function(e){return n.get("/api/users/"+e+"/login").then(function(e){return window.localStorage.token=e.data,t.setToken(e.data)})},t.updateUser=function(e){return n.post("/api/users/"+e._id,{user:e}).then(function(){return t.getUser()})},t.checkPassword=function(e,a){return n.post("/api/users/"+e+"/verification",{password:a})},t.changePassword=function(e,a,t){return n.post("/api/users/"+e+"/password",{oldPassword:a,newPassword:t})},t.changeUsername=function(e,a){return n.post("/api/users/"+e+"/username",{newUsername:a}).then(function(){return t.getUser()})},t.logout=function(){window.localStorage.clear(),n.defaults.headers.common["X-Auth"]=""},t.createUser=function(e,a){return n.post("/api/users",{username:e,password:a}).then(function(){return t.login(e,a)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInJvdXRlcy5qcyIsIndlYnNvY2tldHMuanMiLCJjb250cm9sbGVycy9hcHAuY3RybC5qcyIsImNvbnRyb2xsZXJzL2FzdGVyb2lkcy5jdHJsLmpzIiwiY29udHJvbGxlcnMvYm90cy5jdHJsLmpzIiwiY29udHJvbGxlcnMvYnViYmxlcy5jdHJsLmpzIiwiY29udHJvbGxlcnMvY29udGFjdC5jdHJsLmpzIiwiY29udHJvbGxlcnMvZXhwZXJpZW5jZS5jdHJsLmpzIiwiY29udHJvbGxlcnMvaG9iYmllcy5jdHJsLmpzIiwiY29udHJvbGxlcnMvbGVtbWluZ3MuY3RybC5qcyIsImNvbnRyb2xsZXJzL2xpc3RzLmN0cmwuanMiLCJjb250cm9sbGVycy9sb2dpbi5jdHJsLmpzIiwiY29udHJvbGxlcnMvcG9zdHMuY3RybC5qcyIsImNvbnRyb2xsZXJzL3ByaW9yaXRpemUuY3RybC5qcyIsImNvbnRyb2xsZXJzL3Byb2ZpbGUuY3RybC5qcyIsImNvbnRyb2xsZXJzL3NraWxscy5jdHJsLmpzIiwiY29udHJvbGxlcnMvd29ya291dC5jdHJsLmpzIiwiZGlyZWN0aXZlcy91aS1yb3V0ZXItc3R5bGVzLmRpci5qcyIsInNlcnZpY2VzL2JvdHMuc3ZjLmpzIiwic2VydmljZXMvY2F0ZWdvcmllcy5zdmMuanMiLCJzZXJ2aWNlcy9lbWFpbC5zdmMuanMiLCJzZXJ2aWNlcy9nYW1lLnN2Yy5qcyIsInNlcnZpY2VzL2xhbmd1YWdlLnN2Yy5qcyIsInNlcnZpY2VzL3Bvc3RzLnN2Yy5qcyIsInNlcnZpY2VzL3VzZXIuc3ZjLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiR1cmxTZXJ2aWNlUHJvdmlkZXIiLCIkbG9jYXRpb25Qcm92aWRlciIsIm90aGVyd2lzZSIsInN0cmljdE1vZGUiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImh0bWw1TW9kZSIsImVuYWJsZWQiLCJyZXF1aXJlQmFzZSIsInNlcnZpY2UiLCIkcm9vdFNjb3BlIiwiJHRpbWVvdXQiLCJjb25uZWN0aW9uIiwiY29ubmVjdCIsIldlYlNvY2tldCIsIndpbmRvdyIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJob3N0Iiwib25vcGVuIiwiY29uc29sZSIsImxvZyIsIm9uY2xvc2UiLCJlIiwib25lcnJvciIsInJlYWR5U3RhdGUiLCJvbm1lc3NhZ2UiLCJwYXlsb2FkIiwiSlNPTiIsInBhcnNlIiwiZGF0YSIsIiRicm9hZGNhc3QiLCJ0b3BpYyIsInRoaXMiLCJzZW5kIiwianNvbiIsInN0cmluZ2lmeSIsInJ1biIsIldlYlNvY2tldFN2YyIsIiRzY29wZSIsIiRsb2NhdGlvbiIsIkxhbmd1YWdlU3ZjIiwiVXNlclN2YyIsImxvZ2luIiwidXNlciIsImxvZ2dlZEluIiwibG9jYWxTdG9yYWdlIiwiX2lkIiwiY3VycmVudFVzZXIiLCIkIiwibG9hZCIsImZhZGVPdXQiLCJmYWRlSW4iLCJ0aGVtZUNvdW50ZXIiLCJ0b2RheSIsIkRhdGUiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJyYW5kb20iLCJNYXRoIiwiZmxvb3IiLCJmbGlwVGhlbWUiLCJzaG93IiwiaGlkZSIsInNldFRpbWVvdXQiLCJnZXRKU09OIiwic2tpbGxzIiwiZmlsdGVyIiwic2tpbGwiLCJob2JiaWVzIiwiam9icyIsImZvckVhY2giLCJqb2IiLCJzdGFydERhdGUiLCJlbmREYXRlIiwiZ2V0VGltZVNwYW4iLCJsYW5ndWFnZXMiLCJzZWxlY3RlZExhbmd1YWdlIiwiZ2V0TGFuZ3VhZ2UiLCJzZWxlY3RMYW5ndWFnZSIsImxhbmd1YWdlIiwic2V0TGFuZ3VhZ2UiLCJob3ZlcmRpdiIsImRpdmlkIiwibGVmdCIsImNsaWVudFgiLCJ0b3AiLCJjbGllbnRZIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNzcyIsInRvZ2dsZSIsInNvY2lhbE1lZGlhIiwibmFtZSIsImljb24iLCJ0aGVuIiwicmVzcG9uc2UiLCIkb24iLCJfIiwiYmlydGhEYXRlIiwibG9hZGluZyIsImxvZ291dCIsImZpcmViYXNlIiwiYXV0aCIsInNpZ25PdXQiLCJjbGVhciIsImNhdGNoIiwiZXJyb3IiLCJHYW1lU3ZjIiwiYW5ub3VuY2UiLCJjYW52YXMiLCJjdHgiLCJnZXRDb250ZXh0IiwiZm9udCIsImZpbGxTdHlsZSIsInRleHRBbGlnbiIsInNob3RzIiwiYXN0ZXJvaWRzIiwicG93ZXJ1cHMiLCJleHBsb3Npb25zIiwibWFwIiwic3BhY2VwaWNzIiwic3BhY2UiLCJwb3dlcnVwVHlwZXMiLCJhbm5vdW5jZW1lbnQiLCJjeWNsZSIsInJvd3MiLCJjb2x1bW5zIiwic2l6ZSIsImkiLCJkaXJlY3Rpb24iLCJpbWciLCJJbWFnZSIsImFjdGl2YXRlIiwic3BhY2VzaGlwIiwibWF4U3BlZWQiLCJjb29sZG93biIsImNvb2xkb3duVGltZSIsInJhbmdlIiwic2hpZWxkIiwiZXhwbG9kZSIsInNwYXduQXN0ZXJvaWRzIiwicG93ZXJ1cCIsImFycmF5Iiwic3JjIiwiZXhwbG9zaW9uSW1hZ2UiLCJldmFsdWF0ZUtleXMiLCJwbGF5aW5nIiwic2hvb3QiLCJyb3RhdGlvbiIsInNwZWVkIiwic2NvcmUiLCIkYXBwbHkiLCJTcGFjZXNoaXAiLCJhdXRvU3Bhd24iLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwiaWQiLCJyb3VuZCIsIkFzdGVyb2lkIiwid2lkdGgiLCJoZWlnaHQiLCJjYW5ub24iLCJ4IiwieSIsInBvc2l0aW9uIiwiYW5nbGUiLCJTaG90IiwibW92ZSIsImJlZ2luUGF0aCIsImFyYyIsIlBJIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJzdHJva2UiLCJmaWxsIiwiYXN0ZXJvaWQiLCJoaXQiLCJnYW1lT3ZlciIsImNvcyIsInNpbiIsImxpZmVzcGFuIiwiZ2V0RW50cnlQb3NpdGlvbiIsInJvdGF0aW9uU3BlZWQiLCJFeHBsb3Npb24iLCJzaG90IiwicG9pbnRzIiwic3Bhd25Qb3dlcnVwIiwib2JqZWN0IiwiUG93ZXJ1cCIsImRlbGF5Iiwic2F2ZSIsInRyYW5zbGF0ZSIsInJvdGF0ZSIsImNvbHVtbiIsInJvdyIsImRyYXdJbWFnZSIsInJlc3RvcmUiLCJncmlkWCIsImdyaWRZIiwib2JqZWN0MSIsIm9iamVjdDIiLCJhbW91bnQiLCJoaWdoc2NvcmUiLCJzZXRIaWdoc2NvcmUiLCJyZXNpemVDYW52YXMiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJhZGRFdmVudExpc3RlbmVyIiwia2V5Q29kZSIsIndoaWNoIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZHJhdyIsImNsZWFyUmVjdCIsImdyYWRpZW50IiwiY3JlYXRlTGluZWFyR3JhZGllbnQiLCJhZGRDb2xvclN0b3AiLCJ0YWxseSIsImZpbGxUZXh0IiwibWVhc3VyZVRleHQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJCb3RzU3ZjIiwiZ2V0TGlzdHMiLCJsaXN0cyIsImNhdGVnb3JpZXMiLCJzZWxlY3RMaXN0IiwibGlzdCIsInNlbGVjdGVkTGlzdCIsImFkZExpc3QiLCJ1bnNoaWZ0IiwiY3JlYXRvciIsImRhdGUiLCJ2YWx1ZXMiLCJ2YWx1ZSIsInNhdmVMaXN0IiwiaXRlbSIsImFsZXJ0IiwiZGVsZXRlTGlzdCIsImJ1YmJsZXMiLCJjb2xvcnMiLCJCdWJibGUiLCJyYWRpdXMiLCJleHBhbmRpbmciLCJjaXJjdW1mZXJlbmNlIiwibWF4UmFkaXVzIiwidngiLCJ2eSIsImZpbHRlckJ1YmJsZXMiLCJwdXNoIiwiYnViYmxlIiwiRW1haWxTdmMiLCJvcHRpb25zIiwidGV4dCIsImNvbnRhY3QiLCJlbWFpbCIsInBob25lIiwiYWJvdXQiLCJtZXNzYWdlIiwic2VuZGluZyIsInNlbnQiLCJzdGF0dXMiLCJlcnIiLCJnZXRTa2lsbCIsInNraWxsQ29kZSIsImZpbmQiLCJjb2RlIiwiJHdpbmRvdyIsImhvYmJ5U2VsZWN0b3JWaXNpYmxlIiwic2VsZWN0ZWRIb2JieSIsInNlbGVjdEhvYmJ5IiwiaG9iYnkiLCJzaG93SG9iYnkiLCJpbmRleCIsImltYWdlcyIsIkxFRlQiLCJSSUdIVCIsImxlbW1pbmdzSW1hZ2UiLCJsZW1taW5ncyIsImFjdGlvbnMiLCJ3YWxrIiwic3RhcnQiLCJlbmQiLCJyZXZlcnNlIiwiaHVoIiwiZmFsbCIsImZseSIsInN0b3AiLCJjbGltYiIsImJ1aWxkIiwicHVuY2giLCJkaWciLCJMZW1taW5nIiwiaW5pdCIsImFjdCIsImFjdGlvbiIsImFuaW1hdGlvbiIsInNjYWxlIiwiQ2F0ZWdvcmllc1N2YyIsInNob3dDYXRlZ29yeSIsImdldENhdGVnb3JpZXMiLCJ0YXNrcyIsImoiLCJjYXRlZ29yeSIsInRhc2siLCJzZWxlY3RDYXRlZ29yeSIsInNlbGVjdGVkQ2F0ZWdvcnkiLCJzZWxlY3RlZFRhc2tzIiwic2VsZWN0YWJsZVRhc2tzIiwiZW50ZXJlZENhdGVnb3J5IiwibmV3Q2F0ZWdvcnkiLCJmb3VuZCIsImFkZENhdGVnb3J5IiwibmV3VGFzayIsInNlbGVjdFRhc2siLCJhZGRUYXNrIiwiZW50ZXJlZFRhc2siLCJyZW1vdmVUYXNrIiwidW5zZWxlY3RUYXNrIiwidGFza0xpc3QiLCJzcGxpY2UiLCJpbmRleE9mIiwic3RhcnRQcmlvcml0aXppbmciLCJzZXRQcmlvcml0eUxpc3QiLCJwYXRoIiwiZ2V0UXVlc3Rpb25zIiwiY291bnRlciIsInVpIiwiZmlyZWJhc2V1aSIsIkF1dGhVSSIsInN0YXJ0VUkiLCJjYWxsYmFja3MiLCJzaWduSW5TdWNjZXNzIiwiY3JlZGVudGlhbCIsInJlZGlyZWN0VXJsIiwiZ2V0SWRUb2tlbiIsImlkVG9rZW4iLCJhdXRoZW50aWNhdGUiLCJkaXNwbGF5TmFtZSIsInBob3RvVVJMIiwiZW1haWxWZXJpZmllZCIsIiRlbWl0IiwibW9kYWwiLCJ0eXBlIiwic2lnbkluRmFpbHVyZSIsIlByb21pc2UiLCJyZXNvbHZlIiwiY3JlZCIsInNpZ25JbldpdGhDcmVkZW50aWFsIiwidWlTaG93biIsInN0eWxlIiwiZGlzcGxheSIsInNpZ25JblN1Y2Nlc3NVcmwiLCJzaWduSW5PcHRpb25zIiwiR29vZ2xlQXV0aFByb3ZpZGVyIiwiUFJPVklERVJfSUQiLCJGYWNlYm9va0F1dGhQcm92aWRlciIsInNpZ25JbkZsb3ciLCJldmVudCIsInJlc2V0IiwiJGZpbHRlciIsIlBvc3RzU3ZjIiwiYWRkUG9zdCIsInBvc3RCb2R5IiwiY3JlYXRlIiwiYm9keSIsInBvc3QiLCJmZXRjaCIsInBvc3RzIiwiZ2V0UG9zdCIsInByaW9yaXR5TGlzdCIsImdldFByaW9yaXR5TGlzdCIsInNlbGVjdGVkUXVlc3Rpb24iLCJjdXJyZW50UXVlc3Rpb24iLCJkb25lIiwibWFrZUNob2ljZSIsImNob2ljZSIsImZpcnN0Q2hvaWNlIiwic2Vjb25kQ2hvaWNlIiwiZ2V0QnV0dG9uVmFsdWUiLCJzZWxlY3RRdWVzdGlvbiIsInF1ZXN0aW9uIiwiZ2V0RmlsdGVyZWRQcmlvcml0eUxpc3QiLCJzb3J0IiwiYSIsImIiLCJnZXRDaG9pY2VzTWFkZSIsImNob2ljZXNNYWRlIiwiZ2V0QnV0dG9uQ2xhc3MiLCJzaG93Q2hvaWNlcyIsImNoYXJ0Q2xpY2siLCJjaGFydCIsImdldFNlZ21lbnRzQXRFdmVudCIsInNob3dSZXN1bHRzIiwicmVzcG9uc2l2ZSIsInNlZ21lbnRTaG93U3Ryb2tlIiwic2VnbWVudFN0cm9rZUNvbG9yIiwic2VnbWVudFN0cm9rZVdpZHRoIiwicGVyY2VudGFnZUlubmVyQ3V0b3V0IiwiYW5pbWF0aW9uU3RlcHMiLCJhbmltYXRpb25FYXNpbmciLCJhbmltYXRlUm90YXRlIiwiYW5pbWF0ZVNjYWxlIiwibGVnZW5kVGVtcGxhdGUiLCJjaG9pY2VzIiwidm90ZXMiLCJsYWJlbCIsIm9mZnNldCIsImdlbmRlciIsInNleCIsImlkZW50aXR5Iiwic2V4ZXMiLCJpZGVudGl0aWVzIiwiZGF0ZU9wdGlvbnMiLCJtYXhEYXRlIiwibWluRGF0ZSIsImluaXREYXRlIiwiZGF0ZXBpY2tlck1vZGUiLCJwZXJjZW50YWdlIiwic3RhcnRTbGlkZXIiLCJkcmFnU2xpZGVyIiwic3RvcFNsaWRlciIsInVzZXJuYW1lVG9nZ2xlIiwicGFzc3dvcmRUb2dnbGUiLCJ0b2dnbGVVc2VybmFtZSIsIm5ld1VzZXJuYW1lIiwidXNlcm5hbWUiLCJ0b2dnbGVQYXNzd29yZCIsIm5ld1Bhc3N3b3JkIiwiY29uZmlybVBhc3N3b3JkIiwiY2hlY2tQYXNzd29yZCIsInBhc3N3b3JkIiwib3JpZ2luYWxCZyIsImFuaW1hdGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjaGFuZ2VQYXNzd29yZCIsIm9sZFBhc3N3b3JkIiwiY2hhbmdlVXNlcm5hbWUiLCJ1cGRhdGVVc2VyIiwiJHdhdGNoIiwibG9hZENvdW50cmllcyIsIiRxdWVyeSIsImZsYWciLCJ0aWRiaXQiLCJjb3VudHJ5IiwidG9Mb3dlckNhc2UiLCJzZWxlY3RlZFNraWxsIiwic2tpbGxzVmlzaWJsZSIsImxhYmVscyIsInNldFNlbGVjdGVkU2tpbGwiLCJjaGFydE9wdGlvbnMiLCJjdXRvdXRQZXJjZW50YWdlIiwibWFpbnRhaW5Bc3BlY3RSYXRpbyIsInRvb2x0aXBzIiwiY2hhcnRTdHlsZSIsImJhY2tncm91bmQtaW1hZ2UiLCJpbWFnZSIsImJhY2tncm91bmQtcmVwZWF0IiwiYmFja2dyb3VuZC1zaXplIiwiYmFja2dyb3VuZC1wb3NpdGlvbiIsInRpbWVSZW1haW5pbmciLCJleGVyY2lzaW5nIiwiZXhlcmNpc2VzIiwic3BsaXQiLCJyZXN0Iiwid29ya291dCIsImNsZWFySW50ZXJ2YWwiLCJ0aW1lciIsImV4ZXJjaXNlIiwic2V0SW50ZXJ2YWwiLCJjdXJyZW50RXhlcmNpc2UiLCJkaXJlY3RpdmUiLCIkc3RhdGUiLCIkY29tcGlsZSIsIiRpbnRlcnBvbGF0ZSIsImdldFN0eWxlIiwidGVtcGxhdGVTdHlsZVVybCIsImhyZWYiLCJyZWwiLCJtYXRjaCIsInJlc3RyaWN0IiwibGluayIsInNjb3BlIiwiZWxlbSIsInRlbXBsYXRlU3R5bGVzIiwiaHRtbCIsInJlcGxhY2UiLCJzdGFydFN5bWJvbCIsImVuZFN5bWJvbCIsImFwcGVuZCIsInRvU3RhdGUiLCJ0b1BhcmFtcyIsImZyb21TdGF0ZSIsImZyb21QYXJhbXMiLCJzdGF0ZXMiLCJwYXJlbnQiLCJnZXQiLCJ2aWV3cyIsInZpZXciLCJrZXkiLCJmbGF0IiwiaW5jbHVkZXMiLCJnZXRTdHlsZXMiLCIkaHR0cCIsInB1dCIsImRlbGV0ZSIsInN2YyIsImdldFRhc2tzIiwidCIsIm0iLCJzaHVmZmxlIiwiZ2V0SGlnaHNjb3JlIiwiZ2FtZSIsImdldFVzZXIiLCJzZXRUb2tlbiIsInRva2VuIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwiY3JlYXRlVXNlciJdLCJtYXBwaW5ncyI6IkFBT0FBLFFBQUFDLE9BQUEsTUFBQSxDQUNBLFlBQ0EsZUFDQSxZQUNBLGFBQ0EsYUFDQSxjQUNBLGNBQ0EsV0FDQSxlQ2hCQUQsUUFBQUMsT0FBQSxPQUNBQyxPQUFBLENBQUEsaUJBQUEscUJBQUEsc0JBQUEsb0JBQUEsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsR0FFQUYsRUFBQUcsVUFBQSxTQUNBRixFQUFBSCxPQUFBTSxZQUFBLEdBRUFMLEVBQ0FNLE1BQUEsT0FBQSxDQUNBQyxJQUFBLFFBQ0FDLFlBQUEsZUFFQUYsTUFBQSxTQUFBLENBQ0FDLElBQUEsVUFDQUMsWUFBQSxpQkFFQUYsTUFBQSxRQUFBLENBQ0FDLElBQUEsU0FDQUMsWUFBQSxnQkFFQUYsTUFBQSxhQUFBLENBQ0FDLElBQUEsY0FDQUUsV0FBQSxpQkFDQUQsWUFBQSxxQkFFQUYsTUFBQSxTQUFBLENBQ0FDLElBQUEsVUFDQUUsV0FBQSxhQUNBRCxZQUFBLGlCQUVBRixNQUFBLFVBQUEsQ0FDQUMsSUFBQSxXQUNBRSxXQUFBLGNBQ0FELFlBQUEsa0JBRUFGLE1BQUEsVUFBQSxDQUNBQyxJQUFBLFdBQ0FFLFdBQUEsY0FDQUQsWUFBQSxrQkFFQUYsTUFBQSxVQUFBLENBQ0FDLElBQUEsV0FDQUUsV0FBQSxjQUNBRCxZQUFBLGtCQUVBRixNQUFBLFFBQUEsQ0FDQUMsSUFBQSxTQUNBRSxXQUFBLFlBQ0FELFlBQUEsZ0JBRUFGLE1BQUEsVUFBQSxDQUNBQyxJQUFB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QTdWLEtBQUEsa0NBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsbUNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsZ0JBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSwwQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSx3Q0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSwyQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsZ0JBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsZUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFdBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsT0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxhQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsbUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxpQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFdBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLHFCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsaUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFdBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxPQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLDhCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGtDQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGdCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSx1REFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsZ0JBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFlBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsWUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsYUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxvQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLCtDQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFlBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsT0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxnQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFlBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsb0NBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxZQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxjQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsaUNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsT0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSw0QkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsd0JBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEseUNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEscUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxpQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxhQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLG1DQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsY0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxnQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxZQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxZQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSx1QkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxhQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLDZCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsbUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsNkNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsT0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFdBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSwyQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxhQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsYUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxRQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFlBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxhQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsZ0JBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxpQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFlBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsY0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxPQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsT0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLE9BQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsbUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsbUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsY0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsNEJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxjQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLHNCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFdBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEscUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsU0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxlQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGtCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGFBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFlBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsK0NBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSx5QkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsYUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxVQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxjQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLHdCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLGNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsNEJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsdUJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsWUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSwyQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxPQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLDhCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLE9BQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsV0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxhQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsY0FBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxlQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsUUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLHNCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFNBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsNEJBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsK0JBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxTQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLHVDQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLDJCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFVBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsYUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxXQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLG1DQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLG9DQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLDBCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLHVCQUFBNlYsS0FBQSxXQUNBLENBQUE3VixLQUFBLFdBQUE2VixLQUFBLFdBQ0EsQ0FBQTdWLEtBQUEsVUFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FBQSxvQkFBQTZWLEtBQUEsV0FDQSxDQUFBN1YsS0FB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akYsT0FBQStCLGFBQUFxZCxNQUFBbmEsRUFBQWxFLEtBQ0E0ZCxFQUFBUSxTQUFBbGEsRUFBQWxFLFNBSUE0ZCxFQUFBL2MsTUFBQSxTQUFBQyxHQUNBLE9BQUEyYyxFQUFBUCxJQUFBLGNBQUFwYyxFQUFBLFVBQ0FtRCxLQUFBLFNBQUFDLEdBRUEsT0FEQWpGLE9BQUErQixhQUFBcWQsTUFBQW5hLEVBQUFsRSxLQUNBNGQsRUFBQVEsU0FBQWxhLEVBQUFsRSxTQUlBNGQsRUFBQXBFLFdBQUEsU0FBQTFZLEdBQ0EsT0FBQTJjLEVBQUF6SSxLQUFBLGNBQUFsVSxFQUFBRyxJQUFBLENBQ0FILEtBQUFBLElBQ0FtRCxLQUFBLFdBQ0EsT0FBQTJaLEVBQUFPLGFBSUFQLEVBQUE1RSxjQUFBLFNBQUFsWSxFQUFBbVksR0FDQSxPQUFBd0UsRUFBQXpJLEtBQUEsY0FBQWxVLEVBQUEsZ0JBQUEsQ0FDQW1ZLFNBQUFBLEtBSUEyRSxFQUFBdkUsZUFBQSxTQUFBdlksRUFBQXdZLEVBQUFSLEdBQ0EsT0FBQTJFLEVBQUF6SSxLQUFBLGNBQUFsVSxFQUFBLFlBQUEsQ0FDQXdZLFlBQUFBLEVBQ0FSLFlBQUFBLEtBSUE4RSxFQUFBckUsZUFBQSxTQUFBelksRUFBQTZYLEdBQ0EsT0FBQThFLEVBQUF6SSxLQUFBLGNBQUFsVSxFQUFBLFlBQUEsQ0FDQTZYLFlBQUFBLElBQ0ExVSxLQUFBLFdBQ0EsT0FBQTJaLEVBQUFPLGFBSUFQLEVBQUFyWixPQUFBLFdBQ0F0RixPQUFBK0IsYUFBQTJELFFBQ0E4WSxFQUFBYSxTQUFBQyxRQUFBQyxPQUFBLFVBQUEsSUFHQVosRUFBQWEsV0FBQSxTQUFBN0YsRUFBQUssR0FDQSxPQUFBd0UsRUFBQXpJLEtBQUEsYUFBQSxDQUNBNEQsU0FBQUEsRUFDQUssU0FBQUEsSUFDQWhWLEtBQUEsV0FDQSxPQUFBMlosRUFBQS9jLE1BQUErWCxFQUFBSyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4kID0galF1ZXJ5ID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XHJcbnZhciBib290c3RyYXAgPSByZXF1aXJlKCdib290c3RyYXAnKTtcclxudmFyIGFuZ3VsYXIgPSByZXF1aXJlKCdhbmd1bGFyJyk7XHJcbnZhciBhbmd1bGFyU2FuaXRpemUgPSByZXF1aXJlKCdhbmd1bGFyLXNhbml0aXplJyk7XHJcbnZhciBhbmd1bGFyQW5pbWF0ZSA9IHJlcXVpcmUoJ2FuZ3VsYXItYW5pbWF0ZScpO1xyXG4qL1xyXG5hbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xyXG4gICd1aS5yb3V0ZXInLFxyXG4gICd1aS5ib290c3RyYXAnLFxyXG4gICduZ0FuaW1hdGUnLFxyXG4gICduZ1Nhbml0aXplJyxcclxuICAnbmdEcmFnRHJvcCcsXHJcbiAgJ25nVGFnc0lucHV0JyxcclxuICAndmNSZWNhcHRjaGEnLFxyXG4gICdjaGFydC5qcycsXHJcbiAgJ3RjLmNoYXJ0anMnXHJcbl0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsICR1cmxTZXJ2aWNlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XHJcblxyXG4gICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9ob21lJyk7XHJcbiAgJHVybFNlcnZpY2VQcm92aWRlci5jb25maWcuc3RyaWN0TW9kZShmYWxzZSk7XHJcblxyXG4gICRzdGF0ZVByb3ZpZGVyXHJcbiAgLnN0YXRlKCdob21lJywge1xyXG4gICAgdXJsOiAnL2hvbWUnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcvaG9tZS5odG1sJ1xyXG4gIH0pXHJcbiAgLnN0YXRlKCdwb2xpY3knLCB7XHJcbiAgICB1cmw6ICcvcG9saWN5JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnL3BvbGljeS5odG1sJ1xyXG4gIH0pXHJcbiAgLnN0YXRlKCdwcmludCcsIHtcclxuICAgIHVybDogJy9wcmludCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy9wcmludC5odG1sJ1xyXG4gIH0pXHJcbiAgLnN0YXRlKCdleHBlcmllbmNlJywge1xyXG4gICAgdXJsOiAnL2V4cGVyaWVuY2UnLFxyXG4gICAgY29udHJvbGxlcjogJ0V4cGVyaWVuY2VDdHJsJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnL2V4cGVyaWVuY2UuaHRtbCdcclxuICB9KVxyXG4gIC5zdGF0ZSgnc2tpbGxzJywge1xyXG4gICAgdXJsOiAnL3NraWxscycsXHJcbiAgICBjb250cm9sbGVyOiAnU2tpbGxzQ3RybCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy9za2lsbHMuaHRtbCdcclxuICB9KVxyXG4gIC5zdGF0ZSgnaG9iYmllcycsIHtcclxuICAgIHVybDogJy9ob2JiaWVzJyxcclxuICAgIGNvbnRyb2xsZXI6ICdIb2JiaWVzQ3RybCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy9ob2JiaWVzLmh0bWwnXHJcbiAgfSlcclxuICAuc3RhdGUoJ2NvbnRhY3QnLCB7XHJcbiAgICB1cmw6ICcvY29udGFjdCcsXHJcbiAgICBjb250cm9sbGVyOiAnQ29udGFjdEN0cmwnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcvY29udGFjdC5odG1sJ1xyXG4gIH0pXHJcbiAgLnN0YXRlKCd3b3Jrb3V0Jywge1xyXG4gICAgdXJsOiAnL3dvcmtvdXQnLFxyXG4gICAgY29udHJvbGxlcjogJ1dvcmtvdXRDdHJsJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnL3dvcmtvdXQuaHRtbCdcclxuICB9KVxyXG4gIC5zdGF0ZSgncG9zdHMnLCB7XHJcbiAgICB1cmw6ICcvcG9zdHMnLFxyXG4gICAgY29udHJvbGxlcjogJ1Bvc3RzQ3RybCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy9wb3N0cy5odG1sJ1xyXG4gIH0pXHJcbiAgLnN0YXRlKCdwcm9maWxlJywge1xyXG4gICAgdXJsOiAnL3Byb2ZpbGUnLFxyXG4gICAgY29udHJvbGxlcjogJ1Byb2ZpbGVDdHJsJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnL3Byb2ZpbGUuaHRtbCdcclxuICB9KVxyXG4gIC5zdGF0ZSgnbGlzdHMnLCB7XHJcbiAgICB1cmw6ICcvbGlzdHMnLFxyXG4gICAgY29udHJvbGxlcjogJ0xpc3RzQ3RybCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ2xpc3RzLmh0bWwnXHJcbiAgfSlcclxuICAuc3RhdGUoJ3ByaW9yaXRpemUnLCB7XHJcbiAgICB1cmw6ICcvcHJpb3JpdGl6ZScsXHJcbiAgICBjb250cm9sbGVyOiAnUHJpb3JpdGl6ZUN0cmwnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdwcmlvcml0aXplLmh0bWwnXHJcbiAgfSlcclxuICAuc3RhdGUoJ2J1YmJsZXMnLCB7XHJcbiAgICB1cmw6ICcvYnViYmxlcycsXHJcbiAgICBjb250cm9sbGVyOiAnQnViYmxlc0N0cmwnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdidWJibGVzLmh0bWwnXHJcbiAgfSlcclxuICAuc3RhdGUoJ2FzdGVyb2lkcycsIHtcclxuICAgIHVybDogJy9hc3Rlcm9pZHMnLFxyXG4gICAgY29udHJvbGxlcjogJ0FzdGVyb2lkc0N0cmwnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdhc3Rlcm9pZHMuaHRtbCdcclxuICB9KVxyXG4gIC5zdGF0ZSgnbGVtbWluZ3MnLCB7XHJcbiAgICB1cmw6ICcvbGVtbWluZ3MnLFxyXG4gICAgY29udHJvbGxlcjogJ0xlbW1pbmdzQ3RybCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ2xlbW1pbmdzLmh0bWwnXHJcbiAgfSlcclxuICAuc3RhdGUoJ2JvdHMnLCB7XHJcbiAgICB1cmw6ICcvYm90cycsXHJcbiAgICBjb250cm9sbGVyOiAnQm90c0N0cmwnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdib3RzLmh0bWwnXHJcbiAgfSk7XHJcblxyXG4gICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh7XHJcbiAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgcmVxdWlyZUJhc2U6IGZhbHNlXHJcbiAgfSk7XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5zZXJ2aWNlKCdXZWJTb2NrZXRTdmMnLCBmdW5jdGlvbiAoJHJvb3RTY29wZSwgJHRpbWVvdXQpIHtcclxuICBmdW5jdGlvbiB3ZWJzb2NrZXRIb3N0KCkge1xyXG4gICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCA9PT0gJ2h0dHBzOicpIHtcclxuICAgICAgcmV0dXJuIFwid3NzOi8vXCIgKyB3aW5kb3cubG9jYXRpb24uaG9zdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBcIndzOi8vXCIgKyB3aW5kb3cubG9jYXRpb24uaG9zdDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHZhciBjb25uZWN0aW9uO1xyXG4gIHZhciBjb25uZWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQod2Vic29ja2V0SG9zdCgpKTtcclxuXHJcbiAgICBjb25uZWN0aW9uLm9ub3BlbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1dlYnNvY2tldCBjb25uZWN0ZWQnKTtcclxuICAgIH07XHJcblxyXG4gICAgY29ubmVjdGlvbi5vbmNsb3NlID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1dlYnNvY2tldCBjbG9zZWQuIFJlY29ubmVjdGluZy4uLicpO1xyXG4gICAgICAkdGltZW91dChjb25uZWN0LCAxMDAwKTtcclxuICAgIH07XHJcblxyXG4gICAgY29ubmVjdGlvbi5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkVycm9yOiBcIiArIGUgKyBcIiAtIFN0YXRlOiBcIiArIGNvbm5lY3Rpb24ucmVhZHlTdGF0ZSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbm5lY3Rpb24ub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgdmFyIHBheWxvYWQgPSBKU09OLnBhcnNlKGUuZGF0YSk7XHJcbiAgICAgICRyb290U2NvcGUuJGJyb2FkY2FzdCgnd3M6JyArIHBheWxvYWQudG9waWMsIHBheWxvYWQuZGF0YSk7XHJcbiAgICB9O1xyXG4gIH07XHJcblxyXG4gIHRoaXMuc2VuZCA9IGZ1bmN0aW9uICh0b3BpYywgZGF0YSkge1xyXG4gICAgdmFyIGpzb24gPSBKU09OLnN0cmluZ2lmeSh7dG9waWM6IHRvcGljLCBkYXRhOiBkYXRhfSk7XHJcbiAgICBjb25uZWN0aW9uLnNlbmQoanNvbik7XHJcbiAgfTtcclxuXHJcbiAgdGhpcy5jb25uZWN0ID0gY29ubmVjdDtcclxuXHJcbn0pLnJ1bihmdW5jdGlvbiAoV2ViU29ja2V0U3ZjKSB7XHJcbiAgV2ViU29ja2V0U3ZjLmNvbm5lY3QoKTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignQXBwQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgTGFuZ3VhZ2VTdmMsIFVzZXJTdmMpIHtcclxuXHJcbiAgY29uc29sZS5sb2coXCIlY1lvdSBzbmVha3kgYnVnZ2VyIVwiLCBcImZvbnQ6IDJlbSBzYW5zLXNlcmlmOyBjb2xvcjogRG9kZ2VyQmx1ZTsgdGV4dC1zaGFkb3c6IDJweCAwIDAgIzQ0NCwgLTJweCAwIDAgIzQ0NCwgMCAycHggMCAjNDQ0LCAwIC0ycHggMCAjNDQ0LCAxcHggMXB4ICM0NDQsIC0xcHggLTFweCAwICM0NDQsIDFweCAtMXB4IDAgIzQ0NCwgLTFweCAxcHggMCAjNDQ0O1wiKTtcclxuICBjb25zb2xlLmxvZyhcIkknbSBnbGFkIHlvdSdyZSBjdXJpb3VzIHdoZXRoZXIgc29tZXRoaW5nIGlzIHBvcHBpbmcgdXAgaW4gaGVyZS4gSSdtIGEgYml0IG9mIGEgc3RpY2tsZXIgd2hlbiBpdCBjb21lcyB0byBtZXNzYWdlcyBpbiB0aGUgY29uc29sZSBzbyBJIHRyeSB0byBtYWtlIHN1cmUgb25seSB0aGluZ3MgSSB3YW50IGFyZSB2aXNpYmxlLiBUaGF0IGJlaW5nIHNhaWQsIGlmIHRoZXJlIGlzIGEgYmlnIGVycm9yIGhlcmUsIEkgd291bGQgcmVhbGx5IGFwcHJlY2lhdGUgeW91IHRlbGxpbmcgbWUgc28gSSBjYW4gZ2V0IHJpZCBvZiBpdCFcIik7XHJcbiAgY29uc29sZS5sb2coXCJUaGUgY29kZSBmb3IgbXkgcmVzdW1lIGlzIGhvc3RlZCBvbiBHaXRodWIgaWYgeW91IHJlYWxseSB3YW50IHRvIGdvIGludG8gYWxsIHRoaXMhID0+IGh0dHBzOi8vZ2l0aHViLmNvbS9GbGFuZGVyc0J1cmdlci9yZXN1bWVcIik7XHJcblxyXG4gIC8qXHJcbiAgJChkb2N1bWVudCkuYmluZChcImtleXVwIGtleWRvd25cIiwgZnVuY3Rpb24oZSl7XHJcbiAgICBpZihlLmN0cmxLZXkgJiYgZS5rZXlDb2RlID09IDgwKXtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgKi9cclxuXHJcbiAgJCh3aW5kb3cpLmxvYWQoZnVuY3Rpb24oKXtcclxuICAgICQoXCIubG9hZGluZ1wiKS5mYWRlT3V0KFwic2xvd1wiKTtcclxuICAgICQoXCIuY29udGVudFwiKS5mYWRlSW4oXCJzbG93XCIpO1xyXG4gIH0pO1xyXG5cclxuICAkc2NvcGUudGhlbWVDb3VudGVyID0gNjtcclxuICAkc2NvcGUudG9kYXkgPSBuZXcgRGF0ZSgpO1xyXG4gICRzY29wZS55ZWFyID0gJHNjb3BlLnRvZGF5LmdldEZ1bGxZZWFyKCk7XHJcbiAgJHNjb3BlLnJhbmRvbSA9IE1hdGguZmxvb3IoKE1hdGgucmFuZG9tKCkgKiAxMDAwMDAwKSk7XHJcblxyXG4gICRzY29wZS5mbGlwVGhlbWUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICQoXCIubG9hZGluZ1wiKS5zaG93KCk7XHJcbiAgICAgICQoXCIuY29udGVudFwiKS5oaWRlKCk7XHJcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkKFwiLmxvYWRpbmdcIikuZmFkZU91dChcInNsb3dcIik7XHJcbiAgICAgICAgJChcIi5jb250ZW50XCIpLmZhZGVJbihcInNsb3dcIik7XHJcbiAgICAgIH0sIDgwMCk7XHJcbiAgICAkc2NvcGUudGhlbWVDb3VudGVyID0gJHNjb3BlLnRoZW1lQ291bnRlciA8IDYgPyAkc2NvcGUudGhlbWVDb3VudGVyICsgMSA6ICRzY29wZS50aGVtZUNvdW50ZXIgPSAxO1xyXG4gIH07XHJcblxyXG5cclxuICAkLmdldEpTT04oJy9za2lsbHMuanNvbicsIGZ1bmN0aW9uKCBkYXRhICkge1xyXG4gICAgJHNjb3BlLnNraWxscyA9IGRhdGEuZmlsdGVyKGZ1bmN0aW9uKHNraWxsKSB7XHJcbiAgICAgIHJldHVybiBza2lsbC5lbmFibGVkO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG5cclxuICAkLmdldEpTT04oJy9ob2JiaWVzLmpzb24nLCBmdW5jdGlvbiggZGF0YSApIHtcclxuICAgICRzY29wZS5ob2JiaWVzID0gZGF0YTtcclxuICB9KTtcclxuXHJcblxyXG4gICQuZ2V0SlNPTignL2V4cGVyaWVuY2UuanNvbicsIGZ1bmN0aW9uKCBkYXRhICkge1xyXG4gICAgJHNjb3BlLmpvYnMgPSBkYXRhO1xyXG4gICAgJHNjb3BlLmpvYnMuZm9yRWFjaChmdW5jdGlvbiAoam9iKSB7XHJcbiAgICAgIGpvYi5zdGFydERhdGUgPSBuZXcgRGF0ZShqb2Iuc3RhcnREYXRlKTtcclxuICAgICAgaWYgKGpvYi5lbmREYXRlKSBqb2IuZW5kRGF0ZSA9IG5ldyBEYXRlKGpvYi5lbmREYXRlKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICAkc2NvcGUuZ2V0VGltZVNwYW4gPSBmdW5jdGlvbiAoam9iKSB7XHJcbiAgICByZXR1cm4gam9iLnN0YXJ0RGF0ZS5nZXRGdWxsWWVhcigpICsgKGpvYi5lbmREYXRlID8gKCcgLSAnICsgam9iLmVuZERhdGUuZ2V0RnVsbFllYXIoKSkgOiAnIC0gVG9kYXknKTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUubGFuZ3VhZ2VzID0gTGFuZ3VhZ2VTdmMubGFuZ3VhZ2VzO1xyXG5cclxuICAkc2NvcGUuc2VsZWN0ZWRMYW5ndWFnZSA9IExhbmd1YWdlU3ZjLmdldExhbmd1YWdlKCk7XHJcblxyXG4gICRzY29wZS5zZWxlY3RMYW5ndWFnZSA9IGZ1bmN0aW9uIChsYW5ndWFnZSkge1xyXG4gICAgJHNjb3BlLnNlbGVjdGVkTGFuZ3VhZ2UgPSBMYW5ndWFnZVN2Yy5zZXRMYW5ndWFnZShsYW5ndWFnZSk7XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLmhvdmVyZGl2ID0gZnVuY3Rpb24gKGUsIGRpdmlkKSB7XHJcbiAgICB2YXIgbGVmdCAgPSBlLmNsaWVudFggKyBcInB4XCI7XHJcbiAgICB2YXIgdG9wICA9IChlLmNsaWVudFkgKyAyMCkgKyBcInB4XCI7XHJcblxyXG4gICAgdmFyIGRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRpdmlkKTtcclxuXHJcbiAgICAkKFwiI1wiK2RpdmlkKS5jc3MoJ2xlZnQnLGxlZnQpO1xyXG4gICAgJChcIiNcIitkaXZpZCkuY3NzKCd0b3AnLHRvcCk7XHJcblxyXG4gICAgJChcIiNcIitkaXZpZCkudG9nZ2xlKCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLnNvY2lhbE1lZGlhID0gWy8qXHJcbiAgICB7XHJcbiAgICAgIFwibmFtZVwiOiBcImZhY2Vib29rXCIsXHJcbiAgICAgIFwidXJsXCI6IFwiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2ZsYW5kZXJzYnVyZ2VyXCIsXHJcbiAgICAgIFwiaWNvblwiOiBcImZhLWZhY2Vib29rLWZcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJuYW1lXCI6IFwidHdpdHRlclwiLFxyXG4gICAgICBcInVybFwiOiBcImh0dHBzOi8vdHdpdHRlci5jb20vQmVsZ29DYW5hZGlhblwiLFxyXG4gICAgICBcImljb25cIjogXCJmYS10d2l0dGVyXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIFwibmFtZVwiOiBcImdvb2RyZWFkc1wiLFxyXG4gICAgICBcInVybFwiOiBcImh0dHBzOi8vd3d3Lmdvb2RyZWFkcy5jb20vdXNlci9zaG93LzE3MDcwMDEwLWxhdXJlbnRcIixcclxuICAgICAgXCJpY29uXCI6IFwiZmEtYm9va1wiXHJcbiAgICB9LCovXHJcbiAgICB7XHJcbiAgICAgIFwibmFtZVwiOiBcImxpbmtlZGluXCIsXHJcbiAgICAgIFwidXJsXCI6IFwiaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2xhdXJlbnQtZGViYWNrZXItMTYzM2E5MTZcIixcclxuICAgICAgXCJpY29uXCI6IFwiZmEtbGlua2VkaW5cIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJuYW1lXCI6IFwiZ2l0aHViXCIsXHJcbiAgICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL0ZsYW5kZXJzQnVyZ2VyXCIsXHJcbiAgICAgIFwiaWNvblwiOiBcImZhLWdpdGh1YlwiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBcIm5hbWVcIjogXCJqc2ZpZGRsZVwiLFxyXG4gICAgICBcInVybFwiOiBcImh0dHBzOi8vanNmaWRkbGUubmV0L3VzZXIvQmVsZ29DYW5hZGlhbi9maWRkbGVzL1wiLFxyXG4gICAgICBcImljb25cIjogXCJmYS1qc2ZpZGRsZVwiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBcIm5hbWVcIjogXCJzdGFja292ZXJmbG93XCIsXHJcbiAgICAgIFwidXJsXCI6IFwiaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3VzZXJzLzEwODM5MjMvYmVsZ29jYW5hZGlhblwiLFxyXG4gICAgICBcImljb25cIjogXCJmYS1zdGFjay1vdmVyZmxvd1wiXHJcblxyXG4gICAgfVxyXG4gIF07XHJcblxyXG4gIGlmICh3aW5kb3cubG9jYWxTdG9yYWdlLnVzZXIpIHtcclxuICAgIFVzZXJTdmMubG9naW4od2luZG93LmxvY2FsU3RvcmFnZS51c2VyKVxyXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcclxuICAgICAgbG9naW4ocmVzcG9uc2UuZGF0YSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gICRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24gKF8sIHVzZXIpIHtcclxuICAgIGxvZ2luKHVzZXIpO1xyXG4gIH0pO1xyXG5cclxuICBmdW5jdGlvbiBsb2dpbih1c2VyKSB7XHJcbiAgICBpZiAoISRzY29wZS5sb2dnZWRJbikge1xyXG4gICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnVzZXIgPSB1c2VyLl9pZDtcclxuICAgICAgJHNjb3BlLmxvZ2dlZEluID0gdHJ1ZTtcclxuICAgICAgJHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcclxuICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ2xvZ2luJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAkc2NvcGUuJG9uKCd1cGRhdGUnLCBmdW5jdGlvbiAoXywgdXNlcikge1xyXG4gICAgJHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcclxuICAgICRzY29wZS5jdXJyZW50VXNlci5iaXJ0aERhdGUgPSBuZXcgRGF0ZSgkc2NvcGUuY3VycmVudFVzZXIuYmlydGhEYXRlKTtcclxuICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICQoXCIjbG9hZGluZy1pY29uXCIpLmZhZGVPdXQoXCJzbG93XCIpO1xyXG4gICAgfSwgMTAwMCk7XHJcbiAgfSk7XHJcblxyXG5cclxuICAkc2NvcGUuJG9uKCdsb2FkaW5nJywgZnVuY3Rpb24gKF8sIHVzZXIpIHtcclxuICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcclxuICAgICQoXCIjbG9hZGluZy1pY29uXCIpLnNob3coKTtcclxuICB9KTtcclxuXHJcbiAgJHNjb3BlLiRvbignbG9hZGVkJywgZnVuY3Rpb24gKF8sIHVzZXIpIHtcclxuICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICQoXCIjbG9hZGluZy1pY29uXCIpLmZhZGVPdXQoXCJzbG93XCIpO1xyXG4gICAgfSwgMTAwMCk7XHJcbiAgfSk7XHJcblxyXG4gICRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbigpIHtcclxuICAgIGZpcmViYXNlLmF1dGgoKS5zaWduT3V0KCkudGhlbihmdW5jdGlvbigpIHtcclxuICAgICAgLy8gU2lnbi1vdXQgc3VjY2Vzc2Z1bC5cclxuICAgICAgJHNjb3BlLmxvZ2dlZEluID0gZmFsc2U7XHJcbiAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UuY2xlYXIoKTtcclxuICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ2xvZ291dCcpO1xyXG4gICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcclxuICAgICAgLy8gQW4gZXJyb3IgaGFwcGVuZWQuXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ0FzdGVyb2lkc0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBHYW1lU3ZjKSB7XHJcblxyXG4gICRzY29wZS5hbm5vdW5jZSA9IGZhbHNlO1xyXG4gIHZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXN0ZXJvaWRzLXBhZ2UnKTtcclxuICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbiAgY3R4LmZvbnQgPSBcIjMwcHggQ29taWMgU2FucyBNU1wiO1xyXG4gIGN0eC5maWxsU3R5bGUgPSBcInJlZFwiO1xyXG4gIGN0eC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xyXG4gIHZhciBzaG90cyA9IHt9O1xyXG4gIHZhciBhc3Rlcm9pZHMgPSB7fTtcclxuICB2YXIgcG93ZXJ1cHMgPSB7fTtcclxuICB2YXIgZXhwbG9zaW9ucyA9IHt9O1xyXG4gIHZhciBtYXAgPSB7fTtcclxuICB2YXIgc3BhY2VwaWNzID0gMTA7XHJcbiAgdmFyIHNwYWNlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc3BhY2VwaWNzKTtcclxuICB2YXIgcG93ZXJ1cFR5cGVzID0gW1xyXG4gICAge1xyXG4gICAgICBuYW1lOiAnc3BlZWQnLFxyXG4gICAgICBhbm5vdW5jZW1lbnQ6ICdNYXggU3BlZWQg4oenJyxcclxuICAgICAgY3ljbGU6IHtcclxuICAgICAgICByb3dzOiAxLFxyXG4gICAgICAgIGNvbHVtbnM6IDQsXHJcbiAgICAgICAgc2l6ZTogWzE0LCAzNV0sXHJcbiAgICAgICAgaTogMCxcclxuICAgICAgICBkaXJlY3Rpb246IHRydWVcclxuICAgICAgfSxcclxuICAgICAgaW1nOiBuZXcgSW1hZ2UoKSxcclxuICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uKHNwYWNlc2hpcCkge1xyXG4gICAgICAgIHNwYWNlc2hpcC5tYXhTcGVlZCArPSAxMDA7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6ICdjb29sZG93bicsXHJcbiAgICAgIGFubm91bmNlbWVudDogJ0Nvb2xkb3duIOKHqScsXHJcbiAgICAgIGN5Y2xlOiB7XHJcbiAgICAgICAgcm93czogMSxcclxuICAgICAgICBjb2x1bW5zOiAzLFxyXG4gICAgICAgIHNpemU6IFsxNywgMTddLFxyXG4gICAgICAgIGk6IDAsXHJcbiAgICAgICAgZGlyZWN0aW9uOiB0cnVlXHJcbiAgICAgIH0sXHJcbiAgICAgIGltZzogbmV3IEltYWdlKCksXHJcbiAgICAgIGFjdGl2YXRlOiBmdW5jdGlvbihzcGFjZXNoaXApIHtcclxuICAgICAgICBpZiAoc3BhY2VzaGlwLmNvb2xkb3duID4gMCkge1xyXG4gICAgICAgICAgc3BhY2VzaGlwLmNvb2xkb3duVGltZSAtPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogJ3JhbmdlJyxcclxuICAgICAgYW5ub3VuY2VtZW50OiAnRmlyaW5nIFJhbmdlIOKHpycsXHJcbiAgICAgIGN5Y2xlOiB7XHJcbiAgICAgICAgcm93czogNCxcclxuICAgICAgICBjb2x1bW5zOiAxLFxyXG4gICAgICAgIHNpemU6IFszMCwgOF0sXHJcbiAgICAgICAgaTogMCxcclxuICAgICAgICBkaXJlY3Rpb246IHRydWVcclxuICAgICAgfSxcclxuICAgICAgaW1nOiBuZXcgSW1hZ2UoKSxcclxuICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uKHNwYWNlc2hpcCkge1xyXG4gICAgICAgIHNwYWNlc2hpcC5yYW5nZSArPSA1O1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAnc2hpZWxkJyxcclxuICAgICAgYW5ub3VuY2VtZW50OiAnU2hpZWxkJyxcclxuICAgICAgY3ljbGU6IHtcclxuICAgICAgICByb3dzOiA1LFxyXG4gICAgICAgIGNvbHVtbnM6IDEsXHJcbiAgICAgICAgc2l6ZTogWzE5LCAxOV0sXHJcbiAgICAgICAgaTogMCxcclxuICAgICAgICBkaXJlY3Rpb246IHRydWVcclxuICAgICAgfSxcclxuICAgICAgaW1nOiBuZXcgSW1hZ2UoKSxcclxuICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uKHNwYWNlc2hpcCkge1xyXG4gICAgICAgIHNwYWNlc2hpcC5zaGllbGQgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAnbnVrZScsXHJcbiAgICAgIGFubm91bmNlbWVudDogJ051a2UnLFxyXG4gICAgICBjeWNsZToge1xyXG4gICAgICAgIHJvd3M6IDEsXHJcbiAgICAgICAgY29sdW1uczogOCxcclxuICAgICAgICBzaXplOiBbMTUsIDE1XSxcclxuICAgICAgICBpOiAwLFxyXG4gICAgICAgIGRpcmVjdGlvbjogdHJ1ZVxyXG4gICAgICB9LFxyXG4gICAgICBpbWc6IG5ldyBJbWFnZSgpLFxyXG4gICAgICBhY3RpdmF0ZTogZnVuY3Rpb24oc3BhY2VzaGlwKSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiBhc3Rlcm9pZHMpIHtcclxuICAgICAgICAgIGFzdGVyb2lkc1tpXS5leHBsb2RlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNwYXduQXN0ZXJvaWRzKDUpO1xyXG4gICAgICB9XHJcbiAgICB9LC8qXHJcbiAgICAnc2lkZV9jYW5ub25zJyxcclxuICAgICdsYXNlcicsXHJcbiAgICAnc2hpZWxkJyxcclxuICAgICdsaWZlJyxcclxuICAgICdtaXNzaWxlcycsXHJcbiAgICAnbnVrZSdcclxuICAgICovXHJcbiAgXTtcclxuICBwb3dlcnVwVHlwZXMuZm9yRWFjaChmdW5jdGlvbihwb3dlcnVwLCBpLCBhcnJheSkge1xyXG4gICAgYXJyYXlbaV0uaW1nLnNyYyA9ICdhc3Rlcm9pZHMvJyArIHBvd2VydXAubmFtZSArICcucG5nJztcclxuICB9KTtcclxuXHJcbiAgdmFyIGV4cGxvc2lvbkltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgZXhwbG9zaW9uSW1hZ2Uuc3JjID0gJ2FzdGVyb2lkcy9leHBsb3Npb24ucG5nJztcclxuXHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgIG1hcFtlLmtleUNvZGUgfHwgZS53aGljaF0gPSB0cnVlO1xyXG4gIH0sdHJ1ZSk7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICBtYXBbZS5rZXlDb2RlIHx8IGUud2hpY2hdID0gZmFsc2U7XHJcbiAgfSx0cnVlKTtcclxuXHJcbiAgJHNjb3BlLmhpZ2hzY29yZSA9IDA7XHJcblxyXG4gIGZ1bmN0aW9uIGV2YWx1YXRlS2V5cygpIHtcclxuICAgIGlmICgkc2NvcGUucGxheWluZykge1xyXG4gICAgICBpZiAobWFwWzMyXSkge1xyXG4gICAgICAgIC8vU3BhY2VcclxuICAgICAgICBpZiAoc3BhY2VzaGlwLmNvb2xkb3duID09PSAwKSB7XHJcbiAgICAgICAgICBzcGFjZXNoaXAuc2hvb3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG1hcFszN10pIHtcclxuICAgICAgICAvL0xlZnQgQXJyb3dcclxuICAgICAgICBpZiAoc3BhY2VzaGlwLnJvdGF0aW9uID09PSAwKSB7XHJcbiAgICAgICAgICBzcGFjZXNoaXAucm90YXRpb24gPSAzNjA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNwYWNlc2hpcC5yb3RhdGlvbiAtPSAzO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAobWFwWzM5XSkge1xyXG4gICAgICAgIC8vUmlnaHQgQXJyb3dcclxuICAgICAgICBpZiAoc3BhY2VzaGlwLnJvdGF0aW9uID09PSAzNjApIHtcclxuICAgICAgICAgIHNwYWNlc2hpcC5yb3RhdGlvbiA9IDA7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNwYWNlc2hpcC5yb3RhdGlvbiArPSAzO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAobWFwWzM4XSkge1xyXG4gICAgICAgIC8vVXAgQXJyb3dcclxuICAgICAgICBpZiAoc3BhY2VzaGlwLnNwZWVkIDw9IHNwYWNlc2hpcC5tYXhTcGVlZCkge1xyXG4gICAgICAgICAgc3BhY2VzaGlwLnNwZWVkICs9IDU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmIChzcGFjZXNoaXAuc3BlZWQgPiAwKSB7XHJcbiAgICAgICAgICBzcGFjZXNoaXAuc3BlZWQtLTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG1hcFs0MF0pIHtcclxuICAgICAgICAvL0Rvd24gQXJyb3dcclxuICAgICAgICBpZiAoc3BhY2VzaGlwLnNwZWVkID4gMCkge1xyXG4gICAgICAgICAgc3BhY2VzaGlwLnNwZWVkIC09IDI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAobWFwWzMyXSkge1xyXG4gICAgICAgIHN0YXJ0KCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIFNwYWNlc2hpcCgpIHtcclxuICAgIHRoaXMud2lkdGggPSA1MDtcclxuICAgIHRoaXMuaGVpZ2h0ID0gNTA7XHJcbiAgICB0aGlzLnNoaWVsZCA9IGZhbHNlO1xyXG4gICAgdGhpcy5yYW5nZSA9IDgwO1xyXG4gICAgdGhpcy5jYW5ub24gPSB7XHJcbiAgICAgIHg6IHRoaXMud2lkdGggLyAyIC0gNC41LFxyXG4gICAgICB5OiB0aGlzLmhlaWdodCAvIDIgLSB0aGlzLmhlaWdodCAqIDAuMDc4MTI1XHJcbiAgICB9O1xyXG4gICAgdGhpcy5jb29sZG93biA9IDA7XHJcbiAgICB0aGlzLmNvb2xkb3duVGltZSA9IDIwO1xyXG4gICAgdGhpcy5wb3NpdGlvbiA9IFtcclxuICAgICAgY2FudmFzLndpZHRoIC8gMiAtIHRoaXMud2lkdGggLyAyLFxyXG4gICAgICBjYW52YXMuaGVpZ2h0IC8gMiAtIHRoaXMuaGVpZ2h0IC8gMlxyXG4gICAgXTtcclxuICAgIHRoaXMuaW1nID0gbmV3IEltYWdlKCk7XHJcbiAgICB0aGlzLmltZy5zcmMgPSAnYXN0ZXJvaWRzL3NwYWNlc2hpcC5wbmcnO1xyXG4gICAgdGhpcy5zcGVlZCA9IDA7XHJcbiAgICB0aGlzLm1heFNwZWVkID0gMTAwMDtcclxuICAgIHRoaXMuYW5nbGUgPSAwO1xyXG4gICAgdGhpcy5yb3RhdGlvbiA9IDA7XHJcblxyXG4gICAgdGhpcy5zaG9vdCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICB0aGlzLmNvb2xkb3duID0gdGhpcy5jb29sZG93blRpbWU7XHJcbiAgICAgIHZhciBpZCA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDEwMDAwMDAwMCk7XHJcbiAgICAgIHNob3RzW2lkXSA9IG5ldyBTaG90KGlkLCB0aGlzKTtcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5tb3ZlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIGlmICh0aGlzLnNoaWVsZCkge1xyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHguYXJjKHRoaXMucG9zaXRpb25bMF0gKyB0aGlzLndpZHRoIC8gMiwgdGhpcy5wb3NpdGlvblsxXSArIHRoaXMuaGVpZ2h0IC8gMiwgMzAsIDAsIDIgKiBNYXRoLlBJKTtcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJyZ2IoMzUsIDIzNywgODYsIDAuNSlcIjtcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcInJnYig2NiwgMTY4LCAzNiwgMC44KVwiO1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSA1O1xyXG4gICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICBjdHguZmlsbCgpO1xyXG4gICAgICB9XHJcbiAgICAgIGZvciAodmFyIGkgaW4gYXN0ZXJvaWRzKSB7XHJcbiAgICAgICAgdmFyIGFzdGVyb2lkID0gYXN0ZXJvaWRzW2ldO1xyXG4gICAgICAgIGlmIChoaXQoYXN0ZXJvaWQsIHRoaXMpKSB7XHJcbiAgICAgICAgICBpZiAodGhpcy5zaGllbGQpIHtcclxuICAgICAgICAgICAgdGhpcy5zaGllbGQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXN0ZXJvaWQuZXhwbG9kZSgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGdhbWVPdmVyKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuYW5nbGUgPSB0aGlzLnJvdGF0aW9uO1xyXG4gICAgICBpZiAodGhpcy5jb29sZG93biA+IDApIHtcclxuICAgICAgICB0aGlzLmNvb2xkb3duLS07XHJcbiAgICAgIH1cclxuICAgICAgbW92ZSh0aGlzKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBTaG90KGlkLCBzcGFjZXNoaXApIHtcclxuICAgIHRoaXMuaWQgPSBpZDtcclxuICAgIHRoaXMucG9zaXRpb24gPSBbXHJcbiAgICAgIHNwYWNlc2hpcC5wb3NpdGlvblswXSArIHNwYWNlc2hpcC5jYW5ub24ueCArIHNwYWNlc2hpcC5jYW5ub24ueCAqIE1hdGguY29zKChzcGFjZXNoaXAucm90YXRpb24gLSA5MCkgKiBNYXRoLlBJIC8gMTgwKSxcclxuICAgICAgc3BhY2VzaGlwLnBvc2l0aW9uWzFdICsgc3BhY2VzaGlwLmNhbm5vbi55ICsgc3BhY2VzaGlwLmNhbm5vbi55ICogTWF0aC5zaW4oKHNwYWNlc2hpcC5yb3RhdGlvbiAtIDkwKSAqIE1hdGguUEkgLyAxODApXHJcbiAgICBdO1xyXG4gICAgdGhpcy53aWR0aCA9IDk7XHJcbiAgICB0aGlzLmhlaWdodCA9IDE1O1xyXG4gICAgdGhpcy5hbmdsZSA9IHNwYWNlc2hpcC5hbmdsZTtcclxuICAgIHRoaXMucm90YXRpb24gPSBzcGFjZXNoaXAucm90YXRpb247XHJcbiAgICB0aGlzLnNwZWVkID0gc3BhY2VzaGlwLnNwZWVkICsgNTAwO1xyXG4gICAgdGhpcy5saWZlc3BhbiA9IHNwYWNlc2hpcC5yYW5nZTtcclxuICAgIHRoaXMuaW1nID0gbmV3IEltYWdlKCk7XHJcbiAgICB0aGlzLmltZy5zcmMgPSAnYXN0ZXJvaWRzL3Nob3QucG5nJztcclxuXHJcbiAgICB0aGlzLm1vdmUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgdGhpcy5saWZlc3Bhbi0tO1xyXG4gICAgICBtb3ZlKHRoaXMpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIEFzdGVyb2lkKGlkKSB7XHJcbiAgICB0aGlzLmlkID0gaWQ7XHJcbiAgICB0aGlzLndpZHRoID0gTWF0aC5yYW5kb20oKSAqIDUwICsgMjA7XHJcbiAgICB0aGlzLmhlaWdodCA9IHRoaXMud2lkdGg7XHJcbiAgICB0aGlzLnBvc2l0aW9uID0gZ2V0RW50cnlQb3NpdGlvbih0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICB0aGlzLmFuZ2xlID0gTWF0aC5yYW5kb20oKSAqIDM2MDtcclxuICAgIHRoaXMucm90YXRpb24gPSBNYXRoLnJhbmRvbSgpICogMzYwO1xyXG4gICAgdGhpcy5yb3RhdGlvblNwZWVkID0gTWF0aC5yYW5kb20oKSAqIDYgLSAzO1xyXG4gICAgdGhpcy5zcGVlZCA9IE1hdGgucmFuZG9tKCkgKiAzMDAgKyAyO1xyXG4gICAgdGhpcy5pbWcgPSBuZXcgSW1hZ2UoKTtcclxuICAgIHRoaXMuaW1nLnNyYyA9ICdhc3Rlcm9pZHMvYXN0ZXJvaWQnICsgKE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDYpICsgMSkgKyAnLnBuZyc7XHJcblxyXG4gICAgdGhpcy5leHBsb2RlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIGV4cGxvc2lvbnNbdGhpcy5pZF0gPSBuZXcgRXhwbG9zaW9uKHRoaXMpO1xyXG4gICAgICByZXR1cm4gZGVsZXRlIGFzdGVyb2lkc1t0aGlzLmlkXTtcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5tb3ZlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHRoaXMucm90YXRpb24gKz0gdGhpcy5yb3RhdGlvblNwZWVkO1xyXG4gICAgICBpZiAodGhpcy5yb3RhdGlvbiA+IDM2MCkge1xyXG4gICAgICAgIHRoaXMucm90YXRpb24gPSB0aGlzLnJvdGF0aW9uIC0gMzYwO1xyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMucm90YXRpb24gPCAwKSB7XHJcbiAgICAgICAgdGhpcy5yb3RhdGlvbiA9IDM2MCArIHRoaXMucm90YXRpb247XHJcbiAgICAgIH1cclxuICAgICAgZm9yICh2YXIgaSBpbiBzaG90cykge1xyXG4gICAgICAgIHZhciBzaG90ID0gc2hvdHNbaV07XHJcbiAgICAgICAgaWYgKGhpdChzaG90LCB0aGlzKSkge1xyXG4gICAgICAgICAgdGhpcy5leHBsb2RlKCk7XHJcbiAgICAgICAgICB2YXIgcG9pbnRzID0gTWF0aC5mbG9vcigoc2hvdC5zcGVlZCAtIDUwMCkgLyAxMCArIDcwIC0gdGhpcy53aWR0aCk7XHJcbiAgICAgICAgICBpZiAoTWF0aC5mbG9vcigocG9pbnRzICsgJHNjb3BlLnNjb3JlKSAvIDEwMCkgPiBNYXRoLmZsb29yKCRzY29wZS5zY29yZSAvIDEwMCkpIHtcclxuICAgICAgICAgICAgc3Bhd25Qb3dlcnVwKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAkc2NvcGUuc2NvcmUgKz0gcG9pbnRzO1xyXG4gICAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xyXG4gICAgICAgICAgZGVsZXRlIHNob3RzW2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBtb3ZlKHRoaXMpO1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIEV4cGxvc2lvbihvYmplY3QpIHtcclxuICAgIHRoaXMucG9zaXRpb24gPSBbb2JqZWN0LnBvc2l0aW9uWzBdLCBvYmplY3QucG9zaXRpb25bMV1dO1xyXG4gICAgdGhpcy53aWR0aCA9IG9iamVjdC53aWR0aDtcclxuICAgIHRoaXMuaGVpZ2h0ID0gb2JqZWN0LmhlaWdodDtcclxuICAgIHRoaXMuc3BlZWQgPSAwO1xyXG4gICAgdGhpcy5hbmdsZSA9IE1hdGgucmFuZG9tKCkgKiAzNjA7XHJcbiAgICB0aGlzLmN5Y2xlID0ge1xyXG4gICAgICByb3dzOiA2LFxyXG4gICAgICBjb2x1bW5zOiA4LFxyXG4gICAgICBzaXplOiBbMjU2LCAyNTZdLFxyXG4gICAgICBpOiAwLFxyXG4gICAgICBkaXJlY3Rpb246IHRydWVcclxuICAgIH07XHJcbiAgICB0aGlzLmxpZmVzcGFuID0gNDc7XHJcbiAgICB0aGlzLmltZyA9IGV4cGxvc2lvbkltYWdlO1xyXG5cclxuICAgIHRoaXMubW92ZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICB0aGlzLmxpZmVzcGFuLS07XHJcbiAgICAgIG1vdmUodGhpcyk7XHJcbiAgICAgIGlmICh0aGlzLmN5Y2xlLmRpcmVjdGlvbikge1xyXG4gICAgICAgIHRoaXMuY3ljbGUuaSsrO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuY3ljbGUuaS0tO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gUG93ZXJ1cChpZCkge1xyXG4gICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgdGhpcy5wb3dlcnVwID0gcG93ZXJ1cFR5cGVzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvd2VydXBUeXBlcy5sZW5ndGgpXTtcclxuICAgIHRoaXMuY3ljbGUgPSB0aGlzLnBvd2VydXAuY3ljbGU7XHJcbiAgICB0aGlzLmxpZmVzcGFuID0gMTAwMDtcclxuICAgIGlmICh0aGlzLmN5Y2xlLnNpemVbMV0gPiB0aGlzLmN5Y2xlLnNpemVbMF0pIHtcclxuICAgICAgdGhpcy5oZWlnaHQgPSA0MDtcclxuICAgICAgdGhpcy53aWR0aCA9IE1hdGgucm91bmQodGhpcy5oZWlnaHQgLyB0aGlzLmN5Y2xlLnNpemVbMV0gKiB0aGlzLmN5Y2xlLnNpemVbMF0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy53aWR0aCA9IDQwO1xyXG4gICAgICB0aGlzLmhlaWdodCA9IE1hdGgucm91bmQodGhpcy53aWR0aCAvIHRoaXMuY3ljbGUuc2l6ZVswXSAqIHRoaXMuY3ljbGUuc2l6ZVsxXSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnBvc2l0aW9uID0gZ2V0RW50cnlQb3NpdGlvbih0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICB0aGlzLmltZyA9IHRoaXMucG93ZXJ1cC5pbWc7XHJcbiAgICB0aGlzLmFuZ2xlID0gTWF0aC5yYW5kb20oKSAqIDM2MDtcclxuICAgIHRoaXMuc3BlZWQgPSBNYXRoLnJhbmRvbSgpICogMTUwICsgNTA7XHJcbiAgICB2YXIgZGVsYXkgPSA1O1xyXG4gICAgdGhpcy5tb3ZlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIGlmICh0aGlzLmxpZmVzcGFuIDw9IDApIHtcclxuICAgICAgICByZXR1cm4gZGVsZXRlIHBvd2VydXBzW3RoaXMuaWRdO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChoaXQoc3BhY2VzaGlwLCB0aGlzKSkge1xyXG4gICAgICAgICRzY29wZS5hbm5vdW5jZSA9IHRydWU7XHJcbiAgICAgICAgJHNjb3BlLmFubm91bmNlbWVudCA9IHRoaXMucG93ZXJ1cC5hbm5vdW5jZW1lbnQ7XHJcbiAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc2NvcGUuYW5ub3VuY2UgPSBmYWxzZTtcclxuICAgICAgICAgICRzY29wZS4kYXBwbHkoKTtcclxuICAgICAgICB9LCAxMDAwKTtcclxuICAgICAgICB0aGlzLnBvd2VydXAuYWN0aXZhdGUoc3BhY2VzaGlwKTtcclxuICAgICAgICByZXR1cm4gZGVsZXRlIHBvd2VydXBzW3RoaXMuaWRdO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMubGlmZXNwYW4tLTtcclxuICAgICAgbW92ZSh0aGlzKTtcclxuICAgICAgaWYgKGRlbGF5IDw9IDApIHtcclxuICAgICAgICBpZiAodGhpcy5jeWNsZS5kaXJlY3Rpb24pIHtcclxuICAgICAgICAgIHRoaXMuY3ljbGUuaSsrO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmN5Y2xlLmktLTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZGVsYXkgPSA1O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRlbGF5LS07XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBtb3ZlKG9iamVjdCkge1xyXG4gICAgIG9iamVjdC5wb3NpdGlvblswXSArPSBvYmplY3Quc3BlZWQgLyAxMDAgKiBNYXRoLmNvcygob2JqZWN0LmFuZ2xlIC0gOTApICogTWF0aC5QSSAvIDE4MCk7XHJcbiAgICAgb2JqZWN0LnBvc2l0aW9uWzFdICs9IG9iamVjdC5zcGVlZCAvIDEwMCAqIE1hdGguc2luKChvYmplY3QuYW5nbGUgLSA5MCkgKiBNYXRoLlBJIC8gMTgwKTtcclxuICAgICBpZiAob2JqZWN0LnBvc2l0aW9uWzBdID4gY2FudmFzLndpZHRoKSB7XHJcbiAgICAgICBvYmplY3QucG9zaXRpb25bMF0gPSAtb2JqZWN0LndpZHRoO1xyXG4gICAgIH0gZWxzZSBpZiAob2JqZWN0LnBvc2l0aW9uWzBdIDwgLW9iamVjdC53aWR0aCkge1xyXG4gICAgICAgb2JqZWN0LnBvc2l0aW9uWzBdID0gY2FudmFzLndpZHRoO1xyXG4gICAgIH1cclxuICAgICBpZiAob2JqZWN0LnBvc2l0aW9uWzFdID4gY2FudmFzLmhlaWdodCkge1xyXG4gICAgICAgb2JqZWN0LnBvc2l0aW9uWzFdID0gLW9iamVjdC5oZWlnaHQ7XHJcbiAgICAgfSBlbHNlIGlmIChvYmplY3QucG9zaXRpb25bMV0gPCAtb2JqZWN0LmhlaWdodCkge1xyXG4gICAgICAgb2JqZWN0LnBvc2l0aW9uWzFdID0gY2FudmFzLmhlaWdodDtcclxuICAgICB9XHJcbiAgICAgY3R4LnNhdmUoKTtcclxuICAgICBjdHgudHJhbnNsYXRlKG9iamVjdC5wb3NpdGlvblswXSwgb2JqZWN0LnBvc2l0aW9uWzFdKTtcclxuICAgICBjdHgudHJhbnNsYXRlKG9iamVjdC53aWR0aCAvIDIsIG9iamVjdC5oZWlnaHQgLyAyKTtcclxuICAgICBjdHgucm90YXRlKG9iamVjdC5yb3RhdGlvbiAqIE1hdGguUEkgLyAxODApO1xyXG4gICAgIGlmIChvYmplY3QuY3ljbGUpIHtcclxuICAgICAgIHZhciBjb2x1bW4gPSBvYmplY3QuY3ljbGUuaSAlIG9iamVjdC5jeWNsZS5jb2x1bW5zO1xyXG4gICAgICAgdmFyIHJvdyA9IE1hdGguZmxvb3Iob2JqZWN0LmN5Y2xlLmkgLyBvYmplY3QuY3ljbGUuY29sdW1ucyk7XHJcbiAgICAgICBjdHguZHJhd0ltYWdlKG9iamVjdC5pbWcsIG9iamVjdC5jeWNsZS5zaXplWzBdICogY29sdW1uLCBvYmplY3QuY3ljbGUuc2l6ZVsxXSAqIHJvdywgb2JqZWN0LmN5Y2xlLnNpemVbMF0sIG9iamVjdC5jeWNsZS5zaXplWzFdLCAtb2JqZWN0LndpZHRoIC8gMiwgLW9iamVjdC5oZWlnaHQgLyAyLCBvYmplY3Qud2lkdGgsIG9iamVjdC5oZWlnaHQpO1xyXG5cclxuICAgICAgIGlmIChvYmplY3QuY3ljbGUuaSA8PSAwKSB7XHJcbiAgICAgICAgIG9iamVjdC5jeWNsZS5pID0gMDtcclxuICAgICAgICAgb2JqZWN0LmN5Y2xlLmRpcmVjdGlvbiA9IHRydWU7XHJcbiAgICAgICB9IGVsc2UgaWYgKG9iamVjdC5jeWNsZS5pID49IG9iamVjdC5jeWNsZS5jb2x1bW5zICogb2JqZWN0LmN5Y2xlLnJvd3MpIHtcclxuICAgICAgICAgb2JqZWN0LmN5Y2xlLmkgPSBvYmplY3QuY3ljbGUuY29sdW1ucyAqIG9iamVjdC5jeWNsZS5yb3dzIC0gMTtcclxuICAgICAgICAgb2JqZWN0LmN5Y2xlLmRpcmVjdGlvbiA9IGZhbHNlO1xyXG4gICAgICAgfVxyXG4gICAgIH0gZWxzZSB7XHJcbiAgICAgICBjdHguZHJhd0ltYWdlKG9iamVjdC5pbWcsIC1vYmplY3Qud2lkdGggLyAyLCAtb2JqZWN0LmhlaWdodCAvIDIsIG9iamVjdC53aWR0aCwgb2JqZWN0LmhlaWdodCk7XHJcbiAgICAgfVxyXG4gICAgIGN0eC5yZXN0b3JlKCk7XHJcbiAgfVxyXG5cclxuICB2YXIgc3BhY2VzaGlwO1xyXG5cclxuICBmdW5jdGlvbiBzdGFydCgpIHtcclxuICAgICRzY29wZS5wbGF5aW5nID0gdHJ1ZTtcclxuICAgICRzY29wZS5zY29yZSA9IDA7XHJcbiAgICBzcGFjZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHNwYWNlcGljcyk7XHJcbiAgICAkc2NvcGUuJGFwcGx5KCk7XHJcbiAgICBzcGFjZXNoaXAgPSBuZXcgU3BhY2VzaGlwKCk7XHJcbiAgICAkc2NvcGUuc2NvcmUgPSAwO1xyXG4gICAgc3Bhd25Bc3Rlcm9pZHMoNSk7XHJcbiAgICBhdXRvU3Bhd24oKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdldEVudHJ5UG9zaXRpb24od2lkdGgsIGhlaWdodCkge1xyXG4gICAgdmFyIGdyaWRYID0gTWF0aC5yYW5kb20oKSAqIDI7XHJcbiAgICB2YXIgZ3JpZFkgPSBNYXRoLnJhbmRvbSgpICogMjtcclxuICAgIHZhciB4LCB5ID0gMDtcclxuICAgIGlmIChncmlkWCA+PSAxKSB7XHJcbiAgICAgIHggPSBNYXRoLnJhbmRvbSgpICogY2FudmFzLndpZHRoO1xyXG4gICAgICBpZiAoeSA+PSAxKSB7XHJcbiAgICAgICAgeSA9IDAgLSBoZWlnaHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgeSA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHkgPSBNYXRoLnJhbmRvbSgpICogY2FudmFzLmhlaWdodDtcclxuICAgICAgaWYgKGdyaWRZID49IDEpIHtcclxuICAgICAgICB4ID0gMCAtIHdpZHRoO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHggPSBjYW52YXMud2lkdGg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBbeCwgeV07XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBoaXQob2JqZWN0MSwgb2JqZWN0Mikge1xyXG4gICAgcmV0dXJuIChvYmplY3QxLnBvc2l0aW9uWzBdIDwgb2JqZWN0Mi5wb3NpdGlvblswXSArIG9iamVjdDIud2lkdGgpICYmXHJcbiAgICAgICAgICAgKG9iamVjdDIucG9zaXRpb25bMF0gPCBvYmplY3QxLnBvc2l0aW9uWzBdICsgb2JqZWN0MS53aWR0aCkgJiZcclxuICAgICAgICAgICAob2JqZWN0MS5wb3NpdGlvblsxXSA8IG9iamVjdDIucG9zaXRpb25bMV0gKyBvYmplY3QyLmhlaWdodCkgJiZcclxuICAgICAgICAgICAob2JqZWN0Mi5wb3NpdGlvblsxXSA8IG9iamVjdDEucG9zaXRpb25bMV0gKyBvYmplY3QxLmhlaWdodCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhdXRvU3Bhd24oKSB7XHJcbiAgICBpZiAoT2JqZWN0LmtleXMoYXN0ZXJvaWRzKS5sZW5ndGggPCAyMDApIHtcclxuICAgICAgdmFyIGlkID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwKTtcclxuICAgICAgYXN0ZXJvaWRzW2lkXSA9IG5ldyBBc3Rlcm9pZChpZCk7XHJcbiAgICB9XHJcbiAgICBpZiAoJHNjb3BlLnBsYXlpbmcpIHtcclxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICBhdXRvU3Bhd24oKTtcclxuICAgICAgfSwgc3Bhd25JbnRlcnZhbCgpKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNwYXduSW50ZXJ2YWwoKSB7XHJcbiAgICBpZiAoJHNjb3BlLnNjb3JlIDwgMTAwMCkge1xyXG4gICAgICByZXR1cm4gMTAwMDtcclxuICAgIH0gZWxzZSBpZiAoJHNjb3BlLnNjb3JlIDwgMjAwMCkge1xyXG4gICAgICByZXR1cm4gOTAwO1xyXG4gICAgfSBlbHNlIGlmICgkc2NvcGUuc2NvcmUgPCAzMDAwKSB7XHJcbiAgICAgIHJldHVybiA4MDA7XHJcbiAgICB9IGVsc2UgaWYgKCRzY29wZS5zY29yZSA8IDQwMDApIHtcclxuICAgICAgcmV0dXJuIDcwMDtcclxuICAgIH0gZWxzZSBpZiAoJHNjb3BlLnNjb3JlIDwgNTAwMCkge1xyXG4gICAgICByZXR1cm4gNjAwO1xyXG4gICAgfSBlbHNlIGlmICgkc2NvcGUuc2NvcmUgPCA2MDAwKSB7XHJcbiAgICAgIHJldHVybiA1MDA7XHJcbiAgICB9IGVsc2UgaWYgKCRzY29wZS5zY29yZSA8IDcwMDApIHtcclxuICAgICAgcmV0dXJuIDQwMDtcclxuICAgIH0gZWxzZSBpZiAoJHNjb3BlLnNjb3JlIDwgODAwMCkge1xyXG4gICAgICByZXR1cm4gMzAwO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIDIwMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNwYXduQXN0ZXJvaWRzKGFtb3VudCkge1xyXG4gICAgdmFyIGkgPSAwO1xyXG4gICAgZG8ge1xyXG4gICAgICB2YXIgaWQgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxMDAwMDAwMDApO1xyXG4gICAgICBhc3Rlcm9pZHNbaWRdID0gbmV3IEFzdGVyb2lkKGlkKTtcclxuICAgIH0gd2hpbGUgKGkrKyA8PSBhbW91bnQpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3Bhd25Qb3dlcnVwKCkge1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKHBvd2VydXBzKS5sZW5ndGggPCAzKSB7XHJcbiAgICAgIHZhciBpZCA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDEwMDAwMDAwMCk7XHJcbiAgICAgIHBvd2VydXBzW2lkXSA9IG5ldyBQb3dlcnVwKGlkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdhbWVPdmVyKCkge1xyXG4gICAgJHNjb3BlLnBsYXlpbmcgPSBmYWxzZTtcclxuICAgIGZvciAodmFyIGkgaW4gYXN0ZXJvaWRzKSB7XHJcbiAgICAgIGFzdGVyb2lkc1tpXS5leHBsb2RlKCk7XHJcbiAgICB9XHJcbiAgICBzaG90cyA9IHt9O1xyXG4gICAgaWYgKCRzY29wZS5sb2dnZWRJbikge1xyXG4gICAgICBpZiAoJHNjb3BlLmN1cnJlbnRVc2VyLmhpZ2hzY29yZS5hc3Rlcm9pZHMgPCAkc2NvcGUuc2NvcmUpIHtcclxuICAgICAgICAkc2NvcGUuY3VycmVudFVzZXIuaGlnaHNjb3JlLmFzdGVyb2lkcyA9ICRzY29wZS5zY29yZTtcclxuICAgICAgICBHYW1lU3ZjLnNldEhpZ2hzY29yZSgnYXN0ZXJvaWRzJywgJHNjb3BlLmN1cnJlbnRVc2VyLl9pZCwgJHNjb3BlLnNjb3JlKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKCRzY29wZS5oaWdoc2NvcmUgPCAkc2NvcGUuc2NvcmUpIHtcclxuICAgICAgICAkc2NvcGUuaGlnaHNjb3JlID0gJHNjb3BlLnNjb3JlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHQvLyBTdGFydCBsaXN0ZW5pbmcgdG8gcmVzaXplIGV2ZW50cyBhbmRcclxuXHQvLyBkcmF3IGNhbnZhcy5cclxuXHJcblx0ZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcclxuXHRcdC8vIFJlZ2lzdGVyIGFuIGV2ZW50IGxpc3RlbmVyIHRvXHJcblx0XHQvLyBjYWxsIHRoZSByZXNpemVDYW52YXMoKSBmdW5jdGlvbiBlYWNoIHRpbWVcclxuXHRcdC8vIHRoZSB3aW5kb3cgaXMgcmVzaXplZC5cclxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZXNpemVDYW52YXMsIGZhbHNlKTtcclxuXHJcblxyXG5cdFx0Ly8gRHJhdyBjYW52YXMgYm9yZGVyIGZvciB0aGUgZmlyc3QgdGltZS5cclxuXHRcdHJlc2l6ZUNhbnZhcygpO1xyXG5cdH1cclxuXHQvLyBSdW5zIGVhY2ggdGltZSB0aGUgRE9NIHdpbmRvdyByZXNpemUgZXZlbnQgZmlyZXMuXHJcblx0Ly8gUmVzZXRzIHRoZSBjYW52YXMgZGltZW5zaW9ucyB0byBtYXRjaCB3aW5kb3csXHJcblx0Ly8gdGhlbiBkcmF3cyB0aGUgbmV3IGJvcmRlcnMgYWNjb3JkaW5nbHkuXHJcblx0ZnVuY3Rpb24gcmVzaXplQ2FudmFzKCkge1xyXG4gICAgY29uc29sZS5sb2cod2luZG93LmlubmVyV2lkdGgpO1xyXG5cdFx0Y2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XHJcblx0XHRjYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0IC0gKGNhbnZhcy53aWR0aCA8PSA3NjggPyA1MCA6IDEwNSk7XHJcblx0fVxyXG5cclxuXHRpbml0aWFsaXplKCk7XHJcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGRyYXcpO1xyXG5cclxuICB2YXIgdGFsbHkgPSAwO1xyXG4gIHZhciBkaXJlY3Rpb24gPSB0cnVlO1xyXG5cclxuICBmdW5jdGlvbiBkcmF3KCkge1xyXG4gICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG4gICAgZm9yICh2YXIgaSBpbiBzaG90cykge1xyXG4gICAgICBpZiAoc2hvdHNbaV0ubGlmZXNwYW4gPD0gMCkge1xyXG4gICAgICAgIGRlbGV0ZSBzaG90c1tpXTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzaG90c1tpXS5tb3ZlKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGZvciAoaSBpbiBhc3Rlcm9pZHMpIHtcclxuICAgICAgYXN0ZXJvaWRzW2ldLm1vdmUoKTtcclxuICAgIH1cclxuICAgIGZvciAoaSBpbiBwb3dlcnVwcykge1xyXG4gICAgICBwb3dlcnVwc1tpXS5tb3ZlKCk7XHJcbiAgICB9XHJcbiAgICBmb3IgKGkgaW4gZXhwbG9zaW9ucykge1xyXG4gICAgICBpZiAoZXhwbG9zaW9uc1tpXS5saWZlc3BhbiA8PSAwKSB7XHJcbiAgICAgICAgZGVsZXRlIGV4cGxvc2lvbnNbaV07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZXhwbG9zaW9uc1tpXS5tb3ZlKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGV2YWx1YXRlS2V5cygpO1xyXG4gICAgaWYgKCRzY29wZS5wbGF5aW5nKSB7XHJcbiAgICAgIHNwYWNlc2hpcC5tb3ZlKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgZ3JhZGllbnQgPSBjdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMCwgY2FudmFzLndpZHRoLCAwKTtcclxuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKCcwJywgJ3JnYignICsgTWF0aC5mbG9vcigyNTYgLSAyNTYgKiB0YWxseSAvIDEwMCkgKyAnLCcgKyBNYXRoLmZsb29yKDAgKyAyNTYgKiB0YWxseSAvIDEwMCkgKyAnLCcgKyBNYXRoLmZsb29yKDAgKyAyNTYgKiB0YWxseSAvIDEwMCkgKyAnKScpO1xyXG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoJzAuMjUnLCAncmdiKCcgKyBNYXRoLmZsb29yKDAgKyAyNTYgKiB0YWxseSAvIDEwMCkgKyAnLCcgKyBNYXRoLmZsb29yKDI1NiAtIDI1NiAqIHRhbGx5IC8gMTAwKSArICcsJyArIE1hdGguZmxvb3IoMCArIDI1NiAqIHRhbGx5IC8gMTAwKSArICcpJyk7XHJcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgnMC41JywgJ3JnYignICsgTWF0aC5mbG9vcigwICsgMjU2ICogdGFsbHkgLyAxMDApICsgJywnICsgTWF0aC5mbG9vcigwICsgMjU2ICogdGFsbHkgLyAxMDApICsgJywnICsgTWF0aC5mbG9vcigyNTYgLSAyNTYgKiB0YWxseSAvIDEwMCkgKyAnKScpO1xyXG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoJzAuNzUnLCAncmdiKCcgKyBNYXRoLmZsb29yKDAgKyAyNTYgKiB0YWxseSAvIDEwMCkgKyAnLCcgKyBNYXRoLmZsb29yKDI1NiAtIDI1NiAqIHRhbGx5IC8gMTAwKSArICcsJyArIE1hdGguZmxvb3IoMCArIDI1NiAqIHRhbGx5IC8gMTAwKSArICcpJyk7XHJcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgnMS4wJywgJ3JnYignICsgTWF0aC5mbG9vcigyNTYgLSAyNTYgKiB0YWxseSAvIDEwMCkgKyAnLCcgKyBNYXRoLmZsb29yKDAgKyAyNTYgKiB0YWxseSAvIDEwMCkgKyAnLCcgKyBNYXRoLmZsb29yKDAgKyAyNTYgKiB0YWxseSAvIDEwMCkgKyAnKScpO1xyXG4gICAgICBjdHguZmlsbFN0eWxlID0gZ3JhZGllbnQ7XHJcbiAgICAgIGN0eC5mb250PSc2MHB4IE1vbm90b24nO1xyXG4gICAgICBjdHguZmlsbFRleHQoJ0FzdGVyb2lkcycsIGNhbnZhcy53aWR0aCAvIDIgLSBjdHgubWVhc3VyZVRleHQoJ0FzdGVyb2lkcycpLndpZHRoIC8gMiwgY2FudmFzLmhlaWdodCAvIDIpO1xyXG4gICAgICBjdHguZm9udD0nMjBweCBBbGRyaWNoJztcclxuICAgICAgY3R4LmZpbGxUZXh0KCdQcmVzcyBzcGFjZSB0byBzdGFydCcsIGNhbnZhcy53aWR0aCAvIDIgLSBjdHgubWVhc3VyZVRleHQoJ1ByZXNzIHNwYWNlIHRvIHN0YXJ0Jykud2lkdGggLyAyLCBjYW52YXMuaGVpZ2h0IC8gMiArIDIwKTtcclxuICAgICAgY3R4LmZpbGxUZXh0KCdEZXNpZ25lZCBhbmQgZGV2ZWxvcGVkIGJ5IExhdXJlbnQgRGViYWNrZXInLCBjYW52YXMud2lkdGggLyAyIC0gY3R4Lm1lYXN1cmVUZXh0KCdEZXNpZ25lZCBhbmQgZGV2ZWxvcGVkIGJ5IExhdXJlbnQgRGViYWNrZXInKS53aWR0aCAvIDIsIGNhbnZhcy5oZWlnaHQgLSAzMCk7XHJcbiAgICB9XHJcbiAgICB0YWxseSArPSBkaXJlY3Rpb24gPyAxIDogLTE7XHJcbiAgICBpZiAodGFsbHkgPiAxMDApIHtcclxuICAgICAgdGFsbHkgPSAxMDA7XHJcbiAgICAgIGRpcmVjdGlvbiA9IGZhbHNlO1xyXG4gICAgfSBlbHNlIGlmICh0YWxseSA8IDApIHtcclxuICAgICAgdGFsbHkgPSAwO1xyXG4gICAgICBkaXJlY3Rpb24gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGRyYXcpO1xyXG4gIH1cclxuXHJcbiAgJHNjb3BlLnNwYWNlID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoXCJhc3Rlcm9pZHMvc3BhY2UnICsgc3BhY2UgKyAnLmpwZ1wiKSdcclxuICAgIH07XHJcbiAgfTtcclxuXHJcblxyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignQm90c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBCb3RzU3ZjKSB7XHJcblxyXG4gICRzY29wZS5jYXRlZ29yaWVzID0gW1xyXG4gICAgJ011c2ljJyxcclxuICAgICdUZWxldmlzaW9uJyxcclxuICAgICdNb3ZpZXMnLFxyXG4gICAgJ0dlb2dyYXBoeScsXHJcbiAgICAnSGlzdG9yeScsXHJcbiAgICAnU2NpZW5jZScsXHJcbiAgICAnR2FtaW5nJyxcclxuICAgICdTcG9ydCcsXHJcbiAgICAnUmVsaWdpb24nLFxyXG4gICAgJ0xpdGVyYXR1cmUnLFxyXG4gICAgJ01pc2MnLFxyXG4gICAgJ0Z1bm55J1xyXG4gIF07XHJcblxyXG4gICRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24gKF8pIHtcclxuICAgIGdldExpc3RzKCk7XHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIGdldExpc3RzKCkge1xyXG4gICAgQm90c1N2Yy5nZXRMaXN0cygkc2NvcGUuY3VycmVudFVzZXIpXHJcbiAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAkc2NvcGUubGlzdHMgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAkc2NvcGUuc2VsZWN0TGlzdCA9IGZ1bmN0aW9uKGxpc3QpIHtcclxuICAgICRzY29wZS5zZWxlY3RlZExpc3QgPSBsaXN0O1xyXG4gIH07XHJcblxyXG4gICRzY29wZS5hZGRMaXN0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAkc2NvcGUubGlzdHMudW5zaGlmdCh7XHJcbiAgICAgIG5hbWU6ICcnLFxyXG4gICAgICBjcmVhdG9yOiAkc2NvcGUuY3VycmVudFVzZXIuX2lkLFxyXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLFxyXG4gICAgICB2YWx1ZXM6IFtcclxuICAgICAgICB7IHZhbHVlOiAnJyB9LFxyXG4gICAgICAgIHsgdmFsdWU6ICcnIH0sXHJcbiAgICAgICAgeyB2YWx1ZTogJycgfSxcclxuICAgICAgICB7IHZhbHVlOiAnJyB9LFxyXG4gICAgICAgIHsgdmFsdWU6ICcnIH0sXHJcbiAgICAgICAgeyB2YWx1ZTogJycgfSxcclxuICAgICAgICB7IHZhbHVlOiAnJyB9LFxyXG4gICAgICAgIHsgdmFsdWU6ICcnIH0sXHJcbiAgICAgICAgeyB2YWx1ZTogJycgfSxcclxuICAgICAgICB7IHZhbHVlOiAnJyB9LFxyXG4gICAgICBdXHJcbiAgICB9KTtcclxuICAgICRzY29wZS5zZWxlY3RlZExpc3QgPSAkc2NvcGUubGlzdHNbMF07XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLnNhdmVMaXN0ID0gZnVuY3Rpb24obGlzdCkge1xyXG4gICAgbGlzdC52YWx1ZXMgPSBsaXN0LnZhbHVlcy5maWx0ZXIoZnVuY3Rpb24oaXRlbSkge1xyXG4gICAgICByZXR1cm4gaXRlbS52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgaWYgKGxpc3QudmFsdWVzLmxlbmd0aCA+PSAxMCkge1xyXG4gICAgICBCb3RzU3ZjLnNhdmVMaXN0KGxpc3QpXHJcbiAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgZ2V0TGlzdHMoKTtcclxuICAgICAgICAkc2NvcGUuc2VsZWN0TGlzdChyZXNwb25zZS5kYXRhKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhbGVydCgnTGlzdHMgbXVzdCBjb250YWluIDEwIG9yIG1vcmUgdmFsdWVzIScpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gICRzY29wZS5kZWxldGVMaXN0ID0gZnVuY3Rpb24obGlzdCkge1xyXG4gICAgQm90c1N2Yy5kZWxldGVMaXN0KGxpc3QpXHJcbiAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICBnZXRMaXN0cygpO1xyXG4gICAgICAkc2NvcGUuc2VsZWN0TGlzdChsaXN0KTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignQnViYmxlc0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcblxyXG4gIHZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnViYmxlcy1wYWdlJyk7XHJcbiAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG4gIHZhciBidWJibGVzID0gW107XHJcbiAgdmFyIGNvbG9ycyA9IFsnI2ZmYzMwMCcsJyNmZjU3MzMnLCcjYzcwMDM5JywnIzkwMGMzZScsJyM1NzE4NDUnXTtcclxuXHJcbiAgZnVuY3Rpb24gQnViYmxlKCkge1xyXG4gICAgdGhpcy5saWZlc3BhbiA9IDA7XHJcbiAgICB0aGlzLnJhZGl1cyA9IDE7XHJcbiAgICB0aGlzLmV4cGFuZGluZyA9IHRydWU7XHJcbiAgICB0aGlzLnNwZWVkID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMyk7XHJcbiAgICB0aGlzLmNpcmN1bWZlcmVuY2UgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiA1MCkgKyA1O1xyXG4gICAgdGhpcy5tYXhSYWRpdXMgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAyMDApICsgMjA7XHJcbiAgICB0aGlzLnggPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiBjYW52YXMud2lkdGgpO1xyXG4gICAgdGhpcy55ID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogY2FudmFzLmhlaWdodCk7XHJcbiAgICB0aGlzLnZ4ID0gKE1hdGgucmFuZG9tKCkgPj0gMC41ID8gMSA6IC0xKTtcclxuICAgIHRoaXMudnkgPSAoTWF0aC5yYW5kb20oKSA+PSAwLjUgPyAxIDogLTEpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZHJhdygpIHtcclxuICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcclxuICAgIGJ1YmJsZXMuZm9yRWFjaChmdW5jdGlvbihidWJibGUpIHtcclxuICAgICAgdmFyIGNvbG9yID0gY29sb3JzW01hdGgucm91bmQoY29sb3JzLmxlbmd0aCAqIGJ1YmJsZS5yYWRpdXMgLyBidWJibGUubWF4UmFkaXVzKV07XHJcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgY3R4LmFyYyhidWJibGUueCwgYnViYmxlLnksIGJ1YmJsZS5yYWRpdXMsIDAsIDIgKiBNYXRoLlBJKTtcclxuICAgICAgY3R4LmZpbGxTdHlsZSA9IGNvbG9yc1tNYXRoLnJvdW5kKGNvbG9ycy5sZW5ndGggKiBidWJibGUucmFkaXVzIC8gYnViYmxlLm1heFJhZGl1cyldO1xyXG4gICAgICBjdHguZmlsbCgpO1xyXG4gICAgICBjdHguc3Ryb2tlU3R5bGUgPSBjb2xvcnNbY29sb3JzLmxlbmd0aCAtIE1hdGgucm91bmQoY29sb3JzLmxlbmd0aCAqIGJ1YmJsZS5yYWRpdXMgLyBidWJibGUubWF4UmFkaXVzKV07XHJcbiAgICAgIGN0eC5saW5lV2lkdGggPSBidWJibGUuY2lyY3VtZmVyZW5jZSAqIGJ1YmJsZS5yYWRpdXMgLyBidWJibGUubWF4UmFkaXVzO1xyXG4gICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGZpbHRlckJ1YmJsZXMoKSB7XHJcbiAgICBidWJibGVzLnB1c2gobmV3IEJ1YmJsZSgpKTtcclxuICAgIGJ1YmJsZXMgPSBidWJibGVzLmZpbHRlcihmdW5jdGlvbiAoYnViYmxlKSB7XHJcbiAgICAgIGlmIChidWJibGUucmFkaXVzID09PSBidWJibGUubWF4UmFkaXVzKSB7XHJcbiAgICAgICAgYnViYmxlLmV4cGFuZGluZyA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIGJ1YmJsZS54ICs9IGJ1YmJsZS52eCAqIGJ1YmJsZS5zcGVlZDtcclxuICAgICAgYnViYmxlLnkgKz0gYnViYmxlLnZ5ICogYnViYmxlLnNwZWVkO1xyXG4gICAgICBidWJibGUucmFkaXVzICs9IChidWJibGUuZXhwYW5kaW5nID8gMSA6IC0xKTtcclxuICAgICAgcmV0dXJuIGJ1YmJsZS5yYWRpdXMgPiAwO1xyXG4gICAgfSk7XHJcbiAgICBkcmF3KCk7XHJcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZmlsdGVyQnViYmxlcyk7XHJcbiAgfVxyXG5cclxuICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZmlsdGVyQnViYmxlcyk7XHJcblxyXG5cclxuXHQoZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0Ly8gU3RhcnQgbGlzdGVuaW5nIHRvIHJlc2l6ZSBldmVudHMgYW5kXHJcblx0XHQvLyBkcmF3IGNhbnZhcy5cclxuXHRcdGluaXRpYWxpemUoKTtcclxuXHJcblx0XHRmdW5jdGlvbiBpbml0aWFsaXplKCkge1xyXG5cdFx0XHQvLyBSZWdpc3RlciBhbiBldmVudCBsaXN0ZW5lciB0b1xyXG5cdFx0XHQvLyBjYWxsIHRoZSByZXNpemVDYW52YXMoKSBmdW5jdGlvbiBlYWNoIHRpbWVcclxuXHRcdFx0Ly8gdGhlIHdpbmRvdyBpcyByZXNpemVkLlxyXG5cdFx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgcmVzaXplQ2FudmFzLCBmYWxzZSk7XHJcblxyXG5cdFx0XHQvLyBEcmF3IGNhbnZhcyBib3JkZXIgZm9yIHRoZSBmaXJzdCB0aW1lLlxyXG5cdFx0XHRyZXNpemVDYW52YXMoKTtcclxuXHRcdH1cclxuXHRcdC8vIFJ1bnMgZWFjaCB0aW1lIHRoZSBET00gd2luZG93IHJlc2l6ZSBldmVudCBmaXJlcy5cclxuXHRcdC8vIFJlc2V0cyB0aGUgY2FudmFzIGRpbWVuc2lvbnMgdG8gbWF0Y2ggd2luZG93LFxyXG5cdFx0Ly8gdGhlbiBkcmF3cyB0aGUgbmV3IGJvcmRlcnMgYWNjb3JkaW5nbHkuXHJcblx0XHRmdW5jdGlvbiByZXNpemVDYW52YXMoKSB7XHJcblx0XHRcdGNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG5cdFx0XHRjYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0IC0gKGNhbnZhcy53aWR0aCA8PSA3NjggPyA1NSA6IDExMSk7XHJcblx0XHR9XHJcblxyXG5cdH0pKCk7XHJcblxyXG5cclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ0NvbnRhY3RDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgRW1haWxTdmMpIHtcclxuXHJcbiAgJHNjb3BlLm9wdGlvbnMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiU3BhbVwiLFxyXG4gICAgICB0ZXh0OiBcIkkgYW0gYSBzcGFtIGJvdCBhbmQgYXV0b21hdGljYWxseSBjaGVjayB0aGUgZmlyc3Qgb3B0aW9uIEkgZmluZCFcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJPcHBvcnR1bml0aXlcIixcclxuICAgICAgdGV4dDogXCJZb3Ugc2VlbSB0byBoYXZlIHRoZSBza2lsbHMgSSBzZWVrLCBJJ2QgbGlrZSB0byB0YWxrIGFib3V0IHNvbWUgb3Bwb3J0dW5pdGllcy5cIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJSZXN1bWVcIixcclxuICAgICAgdGV4dDogXCJJIGRpZyB0aGUgcmVzdW1lLCBob3cgZGlkIHlvdSBtYWtlIGl0P1wiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIk90aGVyXCIsXHJcbiAgICAgIHRleHQ6IFwiU3VtdGluIGVsc2UhXCJcclxuICAgIH1cclxuXHJcbiAgXTtcclxuXHJcbiAgJHNjb3BlLmNvbnRhY3QgPSB7XHJcbiAgICBlbWFpbDogXCJcIixcclxuICAgIG5hbWU6IFwiXCIsXHJcbiAgICBwaG9uZTogXCJcIixcclxuICAgIGFib3V0OiBcIlwiLFxyXG4gICAgbWVzc2FnZTogXCJcIlxyXG4gIH07XHJcblxyXG4gICRzY29wZS5zZW5kID0gZnVuY3Rpb24oKSB7XHJcbiAgICAkc2NvcGUuc2VuZGluZyA9IHRydWU7XHJcbiAgICBjb25zb2xlLmxvZygnaGVyZScpO1xyXG4gICAgRW1haWxTdmMuc2VuZCh7XHJcbiAgICAgIFwiZW1haWxcIjogJHNjb3BlLmNvbnRhY3QuZW1haWwsXHJcbiAgICAgIFwibmFtZVwiOiAkc2NvcGUuY29udGFjdC5uYW1lLFxyXG4gICAgICBcInBob25lXCI6ICAkc2NvcGUuY29udGFjdC5waG9uZSxcclxuICAgICAgXCJhYm91dFwiOiAkc2NvcGUuY29udGFjdC5hYm91dCxcclxuICAgICAgXCJtZXNzYWdlXCI6ICRzY29wZS5jb250YWN0Lm1lc3NhZ2VcclxuICAgIH0pXHJcbiAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAkc2NvcGUuc2VudCA9IHRydWU7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiU1VDQ0VTUy4gc3RhdHVzPSVkLCB0ZXh0PSVzXCIsIHJlc3BvbnNlLnN0YXR1cywgcmVzcG9uc2UudGV4dCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcclxuICAgIH0sIGZ1bmN0aW9uKGVycikge1xyXG4gICAgICAkc2NvcGUuc2VuZGluZyA9IGZhbHNlO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkZBSUxFRC4gZXJyb3I9XCIsIGVycik7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignRXhwZXJpZW5jZUN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcblxyXG4gICRzY29wZS5nZXRTa2lsbCA9IGZ1bmN0aW9uKHNraWxsQ29kZSkge1xyXG4gICAgaWYgKCEkc2NvcGUuc2tpbGxzKSByZXR1cm47XHJcbiAgICByZXR1cm4gJHNjb3BlLnNraWxscy5maW5kKGZ1bmN0aW9uKHNraWxsKSB7XHJcbiAgICAgIHJldHVybiBza2lsbC5jb2RlID09PSBza2lsbENvZGU7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignSG9iYmllc0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCAkd2luZG93KSB7XHJcblxyXG4gICRzY29wZS5ob2JieVNlbGVjdG9yVmlzaWJsZSA9IGZhbHNlO1xyXG5cclxuICAkLmdldEpTT04oJ2h0dHBzOi8vd3d3LnJlZGRpdC5jb20vdXNlci9iZWxnb2NhbmFkaWFuL2Fib3V0Ly5qc29uJywgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG4gIH0pO1xyXG5cclxuICAkc2NvcGUuc2VsZWN0ZWRIb2JieSA9ICRzY29wZS5ob2JiaWVzWzBdO1xyXG5cclxuICAkc2NvcGUuc2VsZWN0SG9iYnkgPSBmdW5jdGlvbiAoaG9iYnkpIHtcclxuICAgICRzY29wZS5zZWxlY3RlZEhvYmJ5ID0gaG9iYnk7XHJcbiAgICAkc2NvcGUuaG9iYnlTZWxlY3RvclZpc2libGUgPSBmYWxzZTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUuc2hvd0hvYmJ5ID0gZnVuY3Rpb24gKHZhbHVlLCBpbmRleCwgYXJyYXkpIHtcclxuICAgIGlmICghdmFsdWUuaW1hZ2VzKSByZXR1cm4gZmFsc2U7XHJcbiAgICByZXR1cm4gdmFsdWUuaW1hZ2VzLmxlbmd0aCA+IDA7XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignTGVtbWluZ3NDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgR2FtZVN2Yykge1xyXG5cclxuICB2YXIgTEVGVCA9IDA7XHJcbiAgdmFyIFJJR0hUID0gMTtcclxuXHJcbiAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsZW1taW5ncy1wYWdlJyk7XHJcbiAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG4gIHZhciBsZW1taW5nc0ltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgbGVtbWluZ3NJbWFnZS5zcmMgPSAnbGVtbWluZ3MvbGVtbWluZ3MucG5nJztcclxuICB2YXIgbGVtbWluZ3MgPSB7fTtcclxuXHJcbiAgdmFyIGFjdGlvbnMgPSB7XHJcbiAgICB3YWxrOiB7XHJcbiAgICAgIHN0YXJ0OiBbMCwgMF0sXHJcbiAgICAgIGVuZDogWzMyMCwgMjBdLFxyXG4gICAgICBjb2x1bW5zOiA4LFxyXG4gICAgICByb3dzOiAxLFxyXG4gICAgICByZXZlcnNlOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGh1aDoge1xyXG4gICAgICBzdGFydDogWzMyMCwgMF0sXHJcbiAgICAgIGVuZDogWzY0MCwgMjBdLFxyXG4gICAgICBjb2x1bW5zOiA4LFxyXG4gICAgICByb3dzOiAxLFxyXG4gICAgICByZXZlcnNlOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgZmFsbDoge1xyXG4gICAgICBzdGFydDogWzAsIDgwXSxcclxuICAgICAgZW5kOiBbMTYwLCAxMDBdLFxyXG4gICAgICBjb2x1bW5zOiA0LFxyXG4gICAgICByb3dzOiAxLFxyXG4gICAgICByZXZlcnNlOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGZseToge1xyXG4gICAgICBzdGFydDogWzE2MCwgODBdLFxyXG4gICAgICBlbmQ6IFs0ODAsIDExMF0sXHJcbiAgICAgIGNvbHVtbnM6IDgsXHJcbiAgICAgIHJvd3M6IDEsXHJcbiAgICAgIHJldmVyc2U6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgc3RvcDoge1xyXG4gICAgICBzdGFydDogWzAsIDEyMF0sXHJcbiAgICAgIGVuZDogWzY0MCwgMTQwXSxcclxuICAgICAgY29sdW1uczogMTYsXHJcbiAgICAgIHJvd3M6IDEsXHJcbiAgICAgIHJldmVyc2U6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgY2xpbWI6IHtcclxuICAgICAgc3RhcnQ6IFswLCAxNjBdLFxyXG4gICAgICBlbmQ6IFs2NDAsIDE4NV0sXHJcbiAgICAgIGNvbHVtbnM6IDE2LFxyXG4gICAgICByb3dzOiAxLFxyXG4gICAgICByZXZlcnNlOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGJ1aWxkOiB7XHJcbiAgICAgIHN0YXJ0OiBbMCwgMjAwXSxcclxuICAgICAgZW5kOiBbNjQwLCAyMjVdLFxyXG4gICAgICBjb2x1bW5zOiAxNixcclxuICAgICAgcm93czogMSxcclxuICAgICAgcmV2ZXJzZTogZmFsc2VcclxuICAgIH0sXHJcbiAgICBwdW5jaDoge1xyXG4gICAgICBzdGFydDogWzAsIDI0MF0sXHJcbiAgICAgIGVuZDogWzY0MCwgMzAwXSxcclxuICAgICAgY29sdW1uczogMTYsXHJcbiAgICAgIHJvd3M6IDIsXHJcbiAgICAgIHJldmVyc2U6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgZGlnOiB7XHJcbiAgICAgIHN0YXJ0OiBbMCwgMzIwXSxcclxuICAgICAgZW5kOiBbMzIwLCAzNDVdLFxyXG4gICAgICBjb2x1bW5zOiA4LFxyXG4gICAgICByb3dzOiAxLFxyXG4gICAgICByZXZlcnNlOiBmYWxzZVxyXG4gICAgfSxcclxuICB9O1xyXG5cclxuICBmdW5jdGlvbiBMZW1taW5nKGluaXQpIHtcclxuICAgIHRoaXMucG9zaXRpb24gPSBbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGNhbnZhcy53aWR0aCAtIDIwMCkpICsgMTAwLCBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoY2FudmFzLmhlaWdodCAtIDIwMCkpICsgMTAwXTtcclxuICAgIHRoaXMuZGlyZWN0aW9uID0gTWF0aC5yYW5kb20oKSAqIDIgPiAxID8gTEVGVCA6IFJJR0hUO1xyXG4gICAgdGhpcy5hY3QgPSBmdW5jdGlvbihhY3Rpb24pIHtcclxuICAgICAgdGhpcy5hY3Rpb24gPSBhY3Rpb25zW2FjdGlvbl07XHJcbiAgICAgIHRoaXMuY3ljbGUgPSAwO1xyXG4gICAgICB0aGlzLndpZHRoID0gKHRoaXMuYWN0aW9uLmVuZFswXSAtIHRoaXMuYWN0aW9uLnN0YXJ0WzBdKSAvIHRoaXMuYWN0aW9uLmNvbHVtbnM7XHJcbiAgICAgIHRoaXMuaGVpZ2h0ID0gKHRoaXMuYWN0aW9uLmVuZFsxXSAtIHRoaXMuYWN0aW9uLnN0YXJ0WzFdIC0gKDIwICogKHRoaXMuYWN0aW9uLnJvd3MgLSAxKSkpIC8gdGhpcy5hY3Rpb24ucm93cztcclxuICAgICAgdGhpcy5hbmltYXRpb24gPSB0cnVlO1xyXG4gICAgfTtcclxuICAgIHRoaXMuYWN0KGluaXQpO1xyXG4gICAgdGhpcy5tb3ZlID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIGN0eC5zYXZlKCk7XHJcbiAgICAgIGN0eC50cmFuc2xhdGUodGhpcy5wb3NpdGlvblswXSwgdGhpcy5wb3NpdGlvblsxXSk7XHJcbiAgICAgIGN0eC50cmFuc2xhdGUodGhpcy53aWR0aCAvIDIsIHRoaXMuaGVpZ2h0IC8gMik7XHJcbiAgICAgIGlmICh0aGlzLmRpcmVjdGlvbiA9PT0gTEVGVCkge1xyXG4gICAgICAgIGN0eC5zY2FsZSgtMSwgMSk7XHJcbiAgICAgIH1cclxuICAgICAgdmFyIGNvbHVtbiA9IHRoaXMuY3ljbGUgJSB0aGlzLmFjdGlvbi5jb2x1bW5zO1xyXG4gICAgICB2YXIgcm93ID0gTWF0aC5mbG9vcih0aGlzLmN5Y2xlIC8gdGhpcy5hY3Rpb24uY29sdW1ucyk7XHJcbiAgICAgIGN0eC5kcmF3SW1hZ2UobGVtbWluZ3NJbWFnZSwgKHRoaXMud2lkdGggKiBjb2x1bW4pICsgdGhpcy5hY3Rpb24uc3RhcnRbMF0sICgodGhpcy5oZWlnaHQgKyAyMCkgKiByb3cpICsgdGhpcy5hY3Rpb24uc3RhcnRbMV0sIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCAwLCAwLCB0aGlzLndpZHRoICogMiwgdGhpcy5oZWlnaHQgKiAyKTtcclxuICAgICAgY3R4LnJlc3RvcmUoKTtcclxuICAgICAgaWYgKHRoaXMuYWN0aW9uLnJldmVyc2UpIHtcclxuICAgICAgICBpZiAodGhpcy5hbmltYXRpb24pIHtcclxuICAgICAgICAgIHRoaXMuY3ljbGUrKztcclxuICAgICAgICAgIGlmICh0aGlzLmN5Y2xlID49IHRoaXMuYWN0aW9uLmNvbHVtbnMgKiB0aGlzLmFjdGlvbi5yb3dzKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uID0gIXRoaXMuYW5pbWF0aW9uO1xyXG4gICAgICAgICAgICB0aGlzLmN5Y2xlLS07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuY3ljbGUtLTtcclxuICAgICAgICAgIGlmICh0aGlzLmN5Y2xlIDwgMCkge1xyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbiA9ICF0aGlzLmFuaW1hdGlvbjtcclxuICAgICAgICAgICAgdGhpcy5jeWNsZSA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuY3ljbGUrKztcclxuICAgICAgICBpZiAodGhpcy5jeWNsZSA+PSB0aGlzLmFjdGlvbi5jb2x1bW5zICogdGhpcy5hY3Rpb24ucm93cykge1xyXG4gICAgICAgICAgdGhpcy5jeWNsZSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3Bhd25MZW1taW5nKCkge1xyXG4gICAgT2JqZWN0LmtleXMoYWN0aW9ucykuZm9yRWFjaChmdW5jdGlvbihhY3Rpb24pIHtcclxuICAgICAgbGVtbWluZ3NbTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTAwMDAwMDAwKV0gPSBuZXcgTGVtbWluZyhhY3Rpb24pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuXHRmdW5jdGlvbiBpbml0aWFsaXplKCkge1xyXG5cdFx0Ly8gUmVnaXN0ZXIgYW4gZXZlbnQgbGlzdGVuZXIgdG9cclxuXHRcdC8vIGNhbGwgdGhlIHJlc2l6ZUNhbnZhcygpIGZ1bmN0aW9uIGVhY2ggdGltZVxyXG5cdFx0Ly8gdGhlIHdpbmRvdyBpcyByZXNpemVkLlxyXG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHJlc2l6ZUNhbnZhcywgZmFsc2UpO1xyXG5cdFx0Ly8gRHJhdyBjYW52YXMgYm9yZGVyIGZvciB0aGUgZmlyc3QgdGltZS5cclxuXHRcdHJlc2l6ZUNhbnZhcygpO1xyXG5cdH1cclxuXHQvLyBSdW5zIGVhY2ggdGltZSB0aGUgRE9NIHdpbmRvdyByZXNpemUgZXZlbnQgZmlyZXMuXHJcblx0Ly8gUmVzZXRzIHRoZSBjYW52YXMgZGltZW5zaW9ucyB0byBtYXRjaCB3aW5kb3csXHJcblx0Ly8gdGhlbiBkcmF3cyB0aGUgbmV3IGJvcmRlcnMgYWNjb3JkaW5nbHkuXHJcblx0ZnVuY3Rpb24gcmVzaXplQ2FudmFzKCkge1xyXG5cdFx0Y2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XHJcblx0XHRjYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0IC0gKGNhbnZhcy53aWR0aCA8PSA3NjggPyA1MCA6IDEwNSk7XHJcblx0fVxyXG5cclxuXHRpbml0aWFsaXplKCk7XHJcbiAgc3Bhd25MZW1taW5nKCk7XHJcbiAgZHJhdygpO1xyXG5cclxuICBmdW5jdGlvbiBkcmF3KCkge1xyXG4gICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG4gICAgZm9yICh2YXIgaSBpbiBsZW1taW5ncykge1xyXG4gICAgICBsZW1taW5nc1tpXS5tb3ZlKCk7XHJcbiAgICB9XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICBkcmF3KCk7XHJcbiAgICB9LCAxNTApO1xyXG4gIH1cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignTGlzdHNDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJGxvY2F0aW9uLCBDYXRlZ29yaWVzU3ZjKSB7XHJcblxyXG4gICRzY29wZS5zaG93Q2F0ZWdvcnkgPSB0cnVlO1xyXG5cclxuICAkc2NvcGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIENhdGVnb3JpZXNTdmMuZ2V0Q2F0ZWdvcmllcygpXHJcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgJHNjb3BlLmNhdGVnb3JpZXMgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgICAkc2NvcGUudGFza3MgPSBbXTtcclxuICAgICAgZm9yICh2YXIgaSBpbiAkc2NvcGUuY2F0ZWdvcmllcykge1xyXG4gICAgICAgIGZvciAodmFyIGogaW4gJHNjb3BlLmNhdGVnb3JpZXNbaV0udGFza3MpIHtcclxuICAgICAgICAgICRzY29wZS50YXNrcy5wdXNoKHtcclxuICAgICAgICAgICAgXCJjYXRlZ29yeVwiOiAkc2NvcGUuY2F0ZWdvcmllc1tpXS5uYW1lLFxyXG4gICAgICAgICAgICBcInRhc2tcIjogJHNjb3BlLmNhdGVnb3JpZXNbaV0udGFza3Nbal0ubmFtZVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUuc2VsZWN0Q2F0ZWdvcnkgPSBmdW5jdGlvbihjYXRlZ29yeSkge1xyXG4gICAgJHNjb3BlLnNlbGVjdGVkQ2F0ZWdvcnkgPSBjYXRlZ29yeTtcclxuICAgICRzY29wZS5zZWxlY3RlZFRhc2tzID0gW107XHJcbiAgICAkc2NvcGUuc2VsZWN0YWJsZVRhc2tzID0gW107XHJcbiAgICBmb3IgKHZhciBpIGluICRzY29wZS5zZWxlY3RlZENhdGVnb3J5LnRhc2tzKSB7XHJcbiAgICAgICRzY29wZS5zZWxlY3RhYmxlVGFza3MucHVzaCgkc2NvcGUuc2VsZWN0ZWRDYXRlZ29yeS50YXNrc1tpXSk7XHJcbiAgICB9XHJcbiAgICAkc2NvcGUuc2hvd0NhdGVnb3J5ID0gZmFsc2U7XHJcbiAgICAkc2NvcGUuZW50ZXJlZENhdGVnb3J5ID0gJyc7XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLm5ld0NhdGVnb3J5ID0gZnVuY3Rpb24gKGNhdGVnb3J5KSB7XHJcbiAgICB2YXIgZm91bmQgPSBmYWxzZTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJHNjb3BlLmNhdGVnb3JpZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKCRzY29wZS5jYXRlZ29yaWVzW2ldLm5hbWUgPT09IGNhdGVnb3J5KSB7XHJcbiAgICAgICAgJHNjb3BlLnNlbGVjdENhdGVnb3J5KCRzY29wZS5jYXRlZ29yaWVzW2ldKTtcclxuICAgICAgICBmb3VuZCA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmICghZm91bmQpIHtcclxuICAgICAgQ2F0ZWdvcmllc1N2Yy5hZGRDYXRlZ29yeSh7XHJcbiAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5XHJcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGNhdGVnb3J5KSB7XHJcbiAgICAgICAgJHNjb3BlLmluaXQoKTtcclxuICAgICAgICAkc2NvcGUuc2VsZWN0Q2F0ZWdvcnkoY2F0ZWdvcnkpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgICRzY29wZS5lbnRlcmVkQ2F0ZWdvcnkgPSAnJztcclxuICB9O1xyXG5cclxuICAkc2NvcGUubmV3VGFzayA9IGZ1bmN0aW9uICh0YXNrKSB7XHJcbiAgICB2YXIgZm91bmQgPSBmYWxzZTtcclxuICAgIGZvciAodmFyIGkgaW4gJHNjb3BlLnNlbGVjdGVkQ2F0ZWdvcnkudGFza3MpIHtcclxuICAgICAgaWYgKCRzY29wZS5zZWxlY3RlZENhdGVnb3J5LnRhc2tzW2ldLm5hbWUgPT09IHRhc2spIHtcclxuICAgICAgICBmb3VuZCA9IHRydWU7XHJcbiAgICAgICAgJHNjb3BlLnNlbGVjdFRhc2soJHNjb3BlLnNlbGVjdGVkQ2F0ZWdvcnkudGFza3NbaV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoIWZvdW5kKSB7XHJcbiAgICAgIENhdGVnb3JpZXNTdmMuYWRkVGFzaygkc2NvcGUuc2VsZWN0ZWRDYXRlZ29yeS5uYW1lLCB7XHJcbiAgICAgICAgdGFzazogdGFza1xyXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkc2NvcGUuc2VsZWN0ZWRDYXRlZ29yeS50YXNrcy5wdXNoKHsgbmFtZTogdGFzayB9KTtcclxuICAgICAgICAkc2NvcGUuYWRkVGFzaygkc2NvcGUuc2VsZWN0ZWRUYXNrcywgJHNjb3BlLnNlbGVjdGVkQ2F0ZWdvcnkudGFza3NbJHNjb3BlLnNlbGVjdGVkQ2F0ZWdvcnkudGFza3MubGVuZ3RoIC0gMV0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgICRzY29wZS5lbnRlcmVkVGFzayA9ICcnO1xyXG4gIH07XHJcblxyXG4gICRzY29wZS5zZWxlY3RUYXNrID0gZnVuY3Rpb24gKHRhc2spIHtcclxuICAgICRzY29wZS5hZGRUYXNrKCRzY29wZS5zZWxlY3RlZFRhc2tzLCB0YXNrKTtcclxuICAgICRzY29wZS5yZW1vdmVUYXNrKCRzY29wZS5zZWxlY3RhYmxlVGFza3MsIHRhc2spO1xyXG4gICAgJHNjb3BlLmVudGVyZWRUYXNrID0gJyc7XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLnVuc2VsZWN0VGFzayA9IGZ1bmN0aW9uICh0YXNrKSB7XHJcbiAgICAkc2NvcGUuYWRkVGFzaygkc2NvcGUuc2VsZWN0YWJsZVRhc2tzLCB0YXNrKTtcclxuICAgICRzY29wZS5yZW1vdmVUYXNrKCRzY29wZS5zZWxlY3RlZFRhc2tzLCB0YXNrKTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUuYWRkVGFzayA9IGZ1bmN0aW9uKHRhc2tMaXN0LCB0YXNrKSB7XHJcbiAgICB0YXNrTGlzdC5wdXNoKHRhc2spO1xyXG4gIH07XHJcblxyXG4gICRzY29wZS5yZW1vdmVUYXNrID0gZnVuY3Rpb24odGFza0xpc3QsIHRhc2spIHtcclxuICAgIHRhc2tMaXN0LnNwbGljZSh0YXNrTGlzdC5pbmRleE9mKHRhc2spLCAxKTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUuc3RhcnRQcmlvcml0aXppbmcgPSBmdW5jdGlvbigpIHtcclxuICAgIENhdGVnb3JpZXNTdmMuc2V0UHJpb3JpdHlMaXN0KCRzY29wZS5zZWxlY3RlZFRhc2tzKTtcclxuICAgICRsb2NhdGlvbi5wYXRoKCcvcHJpb3JpdGl6ZScpO1xyXG4gIH07XHJcblxyXG4gICRzY29wZS5nZXRRdWVzdGlvbnMgPSBmdW5jdGlvbigpIHtcclxuICAgIGlmICghJHNjb3BlLnNlbGVjdGVkVGFza3MpIHJldHVybiAnJztcclxuICAgIHZhciBjb3VudGVyID0gMDtcclxuICAgIGZvciAodmFyIGkgPSAkc2NvcGUuc2VsZWN0ZWRUYXNrcy5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XHJcbiAgICAgIGNvdW50ZXIgKz0gaTtcclxuICAgIH1cclxuICAgIHJldHVybiBjb3VudGVyO1xyXG4gIH07XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbG9jYXRpb24sIFVzZXJTdmMpIHtcclxuXHJcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgRmlyZWJhc2VVSSBXaWRnZXQgdXNpbmcgRmlyZWJhc2UuXHJcbiAgdmFyIHVpID0gbmV3IGZpcmViYXNldWkuYXV0aC5BdXRoVUkoZmlyZWJhc2UuYXV0aCgpKTtcclxuXHJcbiAgJHNjb3BlLiRvbignbG9nb3V0JywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgIHVpLnJlc2V0KCk7XHJcbiAgICBzdGFydFVJKCk7XHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIHN0YXJ0VUkoKSB7XHJcbiAgICB1aS5zdGFydCgnI2ZpcmViYXNldWktYXV0aC1jb250YWluZXInLCB7XHJcblxyXG4gICAgICBjYWxsYmFja3M6IHtcclxuICAgICAgICBzaWduSW5TdWNjZXNzOiBmdW5jdGlvbihjdXJyZW50VXNlciwgY3JlZGVudGlhbCwgcmVkaXJlY3RVcmwpIHtcclxuICAgICAgICAgIC8vIE5vIHJlZGlyZWN0LlxyXG4gICAgICAgICAgZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLmdldElkVG9rZW4odHJ1ZSkudGhlbihmdW5jdGlvbihpZFRva2VuKSB7XHJcbiAgICAgICAgICAgIFVzZXJTdmMuYXV0aGVudGljYXRlKHtcclxuICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogY3VycmVudFVzZXIuZGlzcGxheU5hbWUsXHJcbiAgICAgICAgICAgICAgZW1haWw6IGN1cnJlbnRVc2VyLmVtYWlsLFxyXG4gICAgICAgICAgICAgIHBob3RvVVJMOiBjdXJyZW50VXNlci5waG90b1VSTCxcclxuICAgICAgICAgICAgICBlbWFpbFZlcmlmaWVkOiBjdXJyZW50VXNlci5lbWFpbFZlcmlmaWVkLFxyXG4gICAgICAgICAgICAgIGlkVG9rZW46IGlkVG9rZW5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICAgICAgICAgICQoJyNtb2RhbC1sb2dpbicpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy8nKTtcclxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICRzY29wZS4kZW1pdCgncG9wdXAnLCB7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTG9naW4gRmFpbGVkJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdhbGVydC1kYW5nZXInXHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyAuLi5cclxuICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XHJcbiAgICAgICAgICAgIC8vIEhhbmRsZSBlcnJvclxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgLy8gc2lnbkluRmFpbHVyZSBjYWxsYmFjayBtdXN0IGJlIHByb3ZpZGVkIHRvIGhhbmRsZSBtZXJnZSBjb25mbGljdHMgd2hpY2hcclxuICAgICAgICAvLyBvY2N1ciB3aGVuIGFuIGV4aXN0aW5nIGNyZWRlbnRpYWwgaXMgbGlua2VkIHRvIGFuIGFub255bW91cyB1c2VyLlxyXG4gICAgICAgIHNpZ25JbkZhaWx1cmU6IGZ1bmN0aW9uKGVycm9yKSB7XHJcbiAgICAgICAgICAvLyBGb3IgbWVyZ2UgY29uZmxpY3RzLCB0aGUgZXJyb3IuY29kZSB3aWxsIGJlXHJcbiAgICAgICAgICAvLyAnZmlyZWJhc2V1aS9hbm9ueW1vdXMtdXBncmFkZS1tZXJnZS1jb25mbGljdCcuXHJcbiAgICAgICAgICBpZiAoZXJyb3IuY29kZSAhPSAnZmlyZWJhc2V1aS9hbm9ueW1vdXMtdXBncmFkZS1tZXJnZS1jb25mbGljdCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gVGhlIGNyZWRlbnRpYWwgdGhlIHVzZXIgdHJpZWQgdG8gc2lnbiBpbiB3aXRoLlxyXG4gICAgICAgICAgdmFyIGNyZWQgPSBlcnJvci5jcmVkZW50aWFsO1xyXG4gICAgICAgICAgLy8gQ29weSBkYXRhIGZyb20gYW5vbnltb3VzIHVzZXIgdG8gcGVybWFuZW50IHVzZXIgYW5kIGRlbGV0ZSBhbm9ueW1vdXNcclxuICAgICAgICAgIC8vIHVzZXIuXHJcbiAgICAgICAgICAvLyAuLi5cclxuICAgICAgICAgIC8vIEZpbmlzaCBzaWduLWluIGFmdGVyIGRhdGEgaXMgY29waWVkLlxyXG4gICAgICAgICAgcmV0dXJuIGZpcmViYXNlLmF1dGgoKS5zaWduSW5XaXRoQ3JlZGVudGlhbChjcmVkKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVpU2hvd246IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgLy8gVGhlIHdpZGdldCBpcyByZW5kZXJlZC5cclxuICAgICAgICAgIC8vIEhpZGUgdGhlIGxvYWRlci5cclxuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2FkZXInKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgc2lnbkluU3VjY2Vzc1VybDogJy9ob21lJyxcclxuICAgICAgc2lnbkluT3B0aW9uczogW1xyXG4gICAgICAgIC8vZmlyZWJhc2UuYXV0aC5FbWFpbEF1dGhQcm92aWRlci5QUk9WSURFUl9JRCxcclxuICAgICAgICBmaXJlYmFzZS5hdXRoLkdvb2dsZUF1dGhQcm92aWRlci5QUk9WSURFUl9JRCxcclxuICAgICAgICBmaXJlYmFzZS5hdXRoLkZhY2Vib29rQXV0aFByb3ZpZGVyLlBST1ZJREVSX0lELFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgLy8gV2lsbCB1c2UgcG9wdXAgZm9yIElEUCBQcm92aWRlcnMgc2lnbi1pbiBmbG93IGluc3RlYWQgb2YgdGhlIGRlZmF1bHQsIHJlZGlyZWN0LlxyXG4gICAgICBzaWduSW5GbG93OiAncG9wdXAnLFxyXG4gICAgICAvLyBPdGhlciBjb25maWcgb3B0aW9ucy4uLlxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzdGFydFVJKCk7XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCAkZmlsdGVyLCBQb3N0c1N2Yykge1xyXG5cclxuICAkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICgkc2NvcGUucG9zdEJvZHkpIHtcclxuICAgICAgUG9zdHNTdmMuY3JlYXRlKHtcclxuICAgICAgICBib2R5OiAkc2NvcGUucG9zdEJvZHlcclxuICAgICAgfSkudGhlbihmdW5jdGlvbiAocG9zdCkge1xyXG4gICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGw7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIFBvc3RzU3ZjLmZldGNoKClcclxuICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICRzY29wZS5wb3N0cyA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgfSk7XHJcblxyXG4gICRzY29wZS4kb24oJ3dzOm5ld19wb3N0JywgZnVuY3Rpb24gKF8sIHBvc3QpIHtcclxuICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICBQb3N0c1N2Yy5nZXRQb3N0KHBvc3QpXHJcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICRzY29wZS5wb3N0cy51bnNoaWZ0KHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignUHJpb3JpdGl6ZUN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbG9jYXRpb24sIENhdGVnb3JpZXNTdmMpIHtcclxuXHJcbiAgJHNjb3BlLnByaW9yaXR5TGlzdCA9IENhdGVnb3JpZXNTdmMuZ2V0UHJpb3JpdHlMaXN0KCk7XHJcblxyXG4gIGlmICghJHNjb3BlLnByaW9yaXR5TGlzdCkge1xyXG4gICAgJGxvY2F0aW9uLnBhdGgoJy9saXN0cycpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAkc2NvcGUuc2VsZWN0ZWRRdWVzdGlvbiA9IDE7XHJcbiAgICAkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gMTtcclxuICAgICRzY29wZS5kb25lID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICAkc2NvcGUubWFrZUNob2ljZSA9IGZ1bmN0aW9uKGNob2ljZSkge1xyXG4gICAgZm9yICh2YXIgaSBpbiAkc2NvcGUucHJpb3JpdHlMaXN0KSB7XHJcbiAgICAgIGlmICgkc2NvcGUucHJpb3JpdHlMaXN0W2ldLmlkID09PSAkc2NvcGUuc2VsZWN0ZWRRdWVzdGlvbikge1xyXG4gICAgICAgICRzY29wZS5wcmlvcml0eUxpc3RbaV0uY2hvaWNlID0gY2hvaWNlID09PSAxID8gJHNjb3BlLnByaW9yaXR5TGlzdFtpXS5maXJzdENob2ljZSA6ICRzY29wZS5wcmlvcml0eUxpc3RbaV0uc2Vjb25kQ2hvaWNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoJHNjb3BlLnNlbGVjdGVkUXVlc3Rpb24gPT09ICRzY29wZS5jdXJyZW50UXVlc3Rpb24pIHtcclxuICAgICAgJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA9ICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPT09ICRzY29wZS5wcmlvcml0eUxpc3QubGVuZ3RoID8gMSA6ICRzY29wZS5jdXJyZW50UXVlc3Rpb24gKyAxO1xyXG4gICAgfVxyXG4gICAgJHNjb3BlLnNlbGVjdGVkUXVlc3Rpb24gPSAkc2NvcGUuY3VycmVudFF1ZXN0aW9uO1xyXG4gICAgdmFyIGZvdW5kID0gZmFsc2U7XHJcbiAgICBmb3IgKGkgaW4gJHNjb3BlLnByaW9yaXR5TGlzdCkge1xyXG4gICAgICBpZiAoJHNjb3BlLnByaW9yaXR5TGlzdFtpXS5jaG9pY2UgPT09ICcnKSB7XHJcbiAgICAgICAgZm91bmQgPSB0cnVlO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoIWZvdW5kKSB7XHJcbiAgICAgICQoJyNwcmlvcml0aXplQ2hvaWNlcycpLmhpZGUoMzAwKTtcclxuICAgICAgJHNjb3BlLmRvbmUgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gICRzY29wZS5nZXRCdXR0b25WYWx1ZSA9IGZ1bmN0aW9uKGNob2ljZSkge1xyXG4gICAgaWYgKCEkc2NvcGUucHJpb3JpdHlMaXN0KSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJHNjb3BlLnByaW9yaXR5TGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoJHNjb3BlLnByaW9yaXR5TGlzdFtpXS5pZCA9PT0gJHNjb3BlLnNlbGVjdGVkUXVlc3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gY2hvaWNlID09PSAxID8gJHNjb3BlLnByaW9yaXR5TGlzdFtpXS5maXJzdENob2ljZSA6ICRzY29wZS5wcmlvcml0eUxpc3RbaV0uc2Vjb25kQ2hvaWNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLnNlbGVjdFF1ZXN0aW9uID0gZnVuY3Rpb24ocXVlc3Rpb24pIHtcclxuICAgICRzY29wZS5zZWxlY3RlZFF1ZXN0aW9uID0gcXVlc3Rpb247XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLmdldEZpbHRlcmVkUHJpb3JpdHlMaXN0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICBpZiAoISRzY29wZS5wcmlvcml0eUxpc3QpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuICRzY29wZS5wcmlvcml0eUxpc3RcclxuICAgICAgLnNvcnQoZnVuY3Rpb24oYSwgYil7IHJldHVybiBhLmlkLWIuaWQ7IH0pXHJcbiAgICAgIC5maWx0ZXIoZnVuY3Rpb24ocXVlc3Rpb24pIHsgcmV0dXJuIHF1ZXN0aW9uLmNob2ljZSAhPT0gJycgfHwgcXVlc3Rpb24uaWQgPT09ICRzY29wZS5jdXJyZW50UXVlc3Rpb247IH0pO1xyXG4gIH07XHJcblxyXG4gICRzY29wZS5nZXRDaG9pY2VzTWFkZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgaWYgKCEkc2NvcGUucHJpb3JpdHlMaXN0KSB7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIHZhciBjaG9pY2VzTWFkZSA9IDA7XHJcbiAgICBmb3IgKHZhciBpIGluICRzY29wZS5wcmlvcml0eUxpc3QpIHtcclxuICAgICAgaWYgKCRzY29wZS5wcmlvcml0eUxpc3RbaV0uY2hvaWNlICE9PSAnJykge1xyXG4gICAgICAgIGNob2ljZXNNYWRlKys7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBjaG9pY2VzTWFkZTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUuZ2V0QnV0dG9uQ2xhc3MgPSBmdW5jdGlvbihjaG9pY2UpIHtcclxuICAgIGlmICghJHNjb3BlLnByaW9yaXR5TGlzdCkge1xyXG4gICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBpIGluICRzY29wZS5wcmlvcml0eUxpc3QpIHtcclxuICAgICAgaWYgKCRzY29wZS5wcmlvcml0eUxpc3RbaV0uaWQgPT09ICRzY29wZS5zZWxlY3RlZFF1ZXN0aW9uKSB7XHJcbiAgICAgICAgaWYgKCRzY29wZS5wcmlvcml0eUxpc3RbaV0uY2hvaWNlID09PSAnJykge1xyXG4gICAgICAgICAgcmV0dXJuICdidG4tcHJpbWFyeSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjaG9pY2UgPT09IDEpIHtcclxuICAgICAgICAgIHJldHVybiAkc2NvcGUucHJpb3JpdHlMaXN0W2ldLmZpcnN0Q2hvaWNlID09PSAkc2NvcGUucHJpb3JpdHlMaXN0W2ldLmNob2ljZSA/ICdidG4tc3VjY2VzcycgOiAnYnRuLWRhbmdlcic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiAkc2NvcGUucHJpb3JpdHlMaXN0W2ldLnNlY29uZENob2ljZSA9PT0gJHNjb3BlLnByaW9yaXR5TGlzdFtpXS5jaG9pY2UgPyAnYnRuLXN1Y2Nlc3MnIDogJ2J0bi1kYW5nZXInO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gICRzY29wZS5zaG93Q2hvaWNlcyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgJCgnI3ByaW9yaXRpemVDaG9pY2VzJykuc2hvdygxMDAwKTtcclxuICAgICQoJyNyZXZpZXdDaG9pY2VzJykuaGlkZSgpO1xyXG4gIH07XHJcblxyXG4gICRzY29wZS5jaGFydENsaWNrID0gZnVuY3Rpb24oIGV2ZW50ICkge1xyXG4gICAgaWYgKCAkc2NvcGUuY2hhcnQgKSB7XHJcbiAgICAgIC8vIERpZmZlcmVudCBtZXRob2RzIGRlcGVuZGluZyBvbiBjaGFydCB0eXBlXHJcbiAgICAgIC8vY29uc29sZS5sb2coICRzY29wZS5jaGFydC5nZXRQb2ludHNBdEV2ZW50KCBldmVudCApICk7IC8vIGZvciBQb2ludHNcclxuICAgICAgY29uc29sZS5sb2coICRzY29wZS5jaGFydC5nZXRTZWdtZW50c0F0RXZlbnQoIGV2ZW50ICkgKTsgLy8gZm9yIFNlZ21lbnRzXHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLnNob3dSZXN1bHRzID0gZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgJHNjb3BlLmRhdGEgPSBbXTtcclxuICAgICRzY29wZS5vcHRpb25zID0ge1xyXG4gICAgICAvLyBTZXRzIHRoZSBjaGFydCB0byBiZSByZXNwb25zaXZlXHJcbiAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcblxyXG4gICAgICAvL0Jvb2xlYW4gLSBXaGV0aGVyIHdlIHNob3VsZCBzaG93IGEgc3Ryb2tlIG9uIGVhY2ggc2VnbWVudFxyXG4gICAgICBzZWdtZW50U2hvd1N0cm9rZSA6IHRydWUsXHJcblxyXG4gICAgICAvL1N0cmluZyAtIFRoZSBjb2xvdXIgb2YgZWFjaCBzZWdtZW50IHN0cm9rZVxyXG4gICAgICBzZWdtZW50U3Ryb2tlQ29sb3IgOiAnI2ZmZicsXHJcblxyXG4gICAgICAvL051bWJlciAtIFRoZSB3aWR0aCBvZiBlYWNoIHNlZ21lbnQgc3Ryb2tlXHJcbiAgICAgIHNlZ21lbnRTdHJva2VXaWR0aCA6IDIsXHJcblxyXG4gICAgICAvL051bWJlciAtIFRoZSBwZXJjZW50YWdlIG9mIHRoZSBjaGFydCB0aGF0IHdlIGN1dCBvdXQgb2YgdGhlIG1pZGRsZVxyXG4gICAgICBwZXJjZW50YWdlSW5uZXJDdXRvdXQgOiAwLCAvLyBUaGlzIGlzIDAgZm9yIFBpZSBjaGFydHNcclxuXHJcbiAgICAgIC8vTnVtYmVyIC0gQW1vdW50IG9mIGFuaW1hdGlvbiBzdGVwc1xyXG4gICAgICBhbmltYXRpb25TdGVwcyA6IDEwMCxcclxuXHJcbiAgICAgIC8vU3RyaW5nIC0gQW5pbWF0aW9uIGVhc2luZyBlZmZlY3RcclxuICAgICAgYW5pbWF0aW9uRWFzaW5nIDogJ2Vhc2VPdXRCb3VuY2UnLFxyXG5cclxuICAgICAgLy9Cb29sZWFuIC0gV2hldGhlciB3ZSBhbmltYXRlIHRoZSByb3RhdGlvbiBvZiB0aGUgRG91Z2hudXRcclxuICAgICAgYW5pbWF0ZVJvdGF0ZSA6IHRydWUsXHJcblxyXG4gICAgICAvL0Jvb2xlYW4gLSBXaGV0aGVyIHdlIGFuaW1hdGUgc2NhbGluZyB0aGUgRG91Z2hudXQgZnJvbSB0aGUgY2VudHJlXHJcbiAgICAgIGFuaW1hdGVTY2FsZSA6IGZhbHNlLFxyXG5cclxuICAgICAgLy9TdHJpbmcgLSBBIGxlZ2VuZCB0ZW1wbGF0ZVxyXG4gICAgICBsZWdlbmRUZW1wbGF0ZSA6ICc8aDMgY2xhc3M9XCJ0Yy1jaGFydC1qcy1sZWdlbmRcIiBzdHlsZT1cInBhZGRpbmc6NXB4XCI+PCUgZm9yICh2YXIgaT0wOyBpPHNlZ21lbnRzLmxlbmd0aDsgaSsrKXslPjxkaXYgY2xhc3M9XCJsYWJlbFwiIHN0eWxlPVwiZmxvYXQ6bGVmdDttYXJnaW46NXB4O2JhY2tncm91bmQtY29sb3I6PCU9c2VnbWVudHNbaV0uZmlsbENvbG9yJT5cIj48JWlmKHNlZ21lbnRzW2ldLmxhYmVsKXslPjwlPXNlZ21lbnRzW2ldLmxhYmVsJT48JX0lPjwvZGl2PjwlfSU+PC9oMz4nXHJcbiAgICB9O1xyXG4gICAgZm9yICh2YXIgaSBpbiBDYXRlZ29yaWVzU3ZjLmNob2ljZXMpIHtcclxuICAgICAgQ2F0ZWdvcmllc1N2Yy5jaG9pY2VzW2ldLnZvdGVzID0gMDtcclxuICAgICAgZm9yICh2YXIgaiBpbiAkc2NvcGUucHJpb3JpdHlMaXN0KSB7XHJcbiAgICAgICAgaWYgKENhdGVnb3JpZXNTdmMuY2hvaWNlc1tpXS5uYW1lID09PSAkc2NvcGUucHJpb3JpdHlMaXN0W2pdLmNob2ljZSkge1xyXG4gICAgICAgICAgQ2F0ZWdvcmllc1N2Yy5jaG9pY2VzW2ldLnZvdGVzKys7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBDYXRlZ29yaWVzU3ZjLmNob2ljZXMuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBhLnZvdGVzIDwgYi52b3RlczsgfSk7XHJcbiAgICBmb3IgKGkgaW4gQ2F0ZWdvcmllc1N2Yy5jaG9pY2VzKSB7XHJcbiAgICAgICRzY29wZS5kYXRhLnB1c2goe1xyXG4gICAgICAgIHZhbHVlOiBDYXRlZ29yaWVzU3ZjLmNob2ljZXNbaV0udm90ZXMsXHJcbiAgICAgICAgbGFiZWw6IENhdGVnb3JpZXNTdmMuY2hvaWNlc1tpXS5uYW1lXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgJCgnI3ByaW9yaXRpemVSZXN1bHQnKS5oaWRlKCk7XHJcbiAgICAkKCcjcHJpb3JpdGl6ZUNob2ljZXMnKS5oaWRlKCk7XHJcbiAgICAkKCcjcHJpb3JpdHlSZXN1bHRzJykuc2hvdygxMDAwKTtcclxuICB9O1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignUHJvZmlsZUN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbG9jYXRpb24sIFVzZXJTdmMpIHtcclxuXHJcbiAgaWYgKCEkc2NvcGUuY3VycmVudFVzZXIpIHtcclxuICAgICRsb2NhdGlvbi5wYXRoKCcvJyk7XHJcbiAgfSBlbHNlIHtcclxuICAgICQoJyNzZXgtaW5kaWNhdG9yJykub2Zmc2V0KHsgbGVmdDogKCRzY29wZS5jdXJyZW50VXNlci5nZW5kZXIuc2V4IC8gMjAwICogJCgnI3NleCcpLndpZHRoKCkpICsgJCgnI3NleCcpLm9mZnNldCgpLmxlZnQgfSk7XHJcbiAgICAkKCcjaWRlbnRpdHktaW5kaWNhdG9yJykub2Zmc2V0KHsgbGVmdDogKCRzY29wZS5jdXJyZW50VXNlci5nZW5kZXIuaWRlbnRpdHkgLyAyMDAgKiAkKCcjaWRlbnRpdHknKS53aWR0aCgpKSArICQoJyNpZGVudGl0eScpLm9mZnNldCgpLmxlZnQgfSk7XHJcbiAgfVxyXG5cclxuICAkc2NvcGUuc2V4ZXMgPSBbXHJcbiAgICAnTWFsZScsXHJcbiAgICAnRnRNIE1hbGUnLFxyXG4gICAgJ0ludGVyc2V4JyxcclxuICAgICdNdEYgRmVtYWxlJyxcclxuICAgICdGZW1hbGUnXHJcbiAgXTtcclxuICAkc2NvcGUuaWRlbnRpdGllcyA9IFtcclxuICAgICdNYW4nLFxyXG4gICAgJ0JpZ2VuZGVyJyxcclxuICAgICdQYW5nZW5kZXInLFxyXG4gICAgJ0FnZW5kZXInLFxyXG4gICAgJ1BvbHlnZW5kZXInLFxyXG4gICAgJ0dlbmRlcmZsdWlkJyxcclxuICAgICdHZW5kZXJxdWVlcicsXHJcbiAgICAnUXVlZXInLFxyXG4gICAgJ1dvbWFuJ1xyXG4gIF07XHJcblxyXG4gICRzY29wZS5kYXRlT3B0aW9ucyA9IHtcclxuICAgIG1heERhdGU6IG5ldyBEYXRlKCksXHJcbiAgICBtaW5EYXRlOiBuZXcgRGF0ZSgxOTAwLCAxLCAxKSxcclxuICAgIGluaXREYXRlOiBuZXcgRGF0ZSgyMDAwLCAxLCAxKSxcclxuICAgIGRhdGVwaWNrZXJNb2RlOiAneWVhcidcclxuICB9O1xyXG5cclxuICAkc2NvcGUuZ2VuZGVyID0gZnVuY3Rpb24oYXJyYXksIHBlcmNlbnRhZ2UpIHtcclxuICAgIHJldHVybiBhcnJheVtNYXRoLnJvdW5kKHBlcmNlbnRhZ2UgLyAyMDAgKiAoYXJyYXkubGVuZ3RoIC0gMSkpXTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUuc3RhcnRTbGlkZXIgPSBmdW5jdGlvbigpIHtcclxuXHJcbiAgfTtcclxuICAkc2NvcGUuZHJhZ1NsaWRlciA9IGZ1bmN0aW9uKGV2ZW50LCB1aSwgdHlwZSkge1xyXG4gICAgJHNjb3BlLmN1cnJlbnRVc2VyLmdlbmRlclt0eXBlXSA9IE1hdGgucm91bmQoKCQoJyMnICsgdHlwZSArICctaW5kaWNhdG9yJykub2Zmc2V0KCkubGVmdCAtICQoJyMnICsgdHlwZSkub2Zmc2V0KCkubGVmdCkgLyAoJCgnIycgKyB0eXBlKS53aWR0aCgpIC0gJCgnIycgKyB0eXBlICsgJy1pbmRpY2F0b3InKS53aWR0aCgpKSAqIDIwMCk7XHJcbiAgICAkc2NvcGUuJGFwcGx5KCk7XHJcbiAgfTtcclxuICAkc2NvcGUuc3RvcFNsaWRlciA9IGZ1bmN0aW9uKCkge1xyXG5cclxuICB9O1xyXG5cclxuICAkc2NvcGUudXNlcm5hbWVUb2dnbGUgPSB0cnVlO1xyXG4gICRzY29wZS5wYXNzd29yZFRvZ2dsZSA9IHRydWU7XHJcblxyXG4gICRzY29wZS50b2dnbGVVc2VybmFtZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgJHNjb3BlLnVzZXJuYW1lVG9nZ2xlID0gISRzY29wZS51c2VybmFtZVRvZ2dsZTtcclxuICAgICRzY29wZS5uZXdVc2VybmFtZSA9ICRzY29wZS5jdXJyZW50VXNlci51c2VybmFtZTtcclxuICB9O1xyXG5cclxuICAkc2NvcGUudG9nZ2xlUGFzc3dvcmQgPSBmdW5jdGlvbigpIHtcclxuICAgICRzY29wZS5uZXdQYXNzd29yZCA9IG51bGw7XHJcbiAgICAkc2NvcGUuY29uZmlybVBhc3N3b3JkID0gbnVsbDtcclxuICAgICRzY29wZS5wYXNzd29yZFRvZ2dsZSA9ICEkc2NvcGUucGFzc3dvcmRUb2dnbGU7XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLmNoZWNrUGFzc3dvcmQgPSBmdW5jdGlvbiAocGFzc3dvcmQpIHtcclxuICAgIGlmIChwYXNzd29yZCkge1xyXG4gICAgICB2YXIgdXNlciA9ICRzY29wZS5jdXJyZW50VXNlci5faWQ7XHJcbiAgICAgIFVzZXJTdmMuY2hlY2tQYXNzd29yZCh1c2VyLCBwYXNzd29yZClcclxuICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgJHNjb3BlLnRvZ2dsZVBhc3N3b3JkKCk7XHJcbiAgICAgIH0sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgb3JpZ2luYWxCZyA9ICQoXCIucGFzc3dvcmRcIikuY3NzKFwiYmFja2dyb3VuZENvbG9yXCIpO1xyXG4gICAgICAgICQoXCIucGFzc3dvcmRcIikuYW5pbWF0ZSh7IGJhY2tncm91bmRDb2xvcjogXCIjRkZCNkMxXCIgfSwgMjAwKS5hbmltYXRlKHsgYmFja2dyb3VuZENvbG9yOiBvcmlnaW5hbEJnIH0sIDIwMCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gICRzY29wZS5jaGFuZ2VQYXNzd29yZCA9IGZ1bmN0aW9uIChvbGRQYXNzd29yZCwgbmV3UGFzc3dvcmQsIGNvbmZpcm1QYXNzd29yZCkge1xyXG4gICAgaWYgKG5ld1Bhc3N3b3JkKSB7XHJcbiAgICAgIGlmIChuZXdQYXNzd29yZCA9PSBjb25maXJtUGFzc3dvcmQpIHtcclxuICAgICAgICB2YXIgdXNlciA9ICRzY29wZS5jdXJyZW50VXNlci5faWQ7XHJcbiAgICAgICAgVXNlclN2Yy5jaGFuZ2VQYXNzd29yZCh1c2VyLCBvbGRQYXNzd29yZCwgbmV3UGFzc3dvcmQpXHJcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ3BvcHVwJywge1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnUGFzc3dvcmQgQ2hhbmdlZCcsXHJcbiAgICAgICAgICAgIHR5cGU6ICdhbGVydC1zdWNjZXNzJ1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICAkc2NvcGUub2xkUGFzc3dvcmQgPSBudWxsO1xyXG4gICAgICAgICAgJHNjb3BlLnRvZ2dsZVBhc3N3b3JkKCk7XHJcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdwb3B1cCcsIHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ1Bhc3N3b3JkIENoYW5nZSBGYWlsZWQnLFxyXG4gICAgICAgICAgICB0eXBlOiAnYWxlcnQtZGFuZ2VyJ1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdmFyIG9yaWdpbmFsQmcgPSAkKFwiLnBhc3N3b3JkXCIpLmNzcyhcImJhY2tncm91bmRDb2xvclwiKTtcclxuICAgICAgICAkKFwiLnBhc3N3b3JkXCIpLmFuaW1hdGUoeyBiYWNrZ3JvdW5kQ29sb3I6IFwiI0ZGQjZDMVwiIH0sIDIwMCkuYW5pbWF0ZSh7IGJhY2tncm91bmRDb2xvcjogb3JpZ2luYWxCZyB9LCAyMDApO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgJHNjb3BlLmNoYW5nZVVzZXJuYW1lID0gZnVuY3Rpb24gKHVzZXJuYW1lKSB7XHJcbiAgICAkc2NvcGUuJGVtaXQoJ2xvYWRpbmcnKTtcclxuICAgIFVzZXJTdmMuY2hhbmdlVXNlcm5hbWUoJHNjb3BlLmN1cnJlbnRVc2VyLl9pZCwgdXNlcm5hbWUpXHJcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgJHNjb3BlLiRlbWl0KCd1cGRhdGUnLCByZXNwb25zZS5kYXRhKTtcclxuICAgIH0sIGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICRzY29wZS4kZW1pdCgncG9wdXAnLCB7XHJcbiAgICAgICAgbWVzc2FnZTogdXNlcm5hbWUgKyAnIGFscmVhZHkgaW4gdXNlJyxcclxuICAgICAgICB0eXBlOiAnYWxlcnQtZGFuZ2VyJ1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gICRzY29wZS51cGRhdGVVc2VyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCRzY29wZS5jdXJyZW50VXNlcikgeyAgXHJcbiAgICAgICRzY29wZS4kZW1pdCgnbG9hZGluZycpO1xyXG4gICAgICBVc2VyU3ZjLnVwZGF0ZVVzZXIoJHNjb3BlLmN1cnJlbnRVc2VyKVxyXG4gICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ3VwZGF0ZScsIHJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuXHJcbiAgJHNjb3BlLiR3YXRjaCgnY3VycmVudFVzZXIuZmxhZ3MubGVuZ3RoJywgZnVuY3Rpb24obGVuZ3RoKSB7XHJcbiAgICAkc2NvcGUudXBkYXRlVXNlcigpO1xyXG4gIH0pO1xyXG5cclxuICAkc2NvcGUubG9hZENvdW50cmllcyA9IGZ1bmN0aW9uKCRxdWVyeSkge1xyXG4gICAgdmFyIGNvdW50cmllcyA9IFtcclxuICAgICAgeyBcIm5hbWVcIjogXCJBbmRvcnJhXCIsIFwiZmxhZ1wiOiBcImZsYWctYWRcIiwgXCJ0aWRiaXRcIjogXCJcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlVuaXRlZCBBcmFiIEVtaXJhdGVzXCIsIFwiZmxhZ1wiOiBcImZsYWctYWVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkFmZ2hhbmlzdGFuXCIsIFwiZmxhZ1wiOiBcImZsYWctYWZcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkFudGlndWEgYW5kIEJhcmJ1ZGFcIiwgXCJmbGFnXCI6IFwiZmxhZy1hZ1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQW5ndWlsbGFcIiwgXCJmbGFnXCI6IFwiZmxhZy1haVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQWxiYW5pYVwiLCBcImZsYWdcIjogXCJmbGFnLWFsXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJBcm1lbmlhXCIsIFwiZmxhZ1wiOiBcImZsYWctYW1cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkFuZ29sYVwiLCBcImZsYWdcIjogXCJmbGFnLWFvXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJBbnRhcmN0aWNhXCIsIFwiZmxhZ1wiOiBcImZsYWctYXFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkFyZ2VudGluYVwiLCBcImZsYWdcIjogXCJmbGFnLWFyXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJBbWVyaWNhbiBTb21vYVwiLCBcImZsYWdcIjogXCJmbGFnLWFzXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJBdXN0cmlhXCIsIFwiZmxhZ1wiOiBcImZsYWctYXRcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkF1c3RyYWxpYVwiLCBcImZsYWdcIjogXCJmbGFnLWF1XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJBcnViYVwiLCBcImZsYWdcIjogXCJmbGFnLWF3XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCLDhWxhbmQgSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLWF4XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJBemVyYmFpamFuXCIsIFwiZmxhZ1wiOiBcImZsYWctYXpcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkJvc25pYSBhbmQgSGVyemVnb3ZpbmFcIiwgXCJmbGFnXCI6IFwiZmxhZy1iYVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQmFyYmFkb3NcIiwgXCJmbGFnXCI6IFwiZmxhZy1iYlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQmFuZ2xhZGVzaFwiLCBcImZsYWdcIjogXCJmbGFnLWJkXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJCZWxnaXVtXCIsIFwiZmxhZ1wiOiBcImZsYWctYmVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkJ1cmtpbmEgRmFzb1wiLCBcImZsYWdcIjogXCJmbGFnLWJmXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJCdWxnYXJpYVwiLCBcImZsYWdcIjogXCJmbGFnLWJnXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJCYWhyYWluXCIsIFwiZmxhZ1wiOiBcImZsYWctYmhcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkJ1cnVuZGlcIiwgXCJmbGFnXCI6IFwiZmxhZy1iaVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQmVuaW5cIiwgXCJmbGFnXCI6IFwiZmxhZy1ialwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2FpbnQgQmFydGjDqWxlbXlcIiwgXCJmbGFnXCI6IFwiZmxhZy1ibFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQmVybXVkYVwiLCBcImZsYWdcIjogXCJmbGFnLWJtXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJCcnVuZWkgXCIsIFwiZmxhZ1wiOiBcImZsYWctYm5cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkJvbGl2aWEsIFBsdXJpbmF0aW9uYWwgU3RhdGUgb2ZcIiwgXCJmbGFnXCI6IFwiZmxhZy1ib1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQm9uYWlyZSwgU2ludCBFdXN0YXRpdXMgYW5kIFNhYmFcIiwgXCJmbGFnXCI6IFwiZmxhZy1icVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQnJhemlsXCIsIFwiZmxhZ1wiOiBcImZsYWctYnJcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkJhaGFtYXNcIiwgXCJmbGFnXCI6IFwiZmxhZy1ic1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQmh1dGFuXCIsIFwiZmxhZ1wiOiBcImZsYWctYnRcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkJvdXZldCBJc2xhbmRcIiwgXCJmbGFnXCI6IFwiZmxhZy1idlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQm90c3dhbmFcIiwgXCJmbGFnXCI6IFwiZmxhZy1id1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQmVsYXJ1c1wiLCBcImZsYWdcIjogXCJmbGFnLWJ5XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJCZWxpemVcIiwgXCJmbGFnXCI6IFwiZmxhZy1ielwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQ2FuYWRhXCIsIFwiZmxhZ1wiOiBcImZsYWctY2FcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkNvY29zIChLZWVsaW5nKSBJc2xhbmRzXCIsIFwiZmxhZ1wiOiBcImZsYWctY2NcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkNvbmdvLCB0aGUgRGVtb2NyYXRpYyBSZXB1YmxpYyBvZiB0aGVcIiwgXCJmbGFnXCI6IFwiZmxhZy1jZFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQ2VudHJhbCBBZnJpY2FuIFJlcHVibGljXCIsIFwiZmxhZ1wiOiBcImZsYWctY2ZcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkNvbmdvXCIsIFwiZmxhZ1wiOiBcImZsYWctY2dcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlN3aXR6ZXJsYW5kXCIsIFwiZmxhZ1wiOiBcImZsYWctY2hcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkPDtHRlIGQnSXZvaXJlXCIsIFwiZmxhZ1wiOiBcImZsYWctY2lcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkNvb2sgSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLWNrXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDaGlsZVwiLCBcImZsYWdcIjogXCJmbGFnLWNsXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDYW1lcm9vblwiLCBcImZsYWdcIjogXCJmbGFnLWNtXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDaGluYVwiLCBcImZsYWdcIjogXCJmbGFnLWNuXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDb2xvbWJpYVwiLCBcImZsYWdcIjogXCJmbGFnLWNvXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDb3N0YSBSaWNhXCIsIFwiZmxhZ1wiOiBcImZsYWctY3JcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkN1YmFcIiwgXCJmbGFnXCI6IFwiZmxhZy1jdVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQ2FibyBWZXJkZVwiLCBcImZsYWdcIjogXCJmbGFnLWN2XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDdXJhw6dhb1wiLCBcImZsYWdcIjogXCJmbGFnLWN3XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDaHJpc3RtYXMgSXNsYW5kXCIsIFwiZmxhZ1wiOiBcImZsYWctY3hcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkN5cHJ1c1wiLCBcImZsYWdcIjogXCJmbGFnLWN5XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDemVjaCBSZXB1YmxpY1wiLCBcImZsYWdcIjogXCJmbGFnLWN6XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJHZXJtYW55XCIsIFwiZmxhZ1wiOiBcImZsYWctZGVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkRqaWJvdXRpXCIsIFwiZmxhZ1wiOiBcImZsYWctZGpcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkRlbm1hcmtcIiwgXCJmbGFnXCI6IFwiZmxhZy1ka1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRG9taW5pY2FcIiwgXCJmbGFnXCI6IFwiZmxhZy1kbVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRG9taW5pY2FuIFJlcHVibGljXCIsIFwiZmxhZ1wiOiBcImZsYWctZG9cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkFsZ2VyaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1kelwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRWN1YWRvclwiLCBcImZsYWdcIjogXCJmbGFnLWVjXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJFc3RvbmlhXCIsIFwiZmxhZ1wiOiBcImZsYWctZWVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkVneXB0XCIsIFwiZmxhZ1wiOiBcImZsYWctZWdcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIldlc3Rlcm4gU2FoYXJhXCIsIFwiZmxhZ1wiOiBcImZsYWctZWhcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkVyaXRyZWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1lclwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU3BhaW5cIiwgXCJmbGFnXCI6IFwiZmxhZy1lc1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRXRoaW9waWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1ldFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRmlubGFuZFwiLCBcImZsYWdcIjogXCJmbGFnLWZpXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJGaWppXCIsIFwiZmxhZ1wiOiBcImZsYWctZmpcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkZhbGtsYW5kIElzbGFuZHMgKE1hbHZpbmFzKVwiLCBcImZsYWdcIjogXCJmbGFnLWZrXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNaWNyb25lc2lhLCBGZWRlcmF0ZWQgU3RhdGVzIG9mXCIsIFwiZmxhZ1wiOiBcImZsYWctZm1cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkZhcm9lIElzbGFuZHNcIiwgXCJmbGFnXCI6IFwiZmxhZy1mb1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRnJhbmNlXCIsIFwiZmxhZ1wiOiBcImZsYWctZnJcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkdhYm9uXCIsIFwiZmxhZ1wiOiBcImZsYWctZ2FcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlVuaXRlZCBLaW5nZG9tIG9mIEdyZWF0IEJyaXRhaW4gYW5kIE5vcnRoZXJuIElyZWxhbmRcIiwgXCJmbGFnXCI6IFwiZmxhZy1nYlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR3JlbmFkYVwiLCBcImZsYWdcIjogXCJmbGFnLWdkXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJHZW9yZ2lhXCIsIFwiZmxhZ1wiOiBcImZsYWctZ2VcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkZyZW5jaCBHdWlhbmFcIiwgXCJmbGFnXCI6IFwiZmxhZy1nZlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR3Vlcm5zZXlcIiwgXCJmbGFnXCI6IFwiZmxhZy1nZ1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR2hhbmFcIiwgXCJmbGFnXCI6IFwiZmxhZy1naFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR2licmFsdGFyXCIsIFwiZmxhZ1wiOiBcImZsYWctZ2lcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkdyZWVubGFuZFwiLCBcImZsYWdcIjogXCJmbGFnLWdsXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJHYW1iaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1nbVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR3VpbmVhXCIsIFwiZmxhZ1wiOiBcImZsYWctZ25cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkd1YWRlbG91cGVcIiwgXCJmbGFnXCI6IFwiZmxhZy1ncFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiRXF1YXRvcmlhbCBHdWluZWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1ncVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR3JlZWNlXCIsIFwiZmxhZ1wiOiBcImZsYWctZ3JcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNvdXRoIEdlb3JnaWEgYW5kIHRoZSBTb3V0aCBTYW5kd2ljaCBJc2xhbmRzXCIsIFwiZmxhZ1wiOiBcImZsYWctZ3NcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkd1YXRlbWFsYVwiLCBcImZsYWdcIjogXCJmbGFnLWd0XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJHdWFtXCIsIFwiZmxhZ1wiOiBcImZsYWctZ3VcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkd1aW5lYS1CaXNzYXVcIiwgXCJmbGFnXCI6IFwiZmxhZy1nd1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiR3V5YW5hXCIsIFwiZmxhZ1wiOiBcImZsYWctZ3lcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkhvbmcgS29uZ1wiLCBcImZsYWdcIjogXCJmbGFnLWhrXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJIZWFyZCBJc2xhbmQgYW5kIE1jRG9uYWxkIElzbGFuZHNcIiwgXCJmbGFnXCI6IFwiZmxhZy1obVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiSG9uZHVyYXNcIiwgXCJmbGFnXCI6IFwiZmxhZy1oblwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQ3JvYXRpYVwiLCBcImZsYWdcIjogXCJmbGFnLWhyXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJIYWl0aVwiLCBcImZsYWdcIjogXCJmbGFnLWh0XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJIdW5nYXJ5XCIsIFwiZmxhZ1wiOiBcImZsYWctaHVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkluZG9uZXNpYVwiLCBcImZsYWdcIjogXCJmbGFnLWlkXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJJcmVsYW5kXCIsIFwiZmxhZ1wiOiBcImZsYWctaWVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIklzcmFlbFwiLCBcImZsYWdcIjogXCJmbGFnLWlsXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJJc2xlIG9mIE1hblwiLCBcImZsYWdcIjogXCJmbGFnLWltXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJJbmRpYVwiLCBcImZsYWdcIjogXCJmbGFnLWluXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJCcml0aXNoIEluZGlhbiBPY2VhbiBUZXJyaXRvcnlcIiwgXCJmbGFnXCI6IFwiZmxhZy1pb1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiSXJhcVwiLCBcImZsYWdcIjogXCJmbGFnLWlxXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJJcmFuLCBJc2xhbWljIFJlcHVibGljIG9mXCIsIFwiZmxhZ1wiOiBcImZsYWctaXJcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkljZWxhbmRcIiwgXCJmbGFnXCI6IFwiZmxhZy1pc1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiSXRhbHlcIiwgXCJmbGFnXCI6IFwiZmxhZy1pdFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiSmVyc2V5XCIsIFwiZmxhZ1wiOiBcImZsYWctamVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkphbWFpY2FcIiwgXCJmbGFnXCI6IFwiZmxhZy1qbVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiSm9yZGFuXCIsIFwiZmxhZ1wiOiBcImZsYWctam9cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkphcGFuXCIsIFwiZmxhZ1wiOiBcImZsYWctanBcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIktlbnlhXCIsIFwiZmxhZ1wiOiBcImZsYWcta2VcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkt5cmd5enN0YW5cIiwgXCJmbGFnXCI6IFwiZmxhZy1rZ1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQ2FtYm9kaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1raFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiS2lyaWJhdGlcIiwgXCJmbGFnXCI6IFwiZmxhZy1raVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiQ29tb3Jvc1wiLCBcImZsYWdcIjogXCJmbGFnLWttXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTYWludCBLaXR0cyBhbmQgTmV2aXNcIiwgXCJmbGFnXCI6IFwiZmxhZy1rblwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiS29yZWEsIERlbW9jcmF0aWMgUGVvcGxlJ3MgUmVwdWJsaWMgb2ZcIiwgXCJmbGFnXCI6IFwiZmxhZy1rcFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiS29yZWEsIFJlcHVibGljIG9mXCIsIFwiZmxhZ1wiOiBcImZsYWcta3JcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkt1d2FpdFwiLCBcImZsYWdcIjogXCJmbGFnLWt3XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDYXltYW4gSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLWt5XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJLYXpha2hzdGFuXCIsIFwiZmxhZ1wiOiBcImZsYWcta3pcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkxhbyBQZW9wbGUncyBEZW1vY3JhdGljIFJlcHVibGljXCIsIFwiZmxhZ1wiOiBcImZsYWctbGFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkxlYmFub25cIiwgXCJmbGFnXCI6IFwiZmxhZy1sYlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2FpbnQgTHVjaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1sY1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTGllY2h0ZW5zdGVpblwiLCBcImZsYWdcIjogXCJmbGFnLWxpXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTcmkgTGFua2FcIiwgXCJmbGFnXCI6IFwiZmxhZy1sa1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTGliZXJpYVwiLCBcImZsYWdcIjogXCJmbGFnLWxyXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJMZXNvdGhvXCIsIFwiZmxhZ1wiOiBcImZsYWctbHNcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkxpdGh1YW5pYVwiLCBcImZsYWdcIjogXCJmbGFnLWx0XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJMdXhlbWJvdXJnXCIsIFwiZmxhZ1wiOiBcImZsYWctbHVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkxhdHZpYVwiLCBcImZsYWdcIjogXCJmbGFnLWx2XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJMaWJ5YVwiLCBcImZsYWdcIjogXCJmbGFnLWx5XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNb3JvY2NvXCIsIFwiZmxhZ1wiOiBcImZsYWctbWFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1vbmFjb1wiLCBcImZsYWdcIjogXCJmbGFnLW1jXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNb2xkb3ZhLCBSZXB1YmxpYyBvZlwiLCBcImZsYWdcIjogXCJmbGFnLW1kXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNb250ZW5lZ3JvXCIsIFwiZmxhZ1wiOiBcImZsYWctbWVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNhaW50IE1hcnRpbiAoRnJlbmNoIHBhcnQpXCIsIFwiZmxhZ1wiOiBcImZsYWctbWZcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1hZGFnYXNjYXJcIiwgXCJmbGFnXCI6IFwiZmxhZy1tZ1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTWFyc2hhbGwgSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLW1oXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNYWNlZG9uaWEsIHRoZSBmb3JtZXIgWXVnb3NsYXYgUmVwdWJsaWMgb2ZcIiwgXCJmbGFnXCI6IFwiZmxhZy1ta1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTWFsaVwiLCBcImZsYWdcIjogXCJmbGFnLW1sXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNeWFubWFyXCIsIFwiZmxhZ1wiOiBcImZsYWctbW1cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1vbmdvbGlhXCIsIFwiZmxhZ1wiOiBcImZsYWctbW5cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1hY2FvXCIsIFwiZmxhZ1wiOiBcImZsYWctbW9cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk5vcnRoZXJuIE1hcmlhbmEgSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLW1wXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNYXJ0aW5pcXVlXCIsIFwiZmxhZ1wiOiBcImZsYWctbXFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1hdXJpdGFuaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1tclwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTW9udHNlcnJhdFwiLCBcImZsYWdcIjogXCJmbGFnLW1zXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNYWx0YVwiLCBcImZsYWdcIjogXCJmbGFnLW10XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNYXVyaXRpdXNcIiwgXCJmbGFnXCI6IFwiZmxhZy1tdVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTWFsZGl2ZXNcIiwgXCJmbGFnXCI6IFwiZmxhZy1tdlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTWFsYXdpXCIsIFwiZmxhZ1wiOiBcImZsYWctbXdcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1leGljb1wiLCBcImZsYWdcIjogXCJmbGFnLW14XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNYWxheXNpYVwiLCBcImZsYWdcIjogXCJmbGFnLW15XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJNb3phbWJpcXVlXCIsIFwiZmxhZ1wiOiBcImZsYWctbXpcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk5hbWliaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1uYVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTmV3IENhbGVkb25pYVwiLCBcImZsYWdcIjogXCJmbGFnLW5jXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJOaWdlclwiLCBcImZsYWdcIjogXCJmbGFnLW5lXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJOb3Jmb2xrIElzbGFuZFwiLCBcImZsYWdcIjogXCJmbGFnLW5mXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJOaWdlcmlhXCIsIFwiZmxhZ1wiOiBcImZsYWctbmdcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk5pY2FyYWd1YVwiLCBcImZsYWdcIjogXCJmbGFnLW5pXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJOZXRoZXJsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLW5sXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJOb3J3YXlcIiwgXCJmbGFnXCI6IFwiZmxhZy1ub1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTmVwYWxcIiwgXCJmbGFnXCI6IFwiZmxhZy1ucFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTmF1cnVcIiwgXCJmbGFnXCI6IFwiZmxhZy1uclwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiTml1ZVwiLCBcImZsYWdcIjogXCJmbGFnLW51XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJOZXcgWmVhbGFuZFwiLCBcImZsYWdcIjogXCJmbGFnLW56XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJPbWFuXCIsIFwiZmxhZ1wiOiBcImZsYWctb21cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlBhbmFtYVwiLCBcImZsYWdcIjogXCJmbGFnLXBhXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQZXJ1XCIsIFwiZmxhZ1wiOiBcImZsYWctcGVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkZyZW5jaCBQb2x5bmVzaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1wZlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiUGFwdWEgTmV3IEd1aW5lYVwiLCBcImZsYWdcIjogXCJmbGFnLXBnXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQaGlsaXBwaW5lc1wiLCBcImZsYWdcIjogXCJmbGFnLXBoXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQYWtpc3RhblwiLCBcImZsYWdcIjogXCJmbGFnLXBrXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQb2xhbmRcIiwgXCJmbGFnXCI6IFwiZmxhZy1wbFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2FpbnQgUGllcnJlIGFuZCBNaXF1ZWxvblwiLCBcImZsYWdcIjogXCJmbGFnLXBtXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQaXRjYWlyblwiLCBcImZsYWdcIjogXCJmbGFnLXBuXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQdWVydG8gUmljb1wiLCBcImZsYWdcIjogXCJmbGFnLXByXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJQYWxlc3RpbmUsIFN0YXRlIG9mXCIsIFwiZmxhZ1wiOiBcImZsYWctcHNcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlBvcnR1Z2FsXCIsIFwiZmxhZ1wiOiBcImZsYWctcHRcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlBhbGF1XCIsIFwiZmxhZ1wiOiBcImZsYWctcHdcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlBhcmFndWF5XCIsIFwiZmxhZ1wiOiBcImZsYWctcHlcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlFhdGFyXCIsIFwiZmxhZ1wiOiBcImZsYWctcWFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlLDqXVuaW9uXCIsIFwiZmxhZ1wiOiBcImZsYWctcmVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlJvbWFuaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1yb1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2VyYmlhXCIsIFwiZmxhZ1wiOiBcImZsYWctcnNcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlJ1c3NpYW4gRmVkZXJhdGlvblwiLCBcImZsYWdcIjogXCJmbGFnLXJ1XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJSd2FuZGFcIiwgXCJmbGFnXCI6IFwiZmxhZy1yd1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2F1ZGkgQXJhYmlhXCIsIFwiZmxhZ1wiOiBcImZsYWctc2FcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNvbG9tb24gSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLXNiXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTZXljaGVsbGVzXCIsIFwiZmxhZ1wiOiBcImZsYWctc2NcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlN1ZGFuXCIsIFwiZmxhZ1wiOiBcImZsYWctc2RcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlN3ZWRlblwiLCBcImZsYWdcIjogXCJmbGFnLXNlXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTaW5nYXBvcmVcIiwgXCJmbGFnXCI6IFwiZmxhZy1zZ1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2FpbnQgSGVsZW5hLCBBc2NlbnNpb24gYW5kIFRyaXN0YW4gZGEgQ3VuaGFcIiwgXCJmbGFnXCI6IFwiZmxhZy1zaFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2xvdmVuaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1zaVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU3ZhbGJhcmQgYW5kIEphbiBNYXllblwiLCBcImZsYWdcIjogXCJmbGFnLXNqXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTbG92YWtpYVwiLCBcImZsYWdcIjogXCJmbGFnLXNrXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTaWVycmEgTGVvbmVcIiwgXCJmbGFnXCI6IFwiZmxhZy1zbFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2FuIE1hcmlub1wiLCBcImZsYWdcIjogXCJmbGFnLXNtXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJTZW5lZ2FsXCIsIFwiZmxhZ1wiOiBcImZsYWctc25cIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNvbWFsaWFcIiwgXCJmbGFnXCI6IFwiZmxhZy1zb1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU3VyaW5hbWVcIiwgXCJmbGFnXCI6IFwiZmxhZy1zclwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU291dGggU3VkYW5cIiwgXCJmbGFnXCI6IFwiZmxhZy1zc1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU2FvIFRvbWUgYW5kIFByaW5jaXBlXCIsIFwiZmxhZ1wiOiBcImZsYWctc3RcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkVsIFNhbHZhZG9yXCIsIFwiZmxhZ1wiOiBcImZsYWctc3ZcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNpbnQgTWFhcnRlbiAoRHV0Y2ggcGFydClcIiwgXCJmbGFnXCI6IFwiZmxhZy1zeFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU3lyaWFuIEFyYWIgUmVwdWJsaWNcIiwgXCJmbGFnXCI6IFwiZmxhZy1zeVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU3dhemlsYW5kXCIsIFwiZmxhZ1wiOiBcImZsYWctc3pcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlR1cmtzIGFuZCBDYWljb3MgSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLXRjXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJDaGFkXCIsIFwiZmxhZ1wiOiBcImZsYWctdGRcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkZyZW5jaCBTb3V0aGVybiBUZXJyaXRvcmllc1wiLCBcImZsYWdcIjogXCJmbGFnLXRmXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUb2dvXCIsIFwiZmxhZ1wiOiBcImZsYWctdGdcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlRoYWlsYW5kXCIsIFwiZmxhZ1wiOiBcImZsYWctdGhcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlRhamlraXN0YW5cIiwgXCJmbGFnXCI6IFwiZmxhZy10alwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiVG9rZWxhdVwiLCBcImZsYWdcIjogXCJmbGFnLXRrXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUaW1vci1MZXN0ZVwiLCBcImZsYWdcIjogXCJmbGFnLXRsXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUdXJrbWVuaXN0YW5cIiwgXCJmbGFnXCI6IFwiZmxhZy10bVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiVHVuaXNpYVwiLCBcImZsYWdcIjogXCJmbGFnLXRuXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUb25nYVwiLCBcImZsYWdcIjogXCJmbGFnLXRvXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUdXJrZXlcIiwgXCJmbGFnXCI6IFwiZmxhZy10clwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiVHJpbmlkYWQgYW5kIFRvYmFnb1wiLCBcImZsYWdcIjogXCJmbGFnLXR0XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUdXZhbHVcIiwgXCJmbGFnXCI6IFwiZmxhZy10dlwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiVGFpd2FuLCBQcm92aW5jZSBvZiBDaGluYVwiLCBcImZsYWdcIjogXCJmbGFnLXR3XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJUYW56YW5pYSwgVW5pdGVkIFJlcHVibGljIG9mXCIsIFwiZmxhZ1wiOiBcImZsYWctdHpcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlVrcmFpbmVcIiwgXCJmbGFnXCI6IFwiZmxhZy11YVwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiVWdhbmRhXCIsIFwiZmxhZ1wiOiBcImZsYWctdWdcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlVuaXRlZCBTdGF0ZXMgTWlub3IgT3V0bHlpbmcgSXNsYW5kc1wiLCBcImZsYWdcIjogXCJmbGFnLXVtXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2FcIiwgXCJmbGFnXCI6IFwiZmxhZy11c1wiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiVXJ1Z3VheVwiLCBcImZsYWdcIjogXCJmbGFnLXV5XCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJVemJla2lzdGFuXCIsIFwiZmxhZ1wiOiBcImZsYWctdXpcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIkhvbHkgU2VlXCIsIFwiZmxhZ1wiOiBcImZsYWctdmFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzXCIsIFwiZmxhZ1wiOiBcImZsYWctdmNcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlZlbmV6dWVsYSwgQm9saXZhcmlhbiBSZXB1YmxpYyBvZlwiLCBcImZsYWdcIjogXCJmbGFnLXZlXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJWaXJnaW4gSXNsYW5kcywgQnJpdGlzaFwiLCBcImZsYWdcIjogXCJmbGFnLXZnXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJWaXJnaW4gSXNsYW5kcywgVS5TLlwiLCBcImZsYWdcIjogXCJmbGFnLXZpXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJWaWV0IE5hbVwiLCBcImZsYWdcIjogXCJmbGFnLXZuXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJWYW51YXR1XCIsIFwiZmxhZ1wiOiBcImZsYWctdnVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIldhbGxpcyBhbmQgRnV0dW5hXCIsIFwiZmxhZ1wiOiBcImZsYWctd2ZcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlNhbW9hXCIsIFwiZmxhZ1wiOiBcImZsYWctd3NcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlllbWVuXCIsIFwiZmxhZ1wiOiBcImZsYWcteWVcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIk1heW90dGVcIiwgXCJmbGFnXCI6IFwiZmxhZy15dFwiIH0sXHJcbiAgICAgIHsgXCJuYW1lXCI6IFwiU291dGggQWZyaWNhXCIsIFwiZmxhZ1wiOiBcImZsYWctemFcIiB9LFxyXG4gICAgICB7IFwibmFtZVwiOiBcIlphbWJpYVwiLCBcImZsYWdcIjogXCJmbGFnLXptXCIgfSxcclxuICAgICAgeyBcIm5hbWVcIjogXCJaaW1iYWJ3ZVwiLCBcImZsYWdcIjogXCJmbGFnLXp3XCIgfSxcclxuICAgIF07XHJcbiAgICByZXR1cm4gY291bnRyaWVzLmZpbHRlcihmdW5jdGlvbihjb3VudHJ5KSB7XHJcbiAgICAgIHJldHVybiBjb3VudHJ5Lm5hbWUudG9Mb3dlckNhc2UoKS5pbmRleE9mKCRxdWVyeS50b0xvd2VyQ2FzZSgpKSAhPSAtMTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignU2tpbGxzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsICR3aW5kb3cpIHtcclxuXHJcbiAgJHNjb3BlLnNlbGVjdGVkU2tpbGwgPSAwO1xyXG4gICRzY29wZS5za2lsbHNWaXNpYmxlID0gZmFsc2U7XHJcblxyXG4gICRzY29wZS5sYWJlbHMgPSBbXCJEb3dubG9hZCBTYWxlc1wiLCBcIkluLVN0b3JlIFNhbGVzXCIsIFwiTWFpbC1PcmRlciBTYWxlc1wiXTtcclxuICAkc2NvcGUuZGF0YSA9IFszMDAsIDUwMCwgMTAwXTtcclxuXHJcbiAgJC5nZXRKU09OKCcvc2tpbGxzLmpzb24nLCBmdW5jdGlvbiggZGF0YSApIHtcclxuICAgICRzY29wZS5za2lsbHMgPSBkYXRhLmZpbHRlcihmdW5jdGlvbihza2lsbCkge1xyXG4gICAgICByZXR1cm4gc2tpbGwuZW5hYmxlZDtcclxuICAgIH0pO1xyXG5cclxuICAgICRzY29wZS5zZXRTZWxlY3RlZFNraWxsID0gZnVuY3Rpb24gKHNraWxsKSB7XHJcbiAgICAgICRzY29wZS5zZWxlY3RlZFNraWxsID0gc2tpbGw7XHJcbiAgICAgICRzY29wZS5zZWxlY3RlZFNraWxsLmNoYXJ0T3B0aW9ucyA9IHtcclxuICAgICAgICBjdXRvdXRQZXJjZW50YWdlIDogODAsXHJcbiAgICAgICAgY2lyY3VtZmVyZW5jZTogMiAqIE1hdGguUEksXHJcbiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogdHJ1ZSxcclxuICAgICAgICB0b29sdGlwczoge1xyXG4gICAgICAgICAgZW5hYmxlZDogZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICAgICRzY29wZS5zZWxlY3RlZFNraWxsLmNoYXJ0U3R5bGUgPSB7XHJcbiAgICAgICAgJ2JhY2tncm91bmQtaW1hZ2UnOiAndXJsKC9za2lsbHMvJyArICRzY29wZS5zZWxlY3RlZFNraWxsLmltYWdlICsgJyknLFxyXG4gICAgICAgICdiYWNrZ3JvdW5kLXJlcGVhdCc6ICduby1yZXBlYXQnLFxyXG4gICAgICAgICdiYWNrZ3JvdW5kLXNpemUnOiAnNjAlJyxcclxuICAgICAgICAnYmFja2dyb3VuZC1wb3NpdGlvbic6ICc1MCUgNTAlJ1xyXG4gICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICAkc2NvcGUuc2V0U2VsZWN0ZWRTa2lsbCgkc2NvcGUuc2tpbGxzWzBdKTtcclxuXHJcbiAgICAvKlxyXG4gICAgaGFsZiBjaXJjbGUgc2tpbGwgd2hlZWwgdGhhdCBkaWRuJ3QgdHVybiBvdXQgZ3JlYXRcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGRpc3BsYXk6ICRzY29wZS5za2lsbHNWaXNpYmxlID8gJ2Jsb2NrJyA6ICdub25lJyxcclxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICAgIGxlZnQ6ICRzY29wZS53aGVlbFdpZHRoIC8gMiAqIE1hdGguY29zKGkgKiAoTWF0aC5QSSAvICgkc2NvcGUuc2tpbGxzLmxlbmd0aCAtIDEpKSkgKyAkc2NvcGUud2hlZWxXaWR0aCAvIDIgLSAkc2NvcGUud2hlZWxXaWR0aCAqIDAuMDI1LFxyXG4gICAgICB0b3A6IE1hdGguc2luKGkgKiAoTWF0aC5QSSAvICgkc2NvcGUuc2tpbGxzLmxlbmd0aCAtIDEpKSkgKiAkKCcuc2VsZWN0ZWQtc2tpbGwnKS5oZWlnaHQoKSAqIDIuNSxcclxuICAgICAgd2lkdGg6ICRzY29wZS53aGVlbFdpZHRoICogMC4wNSxcclxuICAgICAgaGVpZ2h0OiAkc2NvcGUud2hlZWxXaWR0aCAqIDAuMDVcclxuICAgIH07XHJcbiAgICAqL1xyXG5cclxuICAgICRzY29wZS4kYXBwbHkoKTtcclxuICB9KTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ1dvcmtvdXRDdHJsJywgZnVuY3Rpb24gKCRzY29wZSkge1xyXG5cclxuICAkc2NvcGUudGltZVJlbWFpbmluZyA9IDA7XHJcbiAgJHNjb3BlLnJlc3QgPSBmYWxzZTtcclxuXHJcbiAgdmFyIGV4ZXJjaXNlcyA9IFtcclxuICAgIHtuYW1lOiAnSnVtcGluZyBKYWNrcycsIHNwbGl0OiBmYWxzZX0sXHJcbiAgICB7bmFtZTogJ1dhbGwgU2l0Jywgc3BsaXQ6IGZhbHNlfSxcclxuICAgIHtuYW1lOiAnUHVzaC1VcCcsIHNwbGl0OiBmYWxzZX0sXHJcbiAgICB7bmFtZTogJ0NydW5jaCcsIHNwbGl0OiBmYWxzZX0sXHJcbiAgICB7bmFtZTogJ1N0ZXAtVXAnLCBzcGxpdDogdHJ1ZX0sXHJcbiAgICB7bmFtZTogJ1NxdWF0Jywgc3BsaXQ6IGZhbHNlfSxcclxuICAgIHtuYW1lOiAnVHJpY2VwcyBEaXAnLCBzcGxpdDogZmFsc2V9LFxyXG4gICAge25hbWU6ICdQbGFuaycsIHNwbGl0OiBmYWxzZX0sXHJcbiAgICB7bmFtZTogJ0hpZ2ggS25lZXMnLCBzcGxpdDogZmFsc2V9LFxyXG4gICAge25hbWU6ICdMdW5nZScsIHNwbGl0OiBmYWxzZX0sXHJcbiAgICB7bmFtZTogJ1B1c2gtVXAgd2l0aCBSb3RhdGlvbicsIHNwbGl0OiBmYWxzZX0sXHJcbiAgICB7bmFtZTogJ1NpZGUgUGxhbmsnLCBzcGxpdDogdHJ1ZX1cclxuICBdO1xyXG5cclxuICAgIHZhciBleGVyY2lzaW5nO1xyXG5cclxuICAkc2NvcGUud29ya291dCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgaWYgKCEkc2NvcGUudGltZVJlbWFpbmluZykge1xyXG4gICAgICAkc2NvcGUudGltZVJlbWFpbmluZyA9IGV4ZXJjaXNlcy5sZW5ndGggKiA0NTtcclxuICAgICAgZXhlcmNpc2luZyA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICRzY29wZS50aW1lUmVtYWluaW5nLS07XHJcbiAgICAgICAgaWYgKCRzY29wZS50aW1lUmVtYWluaW5nID09PSAwKSB7XHJcbiAgICAgICAgICAkc2NvcGUuZXhlcmNpc2UgPSB7bmFtZTogJ0ZpbmlzaGVkISBDb25ncmF0cyEnLCBzcGxpdDogZmFsc2V9O1xyXG4gICAgICAgICAgJHNjb3BlLnRpbWVyID0gJyc7XHJcbiAgICAgICAgICAkc2NvcGUudGltZVJlbWFpbmluZyA9IDA7XHJcbiAgICAgICAgICAkc2NvcGUucmVzdCA9IGZhbHNlO1xyXG4gICAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xyXG4gICAgICAgICAgcmV0dXJuIGNsZWFySW50ZXJ2YWwoZXhlcmNpc2luZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBjdXJyZW50RXhlcmNpc2UgPSBNYXRoLmZsb29yKCRzY29wZS50aW1lUmVtYWluaW5nIC8gNDUpO1xyXG4gICAgICAgIHZhciB0aW1lciA9ICRzY29wZS50aW1lUmVtYWluaW5nIC0gY3VycmVudEV4ZXJjaXNlICogNDU7XHJcbiAgICAgICAgJHNjb3BlLnRpbWVyID0gdGltZXIgPiAzMCA/IHRpbWVyIC0gMzAgOiB0aW1lcjtcclxuICAgICAgICBpZiAodGltZXIgPiAzMCkge1xyXG4gICAgICAgICAgJHNjb3BlLnJlc3QgPSB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkc2NvcGUucmVzdCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkc2NvcGUuZXhlcmNpc2UgPSBleGVyY2lzZXNbZXhlcmNpc2VzLmxlbmd0aCAtIGN1cnJlbnRFeGVyY2lzZSAtIDFdO1xyXG4gICAgICAgICRzY29wZS4kYXBwbHkoKTtcclxuICAgICAgfSwgMTAwMCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjbGVhckludGVydmFsKGV4ZXJjaXNpbmcpO1xyXG4gICAgICAkc2NvcGUudGltZXIgPSAnJztcclxuICAgICAgJHNjb3BlLnRpbWVSZW1haW5pbmcgPSAwO1xyXG4gICAgICAkc2NvcGUucmVzdCA9IGZhbHNlO1xyXG4gICAgICAkc2NvcGUuZXhlcmNpc2UgPSB7bmFtZTogJycsIHNwbGl0OiBmYWxzZX07XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuXHQuZGlyZWN0aXZlKCdoZWFkJywgW1xyXG5cdFx0JyRyb290U2NvcGUnLFxyXG5cdFx0JyRzdGF0ZScsXHJcblx0XHQnJGNvbXBpbGUnLFxyXG5cdFx0JyRpbnRlcnBvbGF0ZScsXHJcblx0XHRmdW5jdGlvbiAoJHJvb3RTY29wZSwgJHN0YXRlLCAkY29tcGlsZSwgJGludGVycG9sYXRlKSB7XHJcblxyXG5cdFx0XHR2YXIgZ2V0U3R5bGUgPSBmdW5jdGlvbiBnZXRTdHlsZSh0ZW1wbGF0ZVN0eWxlVXJsKSB7XHJcblxyXG5cdFx0XHRcdHZhciBzdHlsZSA9IHtcclxuXHRcdFx0XHRcdGhyZWY6IHRlbXBsYXRlU3R5bGVVcmwsXHJcblx0XHRcdFx0XHRyZWw6ICdzdHlsZXNoZWV0J1xyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdGlmIChzdHlsZS5ocmVmLm1hdGNoKC9cXC5sZXNzJC8pKSB7XHJcblx0XHRcdFx0XHRzdHlsZS5yZWwgPSAnc3R5bGVzaGVldC9sZXNzJztcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiBzdHlsZTtcclxuXHJcblx0XHRcdH07XHJcblxyXG5cdFx0XHR2YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24gZ2V0U3R5bGVzKHN0YXRlKSB7XHJcblxyXG5cdFx0XHRcdHZhciBzdGF0ZXMgPSB7fTtcclxuXHJcblx0XHRcdFx0Ly9DaGVjayBzdGF0ZSBmb3Igc3R5bGVzXHJcblx0XHRcdFx0d2hpbGUgKHN0YXRlLm5hbWUgIT09ICcnKSB7XHJcblx0XHRcdFx0XHR2YXIgcGFyZW50ID0gJHN0YXRlLmdldCgnXicsIHN0YXRlKTtcclxuXHJcblx0XHRcdFx0XHQvL0luaXRpYXRlIG91ciB2aWV3IGxpc3RcclxuXHRcdFx0XHRcdGlmICghc3RhdGVzW3BhcmVudC5uYW1lXSkge1xyXG5cdFx0XHRcdFx0XHRzdGF0ZXNbcGFyZW50Lm5hbWVdID0ge307XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly9DaGVjayB0aGUgdGVtcGxhdGVTdHlsZVxyXG5cdFx0XHRcdFx0aWYgKHN0YXRlLnRlbXBsYXRlU3R5bGVVcmwpIHtcclxuXHRcdFx0XHRcdFx0aWYgKCFzdGF0ZXNbcGFyZW50Lm5hbWVdWycnXSkge1xyXG5cdFx0XHRcdFx0XHRcdHN0YXRlc1twYXJlbnQubmFtZV1bJyddID0gZ2V0U3R5bGUoc3RhdGUudGVtcGxhdGVTdHlsZVVybCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvL0NoZWNrIHZpZXdzXHJcblx0XHRcdFx0XHRpZiAoc3RhdGUudmlld3MpIHtcclxuXHRcdFx0XHRcdFx0Xy5mb3JFYWNoKHN0YXRlLnZpZXdzLCBmdW5jdGlvbiAodmlldywga2V5KSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vQ2hlY2sgaWYgd2UgaGF2ZSBhIHN0eWxlXHJcblx0XHRcdFx0XHRcdFx0aWYgKCF2aWV3LnRlbXBsYXRlU3R5bGVVcmwpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vQ2hlY2sgaWYgd2UgYXJlIHRhcmdldGluZyBzb21lIHBhcmVudFxyXG5cdFx0XHRcdFx0XHRcdGlmICgoa2V5ID0ga2V5LnNwbGl0KCdAJykpWzFdKSB7XHJcblx0XHRcdFx0XHRcdFx0XHQvL0NoZWNrIGlmIHdlIGhhdmUgc3R5bGVzIGZvciB0aGF0IHBhcmVudFxyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCFzdGF0ZXNba2V5WzFdXSkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRzdGF0ZXNba2V5WzFdXSA9IHt9O1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vUGxhY2UgdGhlIHN0eWxlIG9uIHNvbWUgcGFyZW50J3Mgdmlld1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCFzdGF0ZXNba2V5WzFdXVtrZXlbMF1dKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHN0YXRlc1trZXlbMV1dW2tleVswXV0gPSBnZXRTdHlsZSh2aWV3LnRlbXBsYXRlU3R5bGVVcmwpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vUGxhY2UgdGhlIHN0eWxlIG9uIG91ciBwYXJlbnQncyB2aWV3XHJcblx0XHRcdFx0XHRcdFx0c3RhdGVzW3BhcmVudC5uYW1lXVtrZXlbMF1dID0gZ2V0U3R5bGUodmlldy50ZW1wbGF0ZVN0eWxlVXJsKTtcclxuXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vQ29udGludWUgd2l0aCB0aGUgcGFyZW50XHJcblx0XHRcdFx0XHRzdGF0ZSA9IHBhcmVudDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vRmxhdHRlbiB0aGUgbGlzdFxyXG5cdFx0XHRcdHZhciBmbGF0ID0gW107XHJcblx0XHRcdFx0Xy5mb3JFYWNoKHN0YXRlcywgZnVuY3Rpb24gKHZpZXdzKSB7XHJcblxyXG5cdFx0XHRcdFx0Xy5mb3JFYWNoKHZpZXdzLCBmdW5jdGlvbiAoc3R5bGUpIHtcclxuXHJcblx0XHRcdFx0XHRcdGlmICghXy5pbmNsdWRlcyhmbGF0LCBzdHlsZSkpIHtcclxuXHRcdFx0XHRcdFx0XHRmbGF0LnB1c2goc3R5bGUpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHQvL1JldmVyc2UgaXQgc28gd2UgaGF2ZSBhIHByb3BlciBoaWVyYXJjaHlcclxuXHRcdFx0XHRmbGF0LnJldmVyc2UoKTtcclxuXHJcblx0XHRcdFx0cmV0dXJuIGZsYXQ7XHJcblxyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0XHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbSkge1xyXG5cclxuXHRcdFx0XHRcdHNjb3BlLnRlbXBsYXRlU3R5bGVzID0gW107XHJcblxyXG5cdFx0XHRcdFx0dmFyIGh0bWwgPSAnPGxpbmsgbmctYXR0ci1yZWw9XCJ7e3N0eWxlLnJlbH19XCIgbmctcmVwZWF0PVwic3R5bGUgaW4gdGVtcGxhdGVTdHlsZXNcIiBuZy1ocmVmPVwie3tzdHlsZS5ocmVmfX1cIj4nO1xyXG5cclxuXHRcdFx0XHRcdGh0bWwgPSBodG1sLnJlcGxhY2UoL1xce1xcey9nLCAkaW50ZXJwb2xhdGUuc3RhcnRTeW1ib2woKSk7XHJcblx0XHRcdFx0XHRodG1sID0gaHRtbC5yZXBsYWNlKC9cXH1cXH0vZywgJGludGVycG9sYXRlLmVuZFN5bWJvbCgpKTtcclxuXHJcblx0XHRcdFx0XHRlbGVtLmFwcGVuZCgkY29tcGlsZShodG1sKShzY29wZSkpO1xyXG5cclxuXHRcdFx0XHRcdCRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uIChldmVudCwgdG9TdGF0ZSwgdG9QYXJhbXMsIGZyb21TdGF0ZSwgZnJvbVBhcmFtcykge1xyXG5cclxuXHRcdFx0XHRcdFx0c2NvcGUudGVtcGxhdGVTdHlsZXMgPSBnZXRTdHlsZXModG9TdGF0ZSk7XHJcblxyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHJcblx0XHR9XHJcblx0XSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uc2VydmljZSgnQm90c1N2YycsIGZ1bmN0aW9uKCRodHRwKSB7XHJcblxyXG4gIHZhciBzdmMgPSB0aGlzO1xyXG5cclxuICBzdmMuZ2V0TGlzdHMgPSBmdW5jdGlvbiAodXNlcikge1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9ib3RzL2xpc3RzLycgKyB1c2VyLl9pZCk7XHJcbiAgfTtcclxuXHJcbiAgc3ZjLnNhdmVMaXN0ID0gZnVuY3Rpb24gKGxpc3QpIHtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvYm90cy9saXN0cycsIGxpc3QpO1xyXG4gIH07XHJcbiAgXHJcbiAgc3ZjLmRlbGV0ZUxpc3QgPSBmdW5jdGlvbiAobGlzdCkge1xyXG4gICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9ib3RzL2xpc3RzLycgKyBsaXN0Ll9pZCk7XHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLnNlcnZpY2UoJ0NhdGVnb3JpZXNTdmMnLCBmdW5jdGlvbigkaHR0cCkge1xyXG5cclxuICB2YXIgc3ZjID0gdGhpcztcclxuXHJcbiAgc3ZjLmdldENhdGVnb3JpZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2NhdGVnb3JpZXMnKTtcclxuICB9O1xyXG5cclxuICBzdmMuZ2V0VGFza3MgPSBmdW5jdGlvbiAoY2F0ZWdvcnkpIHtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvY2F0ZWdvcmllcy8nICsgY2F0ZWdvcnkpO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5hZGRDYXRlZ29yeSA9IGZ1bmN0aW9uIChjYXRlZ29yeSkge1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvY2F0ZWdvcmllcy8nLCBjYXRlZ29yeSk7XHJcbiAgfTtcclxuXHJcbiAgc3ZjLmFkZFRhc2sgPSBmdW5jdGlvbiAoY2F0ZWdvcnksIHRhc2spIHtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2NhdGVnb3JpZXMvJyArIGNhdGVnb3J5ICsgJy90YXNrcycsIHRhc2spO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5zZXRQcmlvcml0eUxpc3QgPSBmdW5jdGlvbihsaXN0KSB7XHJcbiAgICBzdmMuY2hvaWNlcyA9IGxpc3Q7XHJcbiAgICBzdmMucHJpb3JpdHlMaXN0ID0gW107XHJcbiAgICAvL01ha2UgYSBuZXcgY2hvaWNlIGxpc3RcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICBmb3IgKHZhciBqID0gaSArIDE7IGogPCBsaXN0Lmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgdmFyIHJhbmRvbSA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSk7XHJcbiAgICAgICAgc3ZjLnByaW9yaXR5TGlzdC5wdXNoKHtcclxuICAgICAgICAgIGlkOiAwLFxyXG4gICAgICAgICAgZmlyc3RDaG9pY2U6IGxpc3RbcmFuZG9tID09PSAwID8gaSA6IGpdLm5hbWUsXHJcbiAgICAgICAgICBzZWNvbmRDaG9pY2U6IGxpc3RbcmFuZG9tID09PSAwID8gaiA6IGldLm5hbWUsXHJcbiAgICAgICAgICBjaG9pY2U6ICcnXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHNodWZmbGUoc3ZjLnByaW9yaXR5TGlzdCk7XHJcbiAgICBmb3IgKGkgaW4gc3ZjLnByaW9yaXR5TGlzdCkge1xyXG4gICAgICBzdmMucHJpb3JpdHlMaXN0W2ldLmlkID0gaSArIDE7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgc3ZjLmdldFByaW9yaXR5TGlzdCA9IGZ1bmN0aW9uKGxpc3QpIHtcclxuICAgIHJldHVybiBzdmMucHJpb3JpdHlMaXN0O1xyXG4gIH07XHJcblxyXG4gIGZ1bmN0aW9uIHNodWZmbGUoYXJyYXkpIHtcclxuICAgIHZhciBtID0gYXJyYXkubGVuZ3RoLCB0LCBpO1xyXG4gICAgLy8gV2hpbGUgdGhlcmUgcmVtYWluIGVsZW1lbnRzIHRvIHNodWZmbGXigKZcclxuICAgIHdoaWxlIChtKSB7XHJcbiAgICAgIC8vIFBpY2sgYSByZW1haW5pbmcgZWxlbWVudOKAplxyXG4gICAgICBpID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbS0tKTtcclxuICAgICAgLy8gQW5kIHN3YXAgaXQgd2l0aCB0aGUgY3VycmVudCBlbGVtZW50LlxyXG4gICAgICAvL2FycmF5W21dLmZpcnN0Q2hvaWNlO1xyXG4gICAgICB0ID0gYXJyYXlbbV07XHJcbiAgICAgIGFycmF5W21dID0gYXJyYXlbaV07XHJcbiAgICAgIGFycmF5W2ldID0gdDtcclxuICAgIH1cclxuICAgIHJldHVybiBhcnJheTtcclxuICB9XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5zZXJ2aWNlKCdFbWFpbFN2YycsIGZ1bmN0aW9uKCRodHRwKSB7XHJcblxyXG4gIHZhciBzdmMgPSB0aGlzO1xyXG5cclxuICBzdmMuc2VuZCA9IGZ1bmN0aW9uIChlbWFpbCkge1xyXG4gICAgY29uc29sZS5sb2coZW1haWwpO1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvZW1haWwnLCBlbWFpbCk7XHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLnNlcnZpY2UoJ0dhbWVTdmMnLCBmdW5jdGlvbigkaHR0cCkge1xyXG5cclxuICAgIHZhciBzdmMgPSB0aGlzO1xyXG5cclxuICAgIHN2Yy5nZXRIaWdoc2NvcmUgPSBmdW5jdGlvbiAoZ2FtZSwgdXNlcikge1xyXG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2dhbWVzLycgKyBnYW1lICsgJy8nICsgdXNlciArICcvaGlnaHNjb3JlJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHN2Yy5zZXRIaWdoc2NvcmUgPSBmdW5jdGlvbiAoZ2FtZSwgdXNlciwgc2NvcmUpIHtcclxuICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvZ2FtZXMvJyArIGdhbWUgKyAnLycgKyB1c2VyICsgJy9oaWdoc2NvcmUnLCB7XHJcbiAgICAgICAgc2NvcmU6IHNjb3JlXHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLnNlcnZpY2UoJ0xhbmd1YWdlU3ZjJywgZnVuY3Rpb24oKSB7XHJcblxyXG4gIHZhciBzdmMgPSB0aGlzO1xyXG5cclxuICBzdmMubGFuZ3VhZ2VzID0gW1xyXG4gICAge1xyXG4gICAgICBcImNvZGVcIjogXCJFTlwiLFxyXG4gICAgICBcIm5hbWVcIjogXCJFbmdsaXNoXCIsXHJcbiAgICAgIFwiZmxhZ1wiOiBcImZsYWctaWNvbi1nYlwiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBcImNvZGVcIjogXCJOTFwiLFxyXG4gICAgICBcIm5hbWVcIjogXCJOZWRlcmxhbmRzXCIsXHJcbiAgICAgIFwiZmxhZ1wiOiBcImZsYWctaWNvbi1ubFwiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBcImNvZGVcIjogXCJGUlwiLFxyXG4gICAgICBcIm5hbWVcIjogXCJGcmFuw6dhaXNcIixcclxuICAgICAgXCJmbGFnXCI6IFwiZmxhZy1pY29uLWZyXCJcclxuICAgIH1cclxuICBdO1xyXG5cclxuICBzdmMudGV4dCA9IFtcclxuICAgIHtcclxuICAgICAgXCJjb2RlXCI6IFwiRU5cIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJjb2RlXCI6IFwiTkxcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgXCJjb2RlXCI6IFwiRlJcIlxyXG4gICAgfVxyXG4gIF07XHJcblxyXG4gIHN2Yy5zZWxlY3RlZExhbmd1YWdlID0gc3ZjLmxhbmd1YWdlc1swXTtcclxuXHJcbiAgc3ZjLnNldExhbmd1YWdlID0gZnVuY3Rpb24gKGxhbmd1YWdlKSB7XHJcbiAgICBzdmMuc2VsZWN0ZWRMYW5ndWFnZSA9IGxhbmd1YWdlO1xyXG4gICAgcmV0dXJuIGxhbmd1YWdlO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5nZXRMYW5ndWFnZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBzdmMuc2VsZWN0ZWRMYW5ndWFnZTtcclxuICB9O1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uc2VydmljZSgnUG9zdHNTdmMnLCBmdW5jdGlvbigkaHR0cCkge1xyXG5cclxuICB2YXIgc3ZjID0gdGhpcztcclxuXHJcbiAgc3ZjLmZldGNoID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9wb3N0cycpO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5jcmVhdGUgPSBmdW5jdGlvbiAocG9zdCkge1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KTtcclxuICB9O1xyXG5cclxuICBzdmMuZ2V0UG9zdCA9IGZ1bmN0aW9uIChwb3N0KSB7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzLycgKyBwb3N0Ll9pZCk7XHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLnNlcnZpY2UoJ1VzZXJTdmMnLCBmdW5jdGlvbigkaHR0cCkge1xyXG5cclxuICB2YXIgc3ZjID0gdGhpcztcclxuXHJcbiAgc3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzJyk7XHJcbiAgfTtcclxuXHJcbiAgc3ZjLnNldFRva2VuID0gZnVuY3Rpb24gKHRva2VuKSB7XHJcbiAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSB0b2tlbjtcclxuICAgIHJldHVybiBzdmMuZ2V0VXNlcigpO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5hdXRoZW50aWNhdGUgPSBmdW5jdGlvbiAodXNlcikge1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMvYXV0aGVudGljYXRlJywge1xyXG4gICAgICB1c2VyOiB1c2VyXHJcbiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnRva2VuID0gcmVzcG9uc2UuZGF0YTtcclxuICAgICAgcmV0dXJuIHN2Yy5zZXRUb2tlbihyZXNwb25zZS5kYXRhKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VyKSB7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzLycgKyB1c2VyICsgJy9sb2dpbicpXHJcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS50b2tlbiA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICAgIHJldHVybiBzdmMuc2V0VG9rZW4ocmVzcG9uc2UuZGF0YSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBzdmMudXBkYXRlVXNlciA9IGZ1bmN0aW9uICh1c2VyKSB7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2Vycy8nICsgdXNlci5faWQsIHtcclxuICAgICAgdXNlcjogdXNlclxyXG4gICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBzdmMuZ2V0VXNlcigpO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgc3ZjLmNoZWNrUGFzc3dvcmQgPSBmdW5jdGlvbiAodXNlciwgcGFzc3dvcmQpIHtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzLycgKyB1c2VyICsgJy92ZXJpZmljYXRpb24nLCB7XHJcbiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgc3ZjLmNoYW5nZVBhc3N3b3JkID0gZnVuY3Rpb24gKHVzZXIsIG9sZFBhc3N3b3JkLCBuZXdQYXNzd29yZCkge1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMvJyArIHVzZXIgKyAnL3Bhc3N3b3JkJywge1xyXG4gICAgICBvbGRQYXNzd29yZDogb2xkUGFzc3dvcmQsXHJcbiAgICAgIG5ld1Bhc3N3b3JkIDogbmV3UGFzc3dvcmRcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5jaGFuZ2VVc2VybmFtZSA9IGZ1bmN0aW9uICh1c2VyLCBuZXdVc2VybmFtZSkge1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMvJyArIHVzZXIgKyAnL3VzZXJuYW1lJywge1xyXG4gICAgICBuZXdVc2VybmFtZTogbmV3VXNlcm5hbWVcclxuICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4gc3ZjLmdldFVzZXIoKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHN2Yy5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLmNsZWFyKCk7XHJcbiAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSAnJztcclxuICB9O1xyXG5cclxuICBzdmMuY3JlYXRlVXNlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzJywge1xyXG4gICAgICB1c2VybmFtZTogdXNlcm5hbWUsXHJcbiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZFxyXG4gICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG59KTtcclxuIl19
