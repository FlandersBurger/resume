angular.module("app",["ui.router","ui.bootstrap","ngAnimate","ngSanitize","ngDragDrop","ngTagsInput","vcRecaptcha","chart.js","tc.chartjs"]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$urlServiceProvider","$locationProvider",function(e,a,t,n){a.otherwise("/home"),t.config.strictMode(!1),e.state("home",{url:"/home",templateUrl:"/home.html"}).state("policy",{url:"/policy",templateUrl:"/policy.html"}).state("print",{url:"/print",templateUrl:"/print.html"}).state("experience",{url:"/experience",controller:"ExperienceCtrl",templateUrl:"/experience.html"}).state("skills",{url:"/skills",controller:"SkillsCtrl",templateUrl:"/skills.html"}).state("hobbies",{url:"/hobbies",controller:"HobbiesCtrl",templateUrl:"/hobbies.html"}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"/contact.html"}).state("workout",{url:"/workout",controller:"WorkoutCtrl",templateUrl:"/workout.html"}).state("posts",{url:"/posts",controller:"PostsCtrl",templateUrl:"/posts.html"}).state("profile",{url:"/profile",controller:"ProfileCtrl",templateUrl:"/profile.html"}).state("lists",{url:"/lists",controller:"ListsCtrl",templateUrl:"lists.html"}).state("prioritize",{url:"/prioritize",controller:"PrioritizeCtrl",templateUrl:"prioritize.html"}).state("bubbles",{url:"/bubbles",controller:"BubblesCtrl",templateUrl:"bubbles.html"}).state("asteroids",{url:"/asteroids",controller:"AsteroidsCtrl",templateUrl:"asteroids.html"}).state("lemmings",{url:"/lemmings",controller:"LemmingsCtrl",templateUrl:"lemmings.html"}).state("bots",{url:"/bots",controller:"BotsCtrl",templateUrl:"bots.html"}),n.html5Mode({enabled:!0,requireBase:!1})}]),angular.module("app").service("WebSocketSvc",["$rootScope","$timeout",function(t,a){var n,i=function(){(n=new WebSocket("https:"===window.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host)).onopen=function(){console.log("Websocket connected")},n.onclose=function(e){console.log("Websocket closed. Reconnecting..."),a(i,1e3)},n.onerror=function(e){console.log("Error: "+e+" - State: "+n.readyState)},n.onmessage=function(e){var a=JSON.parse(e.data);t.$broadcast("ws:"+a.topic,a.data)}};this.send=function(e,a){var t=JSON.stringify({topic:e,data:a});n.send(t)},this.connect=i}]).run(["WebSocketSvc",function(e){e.connect()}]),angular.module("app").controller("AppCtrl",["$scope","$location","LanguageSvc","UserSvc",function(t,e,a,n){function i(e){t.loggedIn||(window.localStorage.user=e._id,t.loggedIn=!0,t.currentUser=e,t.$broadcast("login"))}console.log("%cYou sneaky bugger!","font: 2em sans-serif; color: DodgerBlue; text-shadow: 2px 0 0 #444, -2px 0 0 #444, 0 2px 0 #444, 0 -2px 0 #444, 1px 1px #444, -1px -1px 0 #444, 1px -1px 0 #444, -1px 1px 0 #444;"),console.log("I'm glad you're curious whether something is popping up in here. I'm a bit of a stickler when it comes to messages in the console so I try to make sure only things I want are visible. That being said, if there is a big error here, I would really appreciate you telling me so I can get rid of it!"),console.log("The code for my resume is hosted on Github if you really want to go into all this! => https://github.com/FlandersBurger/resume"),$(window).load(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")}),t.themeCounter=6,t.today=new Date,t.year=t.today.getFullYear(),t.random=Math.floor(1e6*Math.random()),t.flipTheme=function(){$(".loading").show(),$(".content").hide(),setTimeout(function(){$(".loading").fadeOut("slow"),$(".content").fadeIn("slow")},800),t.themeCounter=t.themeCounter<6?t.themeCounter+1:t.themeCounter=1},$.getJSON("/skills.json",function(e){t.skills=e.filter(function(e){return e.enabled})}),$.getJSON("/hobbies.json",function(e){t.hobbies=e}),$.getJSON("/experience.json",function(e){t.jobs=e,t.jobs.forEach(function(e){e.startDate=new Date(e.startDate),e.endDate&&(e.endDate=new Date(e.endDate))})}),t.getTimeSpan=function(e){return e.startDate.getFullYear()+(e.endDate?" - "+e.endDate.getFullYear():" - Today")},t.languages=a.languages,t.selectedLanguage=a.getLanguage(),t.selectLanguage=function(e){t.selectedLanguage=a.setLanguage(e)},t.hoverdiv=function(e,a){var t=e.clientX+"px",n=e.clientY+20+"px";document.getElementById(a);return $("#"+a).css("left",t),$("#"+a).css("top",n),$("#"+a).toggle(),!1},t.socialMedia=[{name:"linkedin",url:"https://www.linkedin.com/in/laurent-debacker-1633a916",icon:"fa-linkedin"},{name:"github",url:"https://github.com/FlandersBurger",icon:"fa-github"},{name:"jsfiddle",url:"https://jsfiddle.net/user/BelgoCanadian/fiddles/",icon:"fa-jsfiddle"},{name:"stackoverflow",url:"http://stackoverflow.com/users/1083923/belgocanadian",icon:"fa-stack-overflow"}],window.localStorage.user&&n.login(window.localStorage.user).then(function(e){i(e.data)}),t.$on("login",function(e,a){i(a)}),t.$on("update",function(e,a){t.currentUser=a,t.currentUser.birthDate=new Date(t.currentUser.birthDate),t.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),t.$on("loading",function(e,a){t.loading=!0,$("#loading-icon").show()}),t.$on("loaded",function(e,a){t.loading=!1,setTimeout(function(){$("#loading-icon").fadeOut("slow")},1e3)}),t.logout=function(){firebase.auth().signOut().then(function(){t.loggedIn=!1,window.localStorage.clear(),t.$broadcast("logout")}).catch(function(e){})}}]),angular.module("app").controller("AsteroidsCtrl",["$scope","GameSvc",function(n,a){n.announce=!1;var l=document.getElementById("asteroids-page"),i=l.getContext("2d");i.font="30px Comic Sans MS",i.fillStyle="red",i.textAlign="center";var o={},s={},r={},g={},t={},e=10,c=Math.floor(Math.random()*e),f=[{name:"speed",announcement:"Max Speed ⇧",cycle:{rows:1,columns:4,size:[14,35],i:0,direction:!0},img:new Image,activate:function(e){e.maxSpeed+=100}},{name:"cooldown",announcement:"Cooldown ⇩",cycle:{rows:1,columns:3,size:[17,17],i:0,direction:!0},img:new Image,activate:function(e){0<e.cooldown&&(e.cooldownTime-=1)}},{name:"range",announcement:"Firing Range ⇧",cycle:{rows:4,columns:1,size:[30,8],i:0,direction:!0},img:new Image,activate:function(e){e.range+=5}},{name:"shield",announcement:"Shield",cycle:{rows:5,columns:1,size:[19,19],i:0,direction:!0},img:new Image,activate:function(e){e.shield=!0}},{name:"nuke",announcement:"Nuke",cycle:{rows:1,columns:8,size:[15,15],i:0,direction:!0},img:new Image,activate:function(e){for(var a in s)s[a].explode();M(5)}}];f.forEach(function(e,a,t){t[a].img.src="asteroids/"+e.name+".png"});var u,h=new Image;function d(){n.playing?(t[32]&&0===u.cooldown&&u.shoot(),t[37]&&(0===u.rotation?u.rotation=360:u.rotation-=3),t[39]&&(360===u.rotation?u.rotation=0:u.rotation+=3),t[38]?u.speed<=u.maxSpeed&&(u.speed+=5):0<u.speed&&u.speed--,t[40]&&0<u.speed&&(u.speed-=2)):t[32]&&(n.playing=!0,n.score=0,c=Math.floor(Math.random()*e),n.$apply(),u=new m,n.score=0,M(5),function e(){if(Object.keys(s).length<200){var a=Math.round(1e8*Math.random());s[a]=new w(a)}n.playing&&setTimeout(function(){e()},n.score<1e3?1e3:n.score<2e3?900:n.score<3e3?800:n.score<4e3?700:n.score<5e3?600:n.score<6e3?500:n.score<7e3?400:n.score<8e3?300:200)}())}function m(){this.width=50,this.height=50,this.shield=!1,this.range=80,this.cannon={x:this.width/2-4.5,y:this.height/2-.078125*this.height},this.cooldown=0,this.cooldownTime=20,this.position=[l.width/2-this.width/2,l.height/2-this.height/2],this.img=new Image,this.img.src="asteroids/spaceship.png",this.speed=0,this.maxSpeed=1e3,this.angle=0,this.rotation=0,this.shoot=function(){this.cooldown=this.cooldownTime;var e=Math.round(1e8*Math.random());o[e]=new p(e,this)},this.move=function(){for(var e in this.shield&&(i.beginPath(),i.arc(this.position[0]+this.width/2,this.position[1]+this.height/2,30,0,2*Math.PI),i.fillStyle="rgb(35, 237, 86, 0.5)",i.strokeStyle="rgb(66, 168, 36, 0.8)",i.lineWidth=5,i.stroke(),i.fill()),s){var a=s[e];if(S(a,this)){if(!this.shield)return $();this.shield=!1,a.explode()}}this.angle=this.rotation,0<this.cooldown&&this.cooldown--,b(this)}}function p(e,a){this.id=e,this.position=[a.position[0]+a.cannon.x+a.cannon.x*Math.cos((a.rotation-90)*Math.PI/180),a.position[1]+a.cannon.y+a.cannon.y*Math.sin((a.rotation-90)*Math.PI/180)],this.width=9,this.height=15,this.angle=a.angle,this.rotation=a.rotation,this.speed=a.speed+500,this.lifespan=a.range,this.img=new Image,this.img.src="asteroids/shot.png",this.move=function(){this.lifespan--,b(this)}}function w(e){this.id=e,this.width=50*Math.random()+20,this.height=this.width,this.position=k(this.width,this.height),this.angle=360*Math.random(),this.rotation=360*Math.random(),this.rotationSpeed=6*Math.random()-3,this.speed=300*Math.random()+2,this.img=new Image,this.img.src="asteroids/asteroid"+(Math.round(6*Math.random())+1)+".png",this.explode=function(){return g[this.id]=new y(this),delete s[this.id]},this.move=function(){for(var e in this.rotation+=this.rotationSpeed,360<this.rotation?this.rotation=this.rotation-360:this.rotation<0&&(this.rotation=360+this.rotation),o){var a=o[e];if(S(a,this)){this.explode();var t=Math.floor((a.speed-500)/10+70-this.width);Math.floor((t+n.score)/100)>Math.floor(n.score/100)&&C(),n.score+=t,n.$apply(),delete o[e]}}b(this)}}function y(e){this.position=[e.position[0],e.position[1]],this.width=e.width,this.height=e.height,this.speed=0,this.angle=360*Math.random(),this.cycle={rows:6,columns:8,size:[256,256],i:0,direction:!0},this.lifespan=47,this.img=h,this.move=function(){this.lifespan--,b(this),this.cycle.direction?this.cycle.i++:this.cycle.i--}}function v(e){this.id=e,this.powerup=f[Math.floor(Math.random()*f.length)],this.cycle=this.powerup.cycle,this.lifespan=1e3,this.cycle.size[1]>this.cycle.size[0]?(this.height=40,this.width=Math.round(this.height/this.cycle.size[1]*this.cycle.size[0])):(this.width=40,this.height=Math.round(this.width/this.cycle.size[0]*this.cycle.size[1])),this.position=k(this.width,this.height),this.img=this.powerup.img,this.angle=360*Math.random(),this.speed=150*Math.random()+50;var a=5;this.move=function(){return this.lifespan<=0?delete r[this.id]:S(u,this)?(n.announce=!0,n.announcement=this.powerup.announcement,n.$apply(),setTimeout(function(){n.announce=!1,n.$apply()},1e3),this.powerup.activate(u),delete r[this.id]):(this.lifespan--,b(this),void(a<=0?(this.cycle.direction?this.cycle.i++:this.cycle.i--,a=5):a--))}}function b(e){if(e.position[0]+=e.speed/100*Math.cos((e.angle-90)*Math.PI/180),e.position[1]+=e.speed/100*Math.sin((e.angle-90)*Math.PI/180),e.position[0]>l.width?e.position[0]=-e.width:e.position[0]<-e.width&&(e.position[0]=l.width),e.position[1]>l.height?e.position[1]=-e.height:e.position[1]<-e.height&&(e.position[1]=l.height),i.save(),i.translate(e.position[0],e.position[1]),i.translate(e.width/2,e.height/2),i.rotate(e.rotation*Math.PI/180),e.cycle){var a=e.cycle.i%e.cycle.columns,t=Math.floor(e.cycle.i/e.cycle.columns);i.drawImage(e.img,e.cycle.size[0]*a,e.cycle.size[1]*t,e.cycle.size[0],e.cycle.size[1],-e.width/2,-e.height/2,e.width,e.height),e.cycle.i<=0?(e.cycle.i=0,e.cycle.direction=!0):e.cycle.i>=e.cycle.columns*e.cycle.rows&&(e.cycle.i=e.cycle.columns*e.cycle.rows-1,e.cycle.direction=!1)}else i.drawImage(e.img,-e.width/2,-e.height/2,e.width,e.height);i.restore()}function k(e,a){var t,n=2*Math.random(),i=2*Math.random(),o=0;return 1<=n?(t=Math.random()*l.width,o=1<=o?0-a:l.height):(o=Math.random()*l.height,t=1<=i?0-e:l.width),[t,o]}function S(e,a){return e.position[0]<a.position[0]+a.width&&a.position[0]<e.position[0]+e.width&&e.position[1]<a.position[1]+a.height&&a.position[1]<e.position[1]+e.height}function M(e){var a=0;do{var t=Math.round(1e8*Math.random());s[t]=new w(t)}while(a++<=e)}function C(){if(Object.keys(r).length<3){var e=Math.round(1e8*Math.random());r[e]=new v(e)}}function $(){for(var e in n.playing=!1,s)s[e].explode();o={},n.loggedIn?n.currentUser.highscore.asteroids<n.score&&(n.currentUser.highscore.asteroids=n.score,a.setHighscore("asteroids",n.currentUser._id,n.score)):n.highscore<n.score&&(n.highscore=n.score)}function L(){console.log(window.innerWidth),l.width=window.innerWidth,l.height=window.innerHeight-(l.width<=768?50:105)}h.src="asteroids/explosion.png",window.addEventListener("keydown",function(e){t[e.keyCode||e.which]=!0},!0),window.addEventListener("keyup",function(e){t[e.keyCode||e.which]=!1},!0),n.highscore=0,window.addEventListener("resize",L,!1),L(),requestAnimationFrame(function e(){i.clearRect(0,0,l.width,l.height);for(var a in o)o[a].lifespan<=0?delete o[a]:o[a].move();for(a in s)s[a].move();for(a in r)r[a].move();for(a in g)g[a].lifespan<=0?delete g[a]:g[a].move();d();if(n.playing)u.move();else{var t=i.createLinearGradient(0,0,l.width,0);t.addColorStop("0","rgb("+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+")"),t.addColorStop("0.25","rgb("+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+")"),t.addColorStop("0.5","rgb("+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+")"),t.addColorStop("0.75","rgb("+Math.floor(0+256*I/100)+","+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+")"),t.addColorStop("1.0","rgb("+Math.floor(256-256*I/100)+","+Math.floor(0+256*I/100)+","+Math.floor(0+256*I/100)+")"),i.fillStyle=t,i.font="60px Monoton",i.fillText("Asteroids",l.width/2-i.measureText("Asteroids").width/2,l.height/2),i.font="20px Aldrich",i.fillText("Press space to start",l.width/2-i.measureText("Press space to start").width/2,l.height/2+20),i.fillText("Designed and developed by Laurent Debacker",l.width/2-i.measureText("Designed and developed by Laurent Debacker").width/2,l.height-30)}I+=x?1:-1;100<I?x=!(I=100):I<0&&(x=!(I=0));requestAnimationFrame(e)});var I=0,x=!0;n.space=function(){return{backgroundImage:'url("asteroids/space'+c+'.jpg")'}}}]),angular.module("app").controller("BotsCtrl",["$scope","BotsSvc",function(a,t){function n(){t.getLists(a.currentUser).then(function(e){a.lists=e.data})}a.$on("login",function(e){n()}),a.addList=function(){a.lists.unshift({name:"",values:[{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""},{value:""}]})},a.saveList=function(e){t.saveList(e).then(function(e){n()})},a.deleteList=function(e){t.deleteList(e).then(function(e){n()})}}]),angular.module("app").controller("BubblesCtrl",["$scope",function(e){var a=document.getElementById("bubbles-page"),t=a.getContext("2d"),n=[],i=["#ffc300","#ff5733","#c70039","#900c3e","#571845"];function o(){this.lifespan=0,this.radius=1,this.expanding=!0,this.speed=Math.round(3*Math.random()),this.circumference=Math.round(50*Math.random())+5,this.maxRadius=Math.round(200*Math.random())+20,this.x=Math.round(Math.random()*a.width),this.y=Math.round(Math.random()*a.height),this.vx=.5<=Math.random()?1:-1,this.vy=.5<=Math.random()?1:-1}requestAnimationFrame(function e(){n.push(new o),n=n.filter(function(e){return e.radius===e.maxRadius&&(e.expanding=!1),e.x+=e.vx*e.speed,e.y+=e.vy*e.speed,e.radius+=e.expanding?1:-1,0<e.radius}),t.clearRect(0,0,a.width,a.height),n.forEach(function(e){i[Math.round(i.length*e.radius/e.maxRadius)],t.beginPath(),t.arc(e.x,e.y,e.radius,0,2*Math.PI),t.fillStyle=i[Math.round(i.length*e.radius/e.maxRadius)],t.fill(),t.strokeStyle=i[i.length-Math.round(i.length*e.radius/e.maxRadius)],t.lineWidth=e.circumference*e.radius/e.maxRadius,t.stroke()}),requestAnimationFrame(e)}),function(){function e(){a.width=window.innerWidth,a.height=window.innerHeight-(a.width<=768?55:111)}window.addEventListener("resize",e,!1),e()}()}]),angular.module("app").controller("ContactCtrl",["$scope","EmailSvc",function(a,e){a.options=[{name:"Spam",text:"I am a spam bot and automatically check the first option I find!"},{name:"Opportunitiy",text:"You seem to have the skills I seek, I'd like to talk about some opportunities."},{name:"Resume",text:"I dig the resume, how did you make it?"},{name:"Other",text:"Sumtin else!"}],a.contact={email:"",name:"",phone:"",about:"",message:""},a.send=function(){a.sending=!0,console.log("here"),e.send({email:a.contact.email,name:a.contact.name,phone:a.contact.phone,about:a.contact.about,message:a.contact.message}).then(function(e){a.sent=!0,console.log("SUCCESS. status=%d, text=%s",e.status,e.text),console.log(e)},function(e){a.sending=!1,console.log("FAILED. error=",e)})}}]),angular.module("app").controller("ExperienceCtrl",["$scope",function(e){e.getSkill=function(a){if(e.skills)return e.skills.find(function(e){return e.code===a})}}]),angular.module("app").controller("HobbiesCtrl",["$scope","$window",function(a,e){a.hobbySelectorVisible=!1,$.getJSON("https://www.reddit.com/user/belgocanadian/about/.json",function(e){}),a.selectedHobby=a.hobbies[0],a.selectHobby=function(e){a.selectedHobby=e,a.hobbySelectorVisible=!1},a.showHobby=function(e,a,t){return!!e.images&&0<e.images.length}}]),angular.module("app").controller("LemmingsCtrl",["$scope","GameSvc",function(e,a){var t=0,n=1,i=document.getElementById("lemmings-page"),o=i.getContext("2d"),l=new Image;l.src="lemmings/lemmings.png";var s={},r={walk:{start:[0,0],end:[320,20],columns:8,rows:1,reverse:!1},huh:{start:[320,0],end:[640,20],columns:8,rows:1,reverse:!0},fall:{start:[0,80],end:[160,100],columns:4,rows:1,reverse:!1},fly:{start:[160,80],end:[480,110],columns:8,rows:1,reverse:!1},stop:{start:[0,120],end:[640,140],columns:16,rows:1,reverse:!1},climb:{start:[0,160],end:[640,185],columns:16,rows:1,reverse:!1},build:{start:[0,200],end:[640,225],columns:16,rows:1,reverse:!1},punch:{start:[0,240],end:[640,300],columns:16,rows:2,reverse:!1},dig:{start:[0,320],end:[320,345],columns:8,rows:1,reverse:!1}};function g(e){this.position=[Math.floor(Math.random()*(i.width-200))+100,Math.floor(Math.random()*(i.height-200))+100],this.direction=1<2*Math.random()?t:n,this.act=function(e){this.action=r[e],this.cycle=0,this.width=(this.action.end[0]-this.action.start[0])/this.action.columns,this.height=(this.action.end[1]-this.action.start[1]-20*(this.action.rows-1))/this.action.rows,this.animation=!0},this.act(e),this.move=function(){o.save(),o.translate(this.position[0],this.position[1]),o.translate(this.width/2,this.height/2),this.direction===t&&o.scale(-1,1);var e=this.cycle%this.action.columns,a=Math.floor(this.cycle/this.action.columns);o.drawImage(l,this.width*e+this.action.start[0],(this.height+20)*a+this.action.start[1],this.width,this.height,0,0,2*this.width,2*this.height),o.restore(),this.action.reverse?this.animation?(this.cycle++,this.cycle>=this.action.columns*this.action.rows&&(this.animation=!this.animation,this.cycle--)):(this.cycle--,this.cycle<0&&(this.animation=!this.animation,this.cycle=0)):(this.cycle++,this.cycle>=this.action.columns*this.action.rows&&(this.cycle=0))}}function c(){i.width=window.innerWidth,i.height=window.innerHeight-(i.width<=768?50:105)}window.addEventListener("resize",c,!1),c(),Object.keys(r).forEach(function(e){s[Math.round(1e8*Math.random())]=new g(e)}),function e(){o.clearRect(0,0,i.width,i.height);for(var a in s)s[a].move();setTimeout(function(){e()},150)}()}]),angular.module("app").controller("ListsCtrl",["$scope","$location","CategoriesSvc",function(n,e,i){n.showCategory=!0,n.init=function(){i.getCategories().then(function(e){for(var a in n.categories=e.data,n.tasks=[],n.categories)for(var t in n.categories[a].tasks)n.tasks.push({category:n.categories[a].name,task:n.categories[a].tasks[t].name})})},n.selectCategory=function(e){for(var a in n.selectedCategory=e,n.selectedTasks=[],n.selectableTasks=[],n.selectedCategory.tasks)n.selectableTasks.push(n.selectedCategory.tasks[a]);n.showCategory=!1,n.enteredCategory=""},n.newCategory=function(e){for(var a=!1,t=0;t<n.categories.length;t++)n.categories[t].name===e&&(n.selectCategory(n.categories[t]),a=!0);a||i.addCategory({category:e}).then(function(e){n.init(),n.selectCategory(e)}),n.enteredCategory=""},n.newTask=function(e){var a=!1;for(var t in n.selectedCategory.tasks)n.selectedCategory.tasks[t].name===e&&(a=!0,n.selectTask(n.selectedCategory.tasks[t]));a||i.addTask(n.selectedCategory.name,{task:e}).then(function(){n.selectedCategory.tasks.push({name:e}),n.addTask(n.selectedTasks,n.selectedCategory.tasks[n.selectedCategory.tasks.length-1])}),n.enteredTask=""},n.selectTask=function(e){n.addTask(n.selectedTasks,e),n.removeTask(n.selectableTasks,e),n.enteredTask=""},n.unselectTask=function(e){n.addTask(n.selectableTasks,e),n.removeTask(n.selectedTasks,e)},n.addTask=function(e,a){e.push(a)},n.removeTask=function(e,a){e.splice(e.indexOf(a),1)},n.startPrioritizing=function(){i.setPriorityList(n.selectedTasks),e.path("/prioritize")},n.getQuestions=function(){if(!n.selectedTasks)return"";for(var e=0,a=n.selectedTasks.length-1;0<a;a--)e+=a;return e}}]),angular.module("app").controller("LoginCtrl",["$scope","$location","UserSvc",function(n,i,o){var a=new firebaseui.auth.AuthUI(firebase.auth());function t(){a.start("#firebaseui-auth-container",{callbacks:{signInSuccess:function(a,e,t){return firebase.auth().currentUser.getIdToken(!0).then(function(e){o.authenticate({displayName:a.displayName,email:a.email,photoURL:a.photoURL,emailVerified:a.emailVerified,idToken:e}).then(function(e){n.$emit("login",e.data),$("#modal-login").modal("hide"),i.path("/")},function(){n.$emit("popup",{message:"Login Failed",type:"alert-danger"})})}).catch(function(e){}),!1},signInFailure:function(e){if("firebaseui/anonymous-upgrade-merge-conflict"!=e.code)return Promise.resolve();var a=e.credential;return firebase.auth().signInWithCredential(a)},uiShown:function(){document.getElementById("loader").style.display="none"}},signInSuccessUrl:"/home",signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],signInFlow:"popup"})}n.$on("logout",function(e){a.reset(),t()}),t()}]),angular.module("app").controller("PostsCtrl",["$scope","$filter","PostsSvc",function(t,e,n){t.addPost=function(){t.postBody&&n.create({body:t.postBody}).then(function(e){t.postBody=null})},n.fetch().then(function(e){t.posts=e.data}),t.$on("ws:new_post",function(e,a){t.$apply(function(){n.getPost(a).then(function(e){t.posts.unshift(e.data)})})})}]),angular.module("app").controller("PrioritizeCtrl",["$scope","$location","CategoriesSvc",function(n,e,t){n.priorityList=t.getPriorityList(),n.priorityList?(n.selectedQuestion=1,n.currentQuestion=1,n.done=!1):e.path("/lists"),n.makeChoice=function(e){for(var a in n.priorityList)n.priorityList[a].id===n.selectedQuestion&&(n.priorityList[a].choice=1===e?n.priorityList[a].firstChoice:n.priorityList[a].secondChoice);n.selectedQuestion===n.currentQuestion&&(n.currentQuestion=n.currentQuestion===n.priorityList.length?1:n.currentQuestion+1),n.selectedQuestion=n.currentQuestion;var t=!1;for(a in n.priorityList)if(""===n.priorityList[a].choice){t=!0;break}t||($("#prioritizeChoices").hide(300),n.done=!0)},n.getButtonValue=function(e){if(!n.priorityList)return"";for(var a=0;a<n.priorityList.length;a++)if(n.priorityList[a].id===n.selectedQuestion)return 1===e?n.priorityList[a].firstChoice:n.priorityList[a].secondChoice},n.selectQuestion=function(e){n.selectedQuestion=e},n.getFilteredPriorityList=function(){return n.priorityList?n.priorityList.sort(function(e,a){return e.id-a.id}).filter(function(e){return""!==e.choice||e.id===n.currentQuestion}):[]},n.getChoicesMade=function(){if(!n.priorityList)return"";var e=0;for(var a in n.priorityList)""!==n.priorityList[a].choice&&e++;return e},n.getButtonClass=function(e){if(!n.priorityList)return"";for(var a in n.priorityList)if(n.priorityList[a].id===n.selectedQuestion)return""===n.priorityList[a].choice?"btn-primary":1===e?n.priorityList[a].firstChoice===n.priorityList[a].choice?"btn-success":"btn-danger":n.priorityList[a].secondChoice===n.priorityList[a].choice?"btn-success":"btn-danger"},n.showChoices=function(){$("#prioritizeChoices").show(1e3),$("#reviewChoices").hide()},n.chartClick=function(e){n.chart&&console.log(n.chart.getSegmentsAtEvent(e))},n.showResults=function(){for(var e in n.data=[],n.options={responsive:!0,segmentShowStroke:!0,segmentStrokeColor:"#fff",segmentStrokeWidth:2,percentageInnerCutout:0,animationSteps:100,animationEasing:"easeOutBounce",animateRotate:!0,animateScale:!1,legendTemplate:'<h3 class="tc-chart-js-legend" style="padding:5px"><% for (var i=0; i<segments.length; i++){%><div class="label" style="float:left;margin:5px;background-color:<%=segments[i].fillColor%>"><%if(segments[i].label){%><%=segments[i].label%><%}%></div><%}%></h3>'},t.choices)for(var a in t.choices[e].votes=0,n.priorityList)t.choices[e].name===n.priorityList[a].choice&&t.choices[e].votes++;for(e in t.choices.sort(function(e,a){return e.votes<a.votes}),t.choices)n.data.push({value:t.choices[e].votes,label:t.choices[e].name});$("#prioritizeResult").hide(),$("#prioritizeChoices").hide(),$("#priorityResults").show(1e3)}}]),angular.module("app").controller("ProfileCtrl",["$scope","$location","UserSvc",function(o,e,l){o.currentUser?($("#sex-indicator").offset({left:o.currentUser.gender.sex/200*$("#sex").width()+$("#sex").offset().left}),$("#identity-indicator").offset({left:o.currentUser.gender.identity/200*$("#identity").width()+$("#identity").offset().left})):e.path("/"),o.sexes=["Male","FtM Male","Intersex","MtF Female","Female"],o.identities=["Man","Bigender","Pangender","Agender","Polygender","Genderfluid","Genderqueer","Queer","Woman"],o.dateOptions={maxDate:new Date,minDate:new Date(1900,1,1),initDate:new Date(2e3,1,1),datepickerMode:"year"},o.gender=function(e,a){return e[Math.round(a/200*(e.length-1))]},o.startSlider=function(){},o.dragSlider=function(e,a,t){o.currentUser.gender[t]=Math.round(($("#"+t+"-indicator").offset().left-$("#"+t).offset().left)/($("#"+t).width()-$("#"+t+"-indicator").width())*200),o.$apply()},o.stopSlider=function(){},o.usernameToggle=!0,o.passwordToggle=!0,o.toggleUsername=function(){o.usernameToggle=!o.usernameToggle,o.newUsername=o.currentUser.username},o.togglePassword=function(){o.newPassword=null,o.confirmPassword=null,o.passwordToggle=!o.passwordToggle},o.checkPassword=function(e){if(e){var a=o.currentUser._id;l.checkPassword(a,e).then(function(e){o.togglePassword()},function(){var e=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:e},200)})}},o.changePassword=function(e,a,t){if(a)if(a==t){var n=o.currentUser._id;l.changePassword(n,e,a).then(function(e){o.$emit("popup",{message:"Password Changed",type:"alert-success"}),o.oldPassword=null,o.togglePassword()},function(){o.$emit("popup",{message:"Password Change Failed",type:"alert-danger"})})}else{var i=$(".password").css("backgroundColor");$(".password").animate({backgroundColor:"#FFB6C1"},200).animate({backgroundColor:i},200)}},o.changeUsername=function(a){o.$emit("loading"),l.changeUsername(o.currentUser._id,a).then(function(e){o.$emit("update",e.data)},function(e){o.$emit("popup",{message:a+" already in use",type:"alert-danger"})})},o.updateUser=function(){o.currentUser&&(o.$emit("loading"),l.updateUser(o.currentUser).then(function(e){o.$emit("update",e.data)}))},o.$watch("currentUser.flags.length",function(e){o.updateUser()}),o.loadCountries=function(a){return[{name:"Andorra",flag:"flag-ad",tidbit:""},{name:"United Arab Emirates",flag:"flag-ae"},{name:"Afghanistan",flag:"flag-af"},{name:"Antigua and Barbuda",flag:"flag-ag"},{name:"Anguilla",flag:"flag-ai"},{name:"Albania",flag:"flag-al"},{name:"Armenia",flag:"flag-am"},{name:"Angola",flag:"flag-ao"},{name:"Antarctica",flag:"flag-aq"},{name:"Argentina",flag:"flag-ar"},{name:"American Somoa",flag:"flag-as"},{name:"Austria",flag:"flag-at"},{name:"Australia",flag:"flag-au"},{name:"Aruba",flag:"flag-aw"},{name:"Åland Islands",flag:"flag-ax"},{name:"Azerbaijan",flag:"flag-az"},{name:"Bosnia and Herzegovina",flag:"flag-ba"},{name:"Barbados",flag:"flag-bb"},{name:"Bangladesh",flag:"flag-bd"},{name:"Belgium",flag:"flag-be"},{name:"Burkina Faso",flag:"flag-bf"},{name:"Bulgaria",flag:"flag-bg"},{name:"Bahrain",flag:"flag-bh"},{name:"Burundi",flag:"flag-bi"},{name:"Benin",flag:"flag-bj"},{name:"Saint Barthélemy",flag:"flag-bl"},{name:"Bermuda",flag:"flag-bm"},{name:"Brunei ",flag:"flag-bn"},{name:"Bolivia, Plurinational State of",flag:"flag-bo"},{name:"Bonaire, Sint Eustatius and Saba",flag:"flag-bq"},{name:"Brazil",flag:"flag-br"},{name:"Bahamas",flag:"flag-bs"},{name:"Bhutan",flag:"flag-bt"},{name:"Bouvet Island",flag:"flag-bv"},{name:"Botswana",flag:"flag-bw"},{name:"Belarus",flag:"flag-by"},{name:"Belize",flag:"flag-bz"},{name:"Canada",flag:"flag-ca"},{name:"Cocos (Keeling) Islands",flag:"flag-cc"},{name:"Congo, the Democratic Republic of the",flag:"flag-cd"},{name:"Central African Republic",flag:"flag-cf"},{name:"Congo",flag:"flag-cg"},{name:"Switzerland",flag:"flag-ch"},{name:"Côte d'Ivoire",flag:"flag-ci"},{name:"Cook Islands",flag:"flag-ck"},{name:"Chile",flag:"flag-cl"},{name:"Cameroon",flag:"flag-cm"},{name:"China",flag:"flag-cn"},{name:"Colombia",flag:"flag-co"},{name:"Costa Rica",flag:"flag-cr"},{name:"Cuba",flag:"flag-cu"},{name:"Cabo Verde",flag:"flag-cv"},{name:"Curaçao",flag:"flag-cw"},{name:"Christmas Island",flag:"flag-cx"},{name:"Cyprus",flag:"flag-cy"},{name:"Czech Republic",flag:"flag-cz"},{name:"Germany",flag:"flag-de"},{name:"Djibouti",flag:"flag-dj"},{name:"Denmark",flag:"flag-dk"},{name:"Dominica",flag:"flag-dm"},{name:"Dominican Republic",flag:"flag-do"},{name:"Algeria",flag:"flag-dz"},{name:"Ecuador",flag:"flag-ec"},{name:"Estonia",flag:"flag-ee"},{name:"Egypt",flag:"flag-eg"},{name:"Western Sahara",flag:"flag-eh"},{name:"Eritrea",flag:"flag-er"},{name:"Spain",flag:"flag-es"},{name:"Ethiopia",flag:"flag-et"},{name:"Finland",flag:"flag-fi"},{name:"Fiji",flag:"flag-fj"},{name:"Falkland Islands (Malvinas)",flag:"flag-fk"},{name:"Micronesia, Federated States of",flag:"flag-fm"},{name:"Faroe Islands",flag:"flag-fo"},{name:"France",flag:"flag-fr"},{name:"Gabon",flag:"flag-ga"},{name:"United Kingdom of Great Britain and Northern Ireland",flag:"flag-gb"},{name:"Grenada",flag:"flag-gd"},{name:"Georgia",flag:"flag-ge"},{name:"French Guiana",flag:"flag-gf"},{name:"Guernsey",flag:"flag-gg"},{name:"Ghana",flag:"flag-gh"},{name:"Gibraltar",flag:"flag-gi"},{name:"Greenland",flag:"flag-gl"},{name:"Gambia",flag:"flag-gm"},{name:"Guinea",flag:"flag-gn"},{name:"Guadeloupe",flag:"flag-gp"},{name:"Equatorial Guinea",flag:"flag-gq"},{name:"Greece",flag:"flag-gr"},{name:"South Georgia and the South Sandwich Islands",flag:"flag-gs"},{name:"Guatemala",flag:"flag-gt"},{name:"Guam",flag:"flag-gu"},{name:"Guinea-Bissau",flag:"flag-gw"},{name:"Guyana",flag:"flag-gy"},{name:"Hong Kong",flag:"flag-hk"},{name:"Heard Island and McDonald Islands",flag:"flag-hm"},{name:"Honduras",flag:"flag-hn"},{name:"Croatia",flag:"flag-hr"},{name:"Haiti",flag:"flag-ht"},{name:"Hungary",flag:"flag-hu"},{name:"Indonesia",flag:"flag-id"},{name:"Ireland",flag:"flag-ie"},{name:"Israel",flag:"flag-il"},{name:"Isle of Man",flag:"flag-im"},{name:"India",flag:"flag-in"},{name:"British Indian Ocean Territory",flag:"flag-io"},{name:"Iraq",flag:"flag-iq"},{name:"Iran, Islamic Republic of",flag:"flag-ir"},{name:"Iceland",flag:"flag-is"},{name:"Italy",flag:"flag-it"},{name:"Jersey",flag:"flag-je"},{name:"Jamaica",flag:"flag-jm"},{name:"Jordan",flag:"flag-jo"},{name:"Japan",flag:"flag-jp"},{name:"Kenya",flag:"flag-ke"},{name:"Kyrgyzstan",flag:"flag-kg"},{name:"Cambodia",flag:"flag-kh"},{name:"Kiribati",flag:"flag-ki"},{name:"Comoros",flag:"flag-km"},{name:"Saint Kitts and Nevis",flag:"flag-kn"},{name:"Korea, Democratic People's Republic of",flag:"flag-kp"},{name:"Korea, Republic of",flag:"flag-kr"},{name:"Kuwait",flag:"flag-kw"},{name:"Cayman Islands",flag:"flag-ky"},{name:"Kazakhstan",flag:"flag-kz"},{name:"Lao People's Democratic Republic",flag:"flag-la"},{name:"Lebanon",flag:"flag-lb"},{name:"Saint Lucia",flag:"flag-lc"},{name:"Liechtenstein",flag:"flag-li"},{name:"Sri Lanka",flag:"flag-lk"},{name:"Liberia",flag:"flag-lr"},{name:"Lesotho",flag:"flag-ls"},{name:"Lithuania",flag:"flag-lt"},{name:"Luxembourg",flag:"flag-lu"},{name:"Latvia",flag:"flag-lv"},{name:"Libya",flag:"flag-ly"},{name:"Morocco",flag:"flag-ma"},{name:"Monaco",flag:"flag-mc"},{name:"Moldova, Republic of",flag:"flag-md"},{name:"Montenegro",flag:"flag-me"},{name:"Saint Martin (French part)",flag:"flag-mf"},{name:"Madagascar",flag:"flag-mg"},{name:"Marshall Islands",flag:"flag-mh"},{name:"Macedonia, the former Yugoslav Republic of",flag:"flag-mk"},{name:"Mali",flag:"flag-ml"},{name:"Myanmar",flag:"flag-mm"},{name:"Mongolia",flag:"flag-mn"},{name:"Macao",flag:"flag-mo"},{name:"Northern Mariana Islands",flag:"flag-mp"},{name:"Martinique",flag:"flag-mq"},{name:"Mauritania",flag:"flag-mr"},{name:"Montserrat",flag:"flag-ms"},{name:"Malta",flag:"flag-mt"},{name:"Mauritius",flag:"flag-mu"},{name:"Maldives",flag:"flag-mv"},{name:"Malawi",flag:"flag-mw"},{name:"Mexico",flag:"flag-mx"},{name:"Malaysia",flag:"flag-my"},{name:"Mozambique",flag:"flag-mz"},{name:"Namibia",flag:"flag-na"},{name:"New Caledonia",flag:"flag-nc"},{name:"Niger",flag:"flag-ne"},{name:"Norfolk Island",flag:"flag-nf"},{name:"Nigeria",flag:"flag-ng"},{name:"Nicaragua",flag:"flag-ni"},{name:"Netherlands",flag:"flag-nl"},{name:"Norway",flag:"flag-no"},{name:"Nepal",flag:"flag-np"},{name:"Nauru",flag:"flag-nr"},{name:"Niue",flag:"flag-nu"},{name:"New Zealand",flag:"flag-nz"},{name:"Oman",flag:"flag-om"},{name:"Panama",flag:"flag-pa"},{name:"Peru",flag:"flag-pe"},{name:"French Polynesia",flag:"flag-pf"},{name:"Papua New Guinea",flag:"flag-pg"},{name:"Philippines",flag:"flag-ph"},{name:"Pakistan",flag:"flag-pk"},{name:"Poland",flag:"flag-pl"},{name:"Saint Pierre and Miquelon",flag:"flag-pm"},{name:"Pitcairn",flag:"flag-pn"},{name:"Puerto Rico",flag:"flag-pr"},{name:"Palestine, State of",flag:"flag-ps"},{name:"Portugal",flag:"flag-pt"},{name:"Palau",flag:"flag-pw"},{name:"Paraguay",flag:"flag-py"},{name:"Qatar",flag:"flag-qa"},{name:"Réunion",flag:"flag-re"},{name:"Romania",flag:"flag-ro"},{name:"Serbia",flag:"flag-rs"},{name:"Russian Federation",flag:"flag-ru"},{name:"Rwanda",flag:"flag-rw"},{name:"Saudi Arabia",flag:"flag-sa"},{name:"Solomon Islands",flag:"flag-sb"},{name:"Seychelles",flag:"flag-sc"},{name:"Sudan",flag:"flag-sd"},{name:"Sweden",flag:"flag-se"},{name:"Singapore",flag:"flag-sg"},{name:"Saint Helena, Ascension and Tristan da Cunha",flag:"flag-sh"},{name:"Slovenia",flag:"flag-si"},{name:"Svalbard and Jan Mayen",flag:"flag-sj"},{name:"Slovakia",flag:"flag-sk"},{name:"Sierra Leone",flag:"flag-sl"},{name:"San Marino",flag:"flag-sm"},{name:"Senegal",flag:"flag-sn"},{name:"Somalia",flag:"flag-so"},{name:"Suriname",flag:"flag-sr"},{name:"South Sudan",flag:"flag-ss"},{name:"Sao Tome and Principe",flag:"flag-st"},{name:"El Salvador",flag:"flag-sv"},{name:"Sint Maarten (Dutch part)",flag:"flag-sx"},{name:"Syrian Arab Republic",flag:"flag-sy"},{name:"Swaziland",flag:"flag-sz"},{name:"Turks and Caicos Islands",flag:"flag-tc"},{name:"Chad",flag:"flag-td"},{name:"French Southern Territories",flag:"flag-tf"},{name:"Togo",flag:"flag-tg"},{name:"Thailand",flag:"flag-th"},{name:"Tajikistan",flag:"flag-tj"},{name:"Tokelau",flag:"flag-tk"},{name:"Timor-Leste",flag:"flag-tl"},{name:"Turkmenistan",flag:"flag-tm"},{name:"Tunisia",flag:"flag-tn"},{name:"Tonga",flag:"flag-to"},{name:"Turkey",flag:"flag-tr"},{name:"Trinidad and Tobago",flag:"flag-tt"},{name:"Tuvalu",flag:"flag-tv"},{name:"Taiwan, Province of China",flag:"flag-tw"},{name:"Tanzania, United Republic of",flag:"flag-tz"},{name:"Ukraine",flag:"flag-ua"},{name:"Uganda",flag:"flag-ug"},{name:"United States Minor Outlying Islands",flag:"flag-um"},{name:"United States of America",flag:"flag-us"},{name:"Uruguay",flag:"flag-uy"},{name:"Uzbekistan",flag:"flag-uz"},{name:"Holy See",flag:"flag-va"},{name:"Saint Vincent and the Grenadines",flag:"flag-vc"},{name:"Venezuela, Bolivarian Republic of",flag:"flag-ve"},{name:"Virgin Islands, British",flag:"flag-vg"},{name:"Virgin Islands, U.S.",flag:"flag-vi"},{name:"Viet Nam",flag:"flag-vn"},{name:"Vanuatu",flag:"flag-vu"},{name:"Wallis and Futuna",flag:"flag-wf"},{name:"Samoa",flag:"flag-ws"},{name:"Yemen",flag:"flag-ye"},{name:"Mayotte",flag:"flag-yt"},{name:"South Africa",flag:"flag-za"},{name:"Zambia",flag:"flag-zm"},{name:"Zimbabwe",flag:"flag-zw"}].filter(function(e){return-1!=e.name.toLowerCase().indexOf(a.toLowerCase())})}}]),angular.module("app").controller("SkillsCtrl",["$scope","$window",function(a,e){a.selectedSkill=0,a.skillsVisible=!1,a.labels=["Download Sales","In-Store Sales","Mail-Order Sales"],a.data=[300,500,100],$.getJSON("/skills.json",function(e){a.skills=e.filter(function(e){return e.enabled}),a.setSelectedSkill=function(e){a.selectedSkill=e,a.selectedSkill.chartOptions={cutoutPercentage:80,circumference:2*Math.PI,maintainAspectRatio:!0,tooltips:{enabled:!1}},a.selectedSkill.chartStyle={"background-image":"url(/skills/"+a.selectedSkill.image+")","background-repeat":"no-repeat","background-size":"60%","background-position":"50% 50%"}},a.setSelectedSkill(a.skills[0]),a.$apply()})}]),angular.module("app").controller("WorkoutCtrl",["$scope",function(t){t.timeRemaining=0;var n,i=[{name:"Jumping Jacks",split:t.rest=!1},{name:"Wall Sit",split:!1},{name:"Push-Up",split:!1},{name:"Crunch",split:!1},{name:"Step-Up",split:!0},{name:"Squat",split:!1},{name:"Triceps Dip",split:!1},{name:"Plank",split:!1},{name:"High Knees",split:!1},{name:"Lunge",split:!1},{name:"Push-Up with Rotation",split:!1},{name:"Side Plank",split:!0}];t.workout=function(){t.timeRemaining?(clearInterval(n),t.timer="",t.timeRemaining=0,t.rest=!1,t.exercise={name:"",split:!1}):(t.timeRemaining=45*i.length,n=setInterval(function(){if(t.timeRemaining--,0===t.timeRemaining)return t.exercise={name:"Finished! Congrats!",split:!1},t.timer="",t.timeRemaining=0,t.rest=!1,t.$apply(),clearInterval(n);var e=Math.floor(t.timeRemaining/45),a=t.timeRemaining-45*e;t.timer=30<a?a-30:a,t.rest=30<a,t.exercise=i[i.length-e-1],t.$apply()},1e3))}}]),angular.module("app").directive("head",["$rootScope","$state","$compile","$interpolate",function(t,l,n,i){var s=function(e){var a={href:e,rel:"stylesheet"};return a.href.match(/\.less$/)&&(a.rel="stylesheet/less"),a};return{restrict:"E",link:function(o,e){o.templateStyles=[];var a='<link ng-attr-rel="{{style.rel}}" ng-repeat="style in templateStyles" ng-href="{{style.href}}">';a=(a=a.replace(/\{\{/g,i.startSymbol())).replace(/\}\}/g,i.endSymbol()),e.append(n(a)(o)),t.$on("$stateChangeStart",function(e,a,t,n,i){o.templateStyles=function(e){for(var t={};""!==e.name;){var n=l.get("^",e);t[n.name]||(t[n.name]={}),e.templateStyleUrl&&(t[n.name][""]||(t[n.name][""]=s(e.templateStyleUrl))),e.views&&_.forEach(e.views,function(e,a){if(e.templateStyleUrl)return(a=a.split("@"))[1]?(t[a[1]]||(t[a[1]]={}),void(t[a[1]][a[0]]||(t[a[1]][a[0]]=s(e.templateStyleUrl)))):void(t[n.name][a[0]]=s(e.templateStyleUrl))}),e=n}var a=[];return _.forEach(t,function(e){_.forEach(e,function(e){_.includes(a,e)||a.push(e)})}),a.reverse(),a}(a)})}}}]),angular.module("app").service("BotsSvc",["$http",function(a){this.getLists=function(e){return a.get("/api/bots/lists/"+e._id)},this.saveList=function(e){return a.put("/api/bots/lists",e)},this.deleteList=function(e){return a.delete("/api/bots/lists/"+e._id)}}]),angular.module("app").service("CategoriesSvc",["$http",function(t){var i=this;i.getCategories=function(){return t.get("/api/categories")},i.getTasks=function(e){return t.get("/api/categories/"+e)},i.addCategory=function(e){return t.post("/api/categories/",e)},i.addTask=function(e,a){return t.post("/api/categories/"+e+"/tasks",a)},i.setPriorityList=function(e){i.choices=e,i.priorityList=[];for(var a=0;a<e.length;a++)for(var t=a+1;t<e.length;t++){var n=Math.round(Math.random());i.priorityList.push({id:0,firstChoice:e[0===n?a:t].name,secondChoice:e[0===n?t:a].name,choice:""})}for(a in function(e){var a,t,n=e.length;for(;n;)t=Math.floor(Math.random()*n--),a=e[n],e[n]=e[t],e[t]=a}(i.priorityList),i.priorityList)i.priorityList[a].id=a+1},i.getPriorityList=function(e){return i.priorityList}}]),angular.module("app").service("EmailSvc",["$http",function(a){this.send=function(e){return console.log(e),a.post("/api/email",e)}}]),angular.module("app").service("GameSvc",["$http",function(n){this.getHighscore=function(e,a){return n.get("/api/games/"+e+"/"+a+"/highscore")},this.setHighscore=function(e,a,t){return n.post("/api/games/"+e+"/"+a+"/highscore",{score:t})}}]),angular.module("app").service("LanguageSvc",function(){var a=this;a.languages=[{code:"EN",name:"English",flag:"flag-icon-gb"},{code:"NL",name:"Nederlands",flag:"flag-icon-nl"},{code:"FR",name:"Français",flag:"flag-icon-fr"}],a.text=[{code:"EN"},{code:"NL"},{code:"FR"}],a.selectedLanguage=a.languages[0],a.setLanguage=function(e){return a.selectedLanguage=e},a.getLanguage=function(){return a.selectedLanguage}}),angular.module("app").service("PostsSvc",["$http",function(a){this.fetch=function(){return a.get("/api/posts")},this.create=function(e){return a.post("/api/posts",e)},this.getPost=function(e){return a.get("/api/posts/"+e._id)}}]),angular.module("app").service("UserSvc",["$http",function(n){var t=this;t.getUser=function(){return n.get("/api/users")},t.setToken=function(e){return n.defaults.headers.common["X-Auth"]=e,t.getUser()},t.authenticate=function(e){return n.post("/api/users/authenticate",{user:e}).then(function(e){return window.localStorage.token=e.data,t.setToken(e.data)})},t.login=function(e){return n.get("/api/users/"+e+"/login").then(function(e){return window.localStorage.token=e.data,t.setToken(e.data)})},t.updateUser=function(e){return n.post("/api/users/"+e._id,{user:e}).then(function(){return t.getUser()})},t.checkPassword=function(e,a){return n.post("/api/users/"+e+"/verification",{password:a})},t.changePassword=function(e,a,t){return n.post("/api/users/"+e+"/password",{oldPassword:a,newPassword:t})},t.changeUsername=function(e,a){return n.post("/api/users/"+e+"/username",{newUsername:a}).then(function(){return t.getUser()})},t.logout=function(){window.localStorage.clear(),n.defaults.headers.common["X-Auth"]=""},t.createUser=function(e,a){return n.post("/api/users",{username:e,password:a}).then(function(){return t.login(e,a)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
